[{"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js":"1","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js":"2","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js":"3","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js":"4","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js":"5","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js":"6","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js":"7","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js":"8","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js":"9","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js":"10","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js":"11","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js":"12","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js":"13","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js":"14","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js":"15","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js":"16","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js":"17","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js":"18","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js":"19","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js":"20","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js":"21","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js":"22","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Loader.js":"23","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\ScrollToTop.js":"24","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\RankCard\\RankCard.js":"25","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\SalaryHistory\\SalaryHistory.js":"26","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Statistics.js":"27","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsPage.js":"28","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\StatisticsBar.js":"29","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchDetailOption.js":"30","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchOption.js":"31","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchCategory.js":"32","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\SalaryStackChart.js":"33","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\ChartArea.js":"34","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\ChartSelect.js":"35"},{"size":742,"mtime":1612770320867,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1606118173109,"results":"38","hashOfConfig":"37"},{"size":532,"mtime":1615202298408,"results":"39","hashOfConfig":"37"},{"size":431,"mtime":1612945160906,"results":"40","hashOfConfig":"37"},{"size":350,"mtime":1612771259439,"results":"41","hashOfConfig":"37"},{"size":4670,"mtime":1615188917834,"results":"42","hashOfConfig":"37"},{"size":15142,"mtime":1614857032283,"results":"43","hashOfConfig":"37"},{"size":356,"mtime":1614511545228,"results":"44","hashOfConfig":"37"},{"size":711,"mtime":1614575444433,"results":"45","hashOfConfig":"37"},{"size":2052,"mtime":1614692138743,"results":"46","hashOfConfig":"37"},{"size":2033,"mtime":1614739741702,"results":"47","hashOfConfig":"37"},{"size":1316,"mtime":1614575383045,"results":"48","hashOfConfig":"37"},{"size":314,"mtime":1613130485574,"results":"49","hashOfConfig":"37"},{"size":506,"mtime":1614499150175,"results":"50","hashOfConfig":"37"},{"size":2256,"mtime":1614771290533,"results":"51","hashOfConfig":"37"},{"size":4153,"mtime":1613991499350,"results":"52","hashOfConfig":"37"},{"size":2399,"mtime":1614074167010,"results":"53","hashOfConfig":"37"},{"size":1681,"mtime":1614840038585,"results":"54","hashOfConfig":"37"},{"size":4327,"mtime":1614845739861,"results":"55","hashOfConfig":"37"},{"size":4148,"mtime":1614931240052,"results":"56","hashOfConfig":"37"},{"size":6333,"mtime":1614747368428,"results":"57","hashOfConfig":"37"},{"size":2533,"mtime":1614677244366,"results":"58","hashOfConfig":"37"},{"size":247,"mtime":1614326171375,"results":"59","hashOfConfig":"37"},{"size":553,"mtime":1614845931857,"results":"60","hashOfConfig":"37"},{"size":1822,"mtime":1614694161569,"results":"61","hashOfConfig":"37"},{"size":2126,"mtime":1614840611860,"results":"62","hashOfConfig":"37"},{"size":3247,"mtime":1614933135424,"results":"63","hashOfConfig":"37"},{"size":404,"mtime":1614932669344,"results":"64","hashOfConfig":"37"},{"size":12611,"mtime":1614926436893,"results":"65","hashOfConfig":"37"},{"size":4610,"mtime":1614923382513,"results":"66","hashOfConfig":"37"},{"size":3611,"mtime":1614922644698,"results":"67","hashOfConfig":"37"},{"size":3335,"mtime":1614922628070,"results":"68","hashOfConfig":"37"},{"size":4156,"mtime":1615202499465,"results":"69","hashOfConfig":"37"},{"size":1313,"mtime":1615198735868,"results":"70","hashOfConfig":"37"},{"size":2487,"mtime":1615202230996,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"14xcp5j",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js",[],["152","153"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js",["154"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n  status: { danger: \"orange\" },\r\n});\r\n\r\nexport default theme;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js",["155","156"],"import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport CardContainer from \"./EmployeeCard/Card/CardContainer\";\r\nimport ScrollToTop from \"../UI/ScrollToTop\";\r\nimport axios from \"axios\";\r\nimport usePage from \"../../hooks/usePage\";\r\nimport useDialog from \"../../hooks/useDialog\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Loader from \"../UI/Loader\";\r\nimport { KeywordsProvider } from \"../SearchBar/context/KeywordsContext\";\r\n\r\nconst Board = () => {\r\n  const [employeeData, setEmployeeData] = useState(null);\r\n  const [scrollToTop, setScrollToTop] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [isNextLoading, setIsNextLoading] = useState(false);\r\n  const [dialog, openDialog, closeDialog] = useDialog(false);\r\n  const [page, setPage, initPage] = usePage(1);\r\n  const viewport = useRef(null);\r\n  //기본 직원정보 : 이름, 부서, 직급, 퇴사여부\r\n\r\n  const initBoard = useCallback(() => {\r\n    setEmployeeData(null);\r\n    initPage();\r\n  }, []);\r\n\r\n  const getEmployeeData = async (data, page, isIntersected) => {\r\n    let res;\r\n    //데이터 받아오기\r\n    const setLoader = (bool) => {\r\n      isIntersected === \"intersected\"\r\n        ? setIsNextLoading(bool)\r\n        : setIsLoading(bool);\r\n    };\r\n    try {\r\n      setLoader(true);\r\n      let url;\r\n      const page_no = isIntersected === \"intersected\" ? page.page + 1 : page;\r\n      url =\r\n        data.category === \"name\"\r\n          ? `http://localhost:3008/api/emp/${data.value}/${page_no}`\r\n          : `http://localhost:3008/api/emp/${data.category}/${data.value}/${page_no}`;\r\n      console.log(url);\r\n      res = await axios.get(url);\r\n\r\n      if (res.data.packet === null) {\r\n        setLoader(false);\r\n\r\n        return;\r\n      } else {\r\n        setLoader(false);\r\n        isIntersected === \"intersected\" ? setPage() : initBoard();\r\n        const employeeList = res.data.packet;\r\n        return setEmployeeData((prevData) => {\r\n          let updatedData;\r\n          if (prevData) {\r\n            const lastId = prevData[prevData.length - 1].id;\r\n            const newData = employeeList.map((el, idx) => ({\r\n              employee: el,\r\n              id: lastId + idx + 1,\r\n            }));\r\n            updatedData = prevData.concat(newData);\r\n          } else {\r\n            updatedData = employeeList.map((el, idx) => ({\r\n              employee: el,\r\n              id: idx,\r\n            }));\r\n            console.log(\"UPDATED_DATA\", updatedData);\r\n          }\r\n\r\n          return updatedData;\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setLoader(false);\r\n      console.log(\"catch error\", err.response.status);\r\n      openDialog(err.response.status);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    const scrollTop = (\"scroll\", e.srcElement.scrollingElement.scrollTop);\r\n    scrollTop < 200 && scrollTop >= 0\r\n      ? setScrollToTop(false)\r\n      : setScrollToTop(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [scrollToTop]);\r\n\r\n  const onSearchHandler = useCallback((data) => {\r\n    if (data.value) {\r\n      localStorage.setItem(\"CURRENT_KEY\", JSON.stringify(data));\r\n      getEmployeeData(data, page.defaultPage, \"unIntersected\");\r\n    } else {\r\n      window.alert(\"검색어를 입력하세요\");\r\n    }\r\n  }, []);\r\n\r\n  const handleOnScrollBtn = useCallback(() => {\r\n    setScrollToTop(false);\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  const board = isLoading ? (\r\n    <Loader size=\"large\" />\r\n  ) : (\r\n    <Grid container direction=\"column\" spacing={10}>\r\n      <Modal\r\n        open={dialog.open}\r\n        message={dialog.message}\r\n        handleClose={closeDialog}\r\n      />\r\n\r\n      <Grid item></Grid>\r\n      <Grid item container ref={viewport}>\r\n        <Grid item xs={false} sm={2} />\r\n        <Grid item xs={12} sm={8}>\r\n          <CardContainer\r\n            employeeData={employeeData}\r\n            page={page}\r\n            getEmployeeData={getEmployeeData}\r\n            isNextLoading={isNextLoading}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={false} sm={2} />\r\n      </Grid>\r\n      <ScrollToTop\r\n        onScroll={(e) => handleScroll(e)}\r\n        show={scrollToTop}\r\n        handleOnScrollBtn={handleOnScrollBtn}\r\n      />\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <KeywordsProvider>\r\n        <SearchBar onSubmitHandler={onSearchHandler} />\r\n      </KeywordsProvider>\r\n      {board}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js",["157","158","159"],"import React, {\r\n  useState,\r\n  memo,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  KeywordsStateContext,\r\n  KeywordsDispatchContext,\r\n} from \"./context/KeywordsContext\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SearchMenu from \"./components/SearchMenu\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport useCategory from \"../../hooks/useCategory\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: \"15px\",\r\n  },\r\n\r\n  home: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    border: \"none\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n    },\r\n  },\r\n  home_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  statistics: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    border: \"none\",\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  statistics_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    fontSize: 20,\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  link_mobile: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  searchContainer: {\r\n    position: \"relative\",\r\n    width: \"130%\",\r\n    transform: \"translateX(5%)\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"150%\",\r\n      transform: \"translateX(-5%)\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"110%\",\r\n      transform: \"translateX(-5%)\",\r\n    },\r\n  },\r\n  searchOption: {\r\n    position: \"relative\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      transform: \"translateX(20%)\",\r\n    },\r\n  },\r\n  searchButton: {\r\n    position: \"relative\",\r\n    transform: \"translateX(-140%)\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      transform: \"translateX(5%)\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      transform: \"translateX(40%)\",\r\n    },\r\n  },\r\n  submit: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    color: \"white\",\r\n  },\r\n  search_input: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    marginLeft: theme.spacing(3),\r\n    width: \"50%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  search_select: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginLeft: theme.spacing(3),\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(4.5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"&:hover\": {\r\n      width: \"100%\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    paddingLeft: 70,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n\r\n  navContainer: {},\r\n  sectionMobile: {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    right: 0,\r\n    transform: \"translate(-50%,-50%)\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      transform: \"translate(-25%,-50%)\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchBar = memo((props) => {\r\n  const classes = useStyles();\r\n  const { location, onSubmitHandler } = props;\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [hover, setHover] = useState();\r\n  const [searchOption, setSearchOption] = useState(\"이름검색\");\r\n  const [searchDetail, setSearchDetail] = useState(null);\r\n  const [category, setCategory] = useCategory(null);\r\n  const [name, setName] = useInput(\"\");\r\n  const [openKeywords, setOpenKeywords] = useState(false);\r\n  const keywords = useContext(KeywordsStateContext);\r\n  const dispatch = useContext(KeywordsDispatchContext);\r\n\r\n  const initLocalStorage = useCallback(() => {\r\n    dispatch({ type: \"init\" });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (keywords.length === 1) initLocalStorage();\r\n  }, []);\r\n\r\n  const getCategory = async (type) => {\r\n    let res;\r\n    let optionList;\r\n\r\n    try {\r\n      const url = `http://localhost:3008/api/${type}`;\r\n      res = await axios.get(url);\r\n      optionList =\r\n        type === \"dept\"\r\n          ? res.data.packet.map((obj) => {\r\n              return obj.dept_name;\r\n            })\r\n          : res.data.packet.map((obj) => {\r\n              return obj.title;\r\n            });\r\n\r\n      optionList.unshift(type);\r\n      setCategory(type, optionList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const submitData = (e) => {\r\n    e.preventDefault();\r\n    let data;\r\n    if (searchOption === \"이름검색\") {\r\n      dispatch({ type: \"add\", category: \"name\", keyword: name });\r\n      data = { category: \"name\", value: name };\r\n      onSubmitHandler(data);\r\n    } else {\r\n      dispatch({\r\n        type: \"add\",\r\n        category: searchDetail.category,\r\n        keyword: searchDetail.value,\r\n      });\r\n      data = {\r\n        category: searchDetail.category,\r\n        value: searchDetail.value,\r\n      };\r\n      onSubmitHandler(data);\r\n    }\r\n  };\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const setIndicator = (target) => {\r\n    setHover(target);\r\n  };\r\n\r\n  const changeBarType = (mode, location) => {\r\n    switch (mode) {\r\n      case \"desktop\":\r\n        return (\r\n          <>\r\n            {\" \"}\r\n            <AssessmentIcon\r\n              className={\r\n                hover === \"statistics\"\r\n                  ? `${classes.statistics_hover} icon_statistics`\r\n                  : `${classes.statistics} icon_statistics`\r\n              }\r\n            />\r\n            <Typography component=\"span\" noWrap>\r\n              <Link to=\"/statistics\" className={classes.link}>\r\n                통계 검색\r\n              </Link>\r\n            </Typography>\r\n          </>\r\n        );\r\n      case \"mobile\":\r\n        return (\r\n          <>\r\n            <AssessmentIcon />\r\n            통계 검색\r\n          </>\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const mobileMenuId = \"search-employee-menu-mobile\";\r\n\r\n  const handleSearchDetail = (selected) => {\r\n    setSearchDetail(selected);\r\n  };\r\n\r\n  const handleOptionClick = (selected) => {\r\n    handleSearchDetail(null);\r\n    setSearchOption(selected);\r\n\r\n    if (selected === \"부서검색\") {\r\n      getCategory(\"dept\");\r\n    } else {\r\n      getCategory(\"title\");\r\n    }\r\n  };\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link to=\"/\" className={classes.link_mobile}>\r\n        <MenuItem>\r\n          <HomeIcon />\r\n          홈으로\r\n        </MenuItem>\r\n      </Link>\r\n      <Link to=\"/statistics\" className={classes.link_mobile}>\r\n        <MenuItem>{changeBarType(\"mobile\", location)}</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  const handleKeywords = (bool) => {\r\n    setOpenKeywords(bool);\r\n  };\r\n  {\r\n    /********************구현 부분***************************/\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" className={classes.toolbarContainer}>\r\n            <Grid\r\n              item\r\n              xs={false}\r\n              sm={false}\r\n              md={2}\r\n              className={classes.titleContainer}\r\n            >\r\n              <Typography className={classes.title}>Employee Mark</Typography>\r\n            </Grid>\r\n            <Grid item xs={10} sm={8} md={7} className={classes.formContainer}>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  submitData(e);\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  className={classes.searchContainer}\r\n                >\r\n                  <Grid item xs={2} className={classes.searchOption}>\r\n                    {\" \"}\r\n                    <SearchMenu\r\n                      selected={searchOption}\r\n                      handleOptionClick={handleOptionClick}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={8} className={classes.searchInputContainer}>\r\n                    {\" \"}\r\n                    <SearchInput\r\n                      searchOption={searchOption}\r\n                      searchDetail={searchDetail}\r\n                      handleSearchDetail={handleSearchDetail}\r\n                      category={category}\r\n                      classes={classes}\r\n                      value={name}\r\n                      onChange={setName}\r\n                      handleKeywords={handleKeywords}\r\n                      openKeywords={openKeywords}\r\n                      keywords={keywords}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2} className={classes.searchButton}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => {\r\n                        submitData(e);\r\n                      }}\r\n                    >\r\n                      검색\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={3} className={classes.navContainer}>\r\n              <div className={classes.grow} />\r\n              <div className={classes.sectionDesktop}>\r\n                <div className={classes.menu}>\r\n                  <div\r\n                    className={\r\n                      hover === \"home\" ? classes.home_hover : classes.home\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"home\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    <HomeIcon\r\n                      className={\r\n                        hover === \"home\"\r\n                          ? `${classes.home_hover} icon_home`\r\n                          : `${classes.home} icon_home`\r\n                      }\r\n                    />\r\n                    <Typography component=\"span\" noWrap>\r\n                      <Link to=\"/\" className={classes.link}>\r\n                        홈으로\r\n                      </Link>\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      hover === \"statistics\"\r\n                        ? classes.statistics_hover\r\n                        : classes.statistics\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"statistics\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    {changeBarType(\"desktop\", location)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js",["160","161"],"import React, { memo, useState } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Loader from \"../../../../UI/Loader\";\r\n// import SalaryHistory from \"../../../../Graph/SalaryHistory/SalaryHistory\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  unClicked: {\r\n    flex: \"1fr\",\r\n    padding: 1,\r\n    color: \"#039BE5\",\r\n    border: \"1px solid #039BE5\",\r\n    backgroundColor: \"transparent\",\r\n    zIndex: 500,\r\n    cursor: \"pointer\",\r\n    boxSizing: \"content-box\",\r\n    alignItems: \"flex-start\",\r\n    margin: 4,\r\n    \"&:focus\": {\r\n      backgroundColor: \"#0288D1\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n\r\n  clicked: {\r\n    flex: \"1fr\",\r\n    padding: 1,\r\n    cursor: \"pointer\",\r\n    boxSizing: \"content-box\",\r\n    alignItems: \"flex-start\",\r\n    margin: 4,\r\n    backgroundColor: \"#0288D1\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    \"&:focus\": {\r\n      backgroundColor: \"#0288D1\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst History = memo((props) => {\r\n  const [historyType, setHistoryType] = useState();\r\n\r\n  const btnClasses = useStyles(); //버튼\r\n  const { data, isLoading, expanded, onChangeAccordion, classes } = props;\r\n\r\n  const changeTypeHandler = (type) => {\r\n    setHistoryType(type);\r\n  };\r\n\r\n  const trackType = historyType ? historyType : \"salary\";\r\n\r\n  const historyContent = isLoading ? <Loader size=\"small\" /> : null;\r\n\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={onChangeAccordion(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel12bh-content\"\r\n          id=\"panel12bh-header\"\r\n        >\r\n          <Typography className={classes.AccordionSummary_header}>\r\n            부서이동 및 연봉변동 기록\r\n          </Typography>\r\n        </AccordionSummary>\r\n        {expanded !== \"panel1\" ? null : (\r\n          <AccordionDetails className={classes.AccordionDetails}>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"column\"\r\n              spacing={4}\r\n              className={classes.trackWrapper}\r\n            >\r\n              <Grid item>\r\n                <div className={btnClasses.wrapper}>\r\n                  <Button\r\n                    className={\r\n                      historyType === null || historyType === \"dept\"\r\n                        ? btnClasses.clicked\r\n                        : btnClasses.unClicked\r\n                    }\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    disableRipple\r\n                    onFocus={() => changeTypeHandler(\"dept\")}\r\n                  >\r\n                    부서 변동\r\n                  </Button>\r\n                  <Button\r\n                    className={\r\n                      historyType === \"salary\"\r\n                        ? btnClasses.clicked\r\n                        : btnClasses.unClicked\r\n                    }\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    disableRipple\r\n                    onFocus={() => {\r\n                      changeTypeHandler(\"salary\");\r\n                    }}\r\n                  >\r\n                    연봉 변동\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Grid item className={classes.track}>\r\n                {historyContent}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        )}\r\n      </Accordion>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default History;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js",["162"],"import React, { useReducer, createContext, useMemo } from \"react\";\r\n\r\nconst initState = [\"recent keyword\"];\r\n\r\nconst keywordsReducer = (state = initState, action) => {\r\n  const storage = JSON.parse(localStorage.getItem(\"RECENT\"));\r\n\r\n  switch (action.type) {\r\n    case \"init\":\r\n      let initializedState;\r\n      if (storage === null) {\r\n        return;\r\n      } else if (state.length === 1 && storage !== null) {\r\n        initializedState = state.concat(storage);\r\n        return initializedState;\r\n      } else {\r\n        return;\r\n      }\r\n\r\n    case \"add\":\r\n      const newKeyword = {\r\n        category: action.category,\r\n        index: Date.now(),\r\n        value: action.keyword,\r\n      };\r\n      const addedState = state.concat(newKeyword);\r\n      if (storage === null) {\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedState.slice()));\r\n      } else {\r\n        const addedStorage = storage.slice();\r\n        addedStorage.push(newKeyword);\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedStorage));\r\n      }\r\n\r\n      return addedState;\r\n    case \"delete\":\r\n      console.log(\"DELETE\", action.identifier);\r\n      const deletedState = state.filter((el, idx) => {\r\n        return el.index !== action.identifier;\r\n      });\r\n      console.log(\"deletedState\", deletedState);\r\n      const deletedStorage = storage.filter((el, idx) => {\r\n        return el.index !== action.identifier;\r\n      });\r\n      localStorage.setItem(\"RECENT\", JSON.stringify(deletedStorage));\r\n      return deletedState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/*이제, state 와 dispatch 를 Context 통하여 다른 컴포넌트에서 바로 사용 할 수 있게 해줄건데요, 우리는 하나의 Context 를 만들어서 state 와 dispatch 를 함께 넣어주는 대신에, 두개의 Context 를 만들어서 따로 따로 넣어줄 것입니다. 이렇게 하면 dispatch 만 필요한 컴포넌트에서 불필요한 렌더링을 방지 할 수 있습니다. 추가적으로, 사용하게 되는 과정에서 더욱 편리하기도 합니다.\r\n\r\n */\r\nexport const KeywordsStateContext = createContext();\r\nexport const KeywordsDispatchContext = createContext();\r\n\r\nexport const KeywordsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(keywordsReducer, initState);\r\n\r\n  return (\r\n    <KeywordsStateContext.Provider value={state}>\r\n      <KeywordsDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </KeywordsDispatchContext.Provider>\r\n    </KeywordsStateContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Loader.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\ScrollToTop.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\RankCard\\RankCard.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\SalaryHistory\\SalaryHistory.js",[],["163","164"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Statistics.js",["165","166"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport useDialog from \"../../hooks/useDialog\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Loader from \"../UI/Loader\";\r\nimport StatisticsBar from \"./StatisticsBar/StatisticsBar\";\r\nimport StatisticsPage from \"./StatisticsPage\";\r\n\r\nconst Statistics = (props) => {\r\n  const [dialog, openDialog, closeDialog] = useDialog(false);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  //   /api/stat/distribution/above/:salary\tget\t특정 급여 이상의 부서별 인원 분포\r\n  // /api/stat/distribution/below/:salary\tget\t특정 급여 이하의 부서별 인원 분포\r\n  // /api/stat/distribution/dept/salary\tget\t각 부서내 10000간격의 급여별 인원 분포\r\n  // -> 파이형 or 도넛형 그래프 7개\r\n  // /api/stat/distribution/emp/salary\tget\t10000간격의 급여별 전 직원 인원 분포\r\n  // -> 파이형 or 도넛형 그래프 1개 큰것\r\n\r\n  // 탭 : 연봉통계자료 > 조직별 통계> 전체/부서\r\n  //                    급여별 통계> track\r\n\r\n  const getStatisticsData = async (dataType) => {\r\n    let res;\r\n    try {\r\n      setIsLoading(true);\r\n      let url;\r\n      if (dataType.type === \"emp\") {\r\n        url = `http://localhost:3008/api/stat/distribution/emp/salary`;\r\n      } else if (dataType.type === \"dept\") {\r\n        url = `http://localhost:3008/api/stat/distribution/dept/salary`;\r\n      } else if (dataType.type === \"below\") {\r\n        url = `http://localhost:3008/api/stat/distribution/below/${dataType.salary}`;\r\n      } else if (dataType.type === \"above\") {\r\n        url = `http://localhost:3008/api/stat/distribution/above/${dataType.salary}`;\r\n      }\r\n\r\n      console.log(\"URL\", url);\r\n      res = await axios.get(url);\r\n      const result = res.data.packet;\r\n      console.log(\"RESULT\", result);\r\n      if (result === null) {\r\n        setIsLoading(false);\r\n        return;\r\n      } else {\r\n        setIsLoading(false);\r\n        setData(result);\r\n      }\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(\"catch error\", err.response.status);\r\n      openDialog(err.response.status);\r\n    }\r\n  };\r\n\r\n  const onSearchHandler = useCallback((dataType) => {\r\n    // dataType = {type:\"emp\",\"dept\",\"below\",\"above\" salary:\"default\", number }\r\n    if (dataType.type) {\r\n      console.log(\"DATA_TYPE\", dataType);\r\n      getStatisticsData(dataType);\r\n    } else {\r\n      window.alert(\"검색어를 입력하세요\");\r\n    }\r\n  }, []);\r\n\r\n  const statistics = isLoading ? (\r\n    <Loader size=\"large\" />\r\n  ) : (\r\n    <Grid container direction=\"column\" spacing={10}>\r\n      <Modal\r\n        open={dialog.open}\r\n        message={dialog.message}\r\n        handleClose={closeDialog}\r\n      />\r\n      <Grid item></Grid>\r\n      <Grid item container>\r\n        <Grid item xs={false} sm={1} />\r\n        <Grid item xs={12} sm={10}>\r\n          <StatisticsPage data={data} />\r\n        </Grid>\r\n        <Grid item xs={false} sm={1} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StatisticsBar onSubmitHandler={onSearchHandler} />\r\n      {statistics}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsPage.js",["167","168","169"],"import React, { useState, useEffect, memo } from \"react\";\r\nimport SalaryStackChart from \"../../SalaryStackChart\";\r\n\r\nconst StatisticsPage = memo((props) => {\r\n  const [sth, setSth] = useState();\r\n  const { data } = props;\r\n\r\n  console.log(\"STATISTICS PAGE\", data);\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      <SalaryStackChart data={data} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default StatisticsPage;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\StatisticsBar.js",["170"],"import React, { useState, memo } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SearchOption from \"./components/SearchOption\";\r\nimport SearchDetailOption from \"./components/SearchDetailOption\";\r\nimport SearchCategory from \"./components/SearchCategory\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  home: {\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n\r\n    \"& .icon_home\": {\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  home_hover: {\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .icon_home\": {\r\n      width: 30,\r\n      height: 30,\r\n    },\r\n  },\r\n  statistics: {\r\n    cursor: \"pointer\",\r\n    width: 100,\r\n    height: 30,\r\n    \"& .icon_statistics\": {\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  statistics_hover: {\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .icon_statistics\": {\r\n      width: 30,\r\n      height: 30,\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    fontSize: 23,\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  link_mobile: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  searchContainer: {\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"150%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"110%\",\r\n    },\r\n  },\r\n\r\n  submit: {\r\n    color: \"white\",\r\n  },\r\n  search_track: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    marginLeft: theme.spacing(3),\r\n    width: \"50%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  search_select: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginLeft: theme.spacing(3),\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(4.5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  trackRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  trackInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    right: 0,\r\n    transform: \"translate(-50%,-50%)\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      transform: \"translate(-25%,-50%)\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\n//   /api/stat/distribution/above/:salary\tget\t특정 급여 이상의 부서별 인원 분포\r\n// /api/stat/distribution/below/:salary\tget\t특정 급여 이하의 부서별 인원 분포\r\n// --> 도넛형\r\n// /api/stat/distribution/dept/salary\tget\t각 부서내 10000간격의 급여별 인원 분포\r\n// --> 히스토그램\r\n// /api/stat/distribution/emp/salary\tget\t10000간격의 급여별 전 직원 인원 분포\r\n// -> 히스토그램\r\n\r\n// 탭 : 연봉통계자료 > 조직별 통계> 전체/부서\r\n//                    급여별 통계> track\r\n\r\n// searchOption = \"연봉통계\"\r\n// category = \"조직별 통계\", \"급여별 통계\"\r\n// searchDetail = (카테고리:조직별)\"전체\"(/api/stat/distribution/emp/salary), \"부서\"(/api/stat/distribution/dept/salary) // (카테고리:급여별) - track컴포넌트\r\n\r\nconst StatisticsBar = memo((props) => {\r\n  const classes = useStyles();\r\n  const { onSubmitHandler } = props;\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [hover, setHover] = useState();\r\n  const [searchOption, setSearchOption] = useState(null);\r\n  const [searchDetail, setSearchDetail] = useState(null);\r\n  const [searchCategory, setSearchCategory] = useState(null);\r\n\r\n  const submitData = (e) => {\r\n    e.preventDefault();\r\n    if (searchOption === \"조직\") {\r\n      onSubmitHandler(searchDetail); // Statistics 페이지에서 props로 오는 함수\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const setIndicator = (target) => {\r\n    setHover(target);\r\n  };\r\n\r\n  const changeBarType = (mode) => {\r\n    switch (mode) {\r\n      case \"desktop\":\r\n        return (\r\n          <>\r\n            <Grid item>\r\n              <PeopleAltIcon\r\n                className={\r\n                  hover === \"statistics\"\r\n                    ? `${classes.statistics_hover} icon_statistics`\r\n                    : `${classes.statistics} icon_statistics`\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography component=\"span\" noWrap>\r\n                <Link to=\"/board\" className={classes.link}>\r\n                  직원 검색\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </>\r\n        );\r\n      case \"mobile\":\r\n        return (\r\n          <>\r\n            <PeopleAltIcon />\r\n            직원 검색\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const mobileMenuId = \"search-employee-menu-mobile\";\r\n\r\n  const handleCategoryClick = (selected) => {\r\n    setSearchCategory(selected);\r\n  };\r\n\r\n  const handleSearchDetail = (selected) => {\r\n    setSearchDetail(selected);\r\n  };\r\n\r\n  const handleOptionClick = (selected) => {\r\n    handleSearchDetail(null);\r\n    setSearchOption(selected);\r\n  };\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link to=\"/\" className={classes.link_mobile}>\r\n        <MenuItem>\r\n          <HomeIcon />\r\n          홈으로\r\n        </MenuItem>\r\n      </Link>\r\n      <Link to=\"/board\" className={classes.link_mobile}>\r\n        <MenuItem>{changeBarType(\"mobile\")}</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  {\r\n    /********************구현 부분***************************/\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" className={classes.toolbarContainer}>\r\n            <Grid\r\n              item\r\n              xs={false}\r\n              sm={false}\r\n              md={2}\r\n              className={classes.titleContainer}\r\n            >\r\n              <Typography className={classes.title}>Employee Mark</Typography>\r\n            </Grid>\r\n            <Grid item xs={10} sm={8} md={7} className={classes.formContainer}>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  submitData(e);\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  spacing={3}\r\n                  className={classes.searchContainer}\r\n                >\r\n                  <Grid item>\r\n                    <SearchCategory\r\n                      searchCategory={searchCategory}\r\n                      handleCategoryClick={handleCategoryClick}\r\n                    />\r\n                  </Grid>\r\n                  <Grid MenuItem>\r\n                    <SearchOption\r\n                      selected={searchOption}\r\n                      handleOptionClick={handleOptionClick}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <SearchDetailOption\r\n                      searchOption={searchOption}\r\n                      searchDetail={searchDetail}\r\n                      handleSearchDetail={handleSearchDetail}\r\n                      classes={classes}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => {\r\n                        submitData(e);\r\n                      }}\r\n                    >\r\n                      검색\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item container xs={2} sm={2} md={3}>\r\n              {/* <Grid item xs={1} style={{ border: \"1px solid red\" }} /> */}\r\n              <Grid item container className={classes.sectionDesktop}>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.menu}\r\n                  alignItems=\"center\"\r\n                  justify=\"flex-end\"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={5}\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    className={\r\n                      hover === \"home\" ? classes.home_hover : classes.home\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"home\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    <Grid item>\r\n                      <HomeIcon\r\n                        className={\r\n                          hover === \"home\"\r\n                            ? `${classes.home_hover} icon_home`\r\n                            : `${classes.home} icon_home`\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography component=\"span\" noWrap>\r\n                        <Link to=\"/\" className={classes.link}>\r\n                          홈으로\r\n                        </Link>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    xs={5}\r\n                    className={\r\n                      hover === \"statistics\"\r\n                        ? classes.statistics_hover\r\n                        : classes.statistics\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"statistics\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    {changeBarType(\"desktop\")}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StatisticsBar;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchDetailOption.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchOption.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchCategory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\SalaryStackChart.js",["171"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\ChartArea.js",["172","173"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\ChartSelect.js",["174"],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":12},{"ruleId":"183","severity":1,"message":"184","line":26,"column":6,"nodeType":"185","endLine":26,"endColumn":8,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":104,"column":6,"nodeType":"185","endLine":104,"endColumn":8,"suggestions":"188"},{"ruleId":"179","severity":1,"message":"189","line":24,"column":8,"nodeType":"181","messageId":"182","endLine":24,"endColumn":21},{"ruleId":"183","severity":1,"message":"190","line":289,"column":6,"nodeType":"185","endLine":289,"endColumn":8,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":423,"column":3,"nodeType":"194","messageId":"195","endLine":425,"endColumn":4},{"ruleId":"179","severity":1,"message":"196","line":59,"column":11,"nodeType":"181","messageId":"182","endLine":59,"endColumn":15},{"ruleId":"179","severity":1,"message":"197","line":65,"column":9,"nodeType":"181","messageId":"182","endLine":65,"endColumn":18},{"ruleId":"179","severity":1,"message":"198","line":1,"column":44,"nodeType":"181","messageId":"182","endLine":1,"endColumn":51},{"ruleId":"175","replacedBy":"199"},{"ruleId":"177","replacedBy":"200"},{"ruleId":"179","severity":1,"message":"201","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":66,"column":6,"nodeType":"185","endLine":66,"endColumn":8,"suggestions":"203"},{"ruleId":"179","severity":1,"message":"201","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"204","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":13},{"ruleId":"179","severity":1,"message":"205","line":5,"column":15,"nodeType":"181","messageId":"182","endLine":5,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":286,"column":3,"nodeType":"194","messageId":"195","endLine":288,"endColumn":4},{"ruleId":"183","severity":1,"message":"206","line":58,"column":6,"nodeType":"185","endLine":58,"endColumn":8,"suggestions":"207"},{"ruleId":"179","severity":1,"message":"208","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":11,"column":3,"nodeType":"211","messageId":"212","endLine":48,"endColumn":4},{"ruleId":"179","severity":1,"message":"213","line":27,"column":16,"nodeType":"181","messageId":"182","endLine":27,"endColumn":23},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'initPage'. Either include it or remove the dependency array.","ArrayExpression",["216"],"React Hook useCallback has missing dependencies: 'getEmployeeData' and 'page.defaultPage'. Either include them or remove the dependency array.",["217"],"'PeopleAltIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'initLocalStorage' and 'keywords.length'. Either include them or remove the dependency array.",["218"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'data' is assigned a value but never used.","'trackType' is assigned a value but never used.","'useMemo' is defined but never used.",["214"],["215"],"'useEffect' is defined but never used.","React Hook useCallback has a missing dependency: 'getStatisticsData'. Either include it or remove the dependency array.",["219"],"'sth' is assigned a value but never used.","'setSth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["220"],"'memo' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [initPage]",{"range":"231","text":"232"},"Update the dependencies array to be: [getEmployeeData, page.defaultPage]",{"range":"233","text":"234"},"Update the dependencies array to be: [initLocalStorage, keywords.length]",{"range":"235","text":"236"},"Update the dependencies array to be: [getStatisticsData]",{"range":"237","text":"238"},"Update the dependencies array to be: [data]",{"range":"239","text":"240"},[1067,1069],"[initPage]",[3425,3427],"[getEmployeeData, page.defaultPage]",[7296,7298],"[initLocalStorage, keywords.length]",[2359,2361],"[getStatisticsData]",[1425,1427],"[data]"]