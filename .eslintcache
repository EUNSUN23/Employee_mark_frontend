[{"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js":"1","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js":"2","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js":"3","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js":"4","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js":"5","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js":"6","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js":"7","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js":"8","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js":"9","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js":"10","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js":"11","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js":"12","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js":"13","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js":"14","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js":"15","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js":"16","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js":"17","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js":"18","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js":"19","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Loader.js":"20","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\ScrollToTop.js":"21","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\RankCard\\RankCard.js":"22","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\SalaryHistory\\SalaryHistory.js":"23","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Statistics.js":"24","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\StatisticsBar.js":"25","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchDetailOption.js":"26","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchOption.js":"27","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\keywords.js":"28","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\searchEMP.js":"29","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\actionTypes.js":"30","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\shared\\utility.js":"31","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\keywords.js":"32","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\searchBar.js":"33","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\searchBar.js":"34","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\statBar.js":"35","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\statBar.js":"36","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchInput.js":"37","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchTrack.js":"38","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\statPage.js":"39","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\DeptChart.js":"40","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\statPage.js":"41","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsPage\\SalaryDist.js":"42","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsPage\\SalaryStack.js":"43","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\RangeSelector.js":"44","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\DistPie.js":"45","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\SalaryHistory\\TransferHistory.js":"46","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\Track.js":"47","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\DistBar.js":"48","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\CustomizedLabel.js":"49","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\CustomizedTick.js":"50","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\searchEmp.js":"51","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\searchEMP.js":"52","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\searchEmp.js":"53","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\customItem\\label.js":"54","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\CustomizedFilter.js":"55","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\SalaryFilter.js":"56","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\CustomSwiper.js":"57","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\EmpPie.js":"58","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\CustomizedPieLabel.js":"59","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\home.js":"60","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\home.js":"61","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\MainLoader.js":"62","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\shared\\styleItems.js":"63","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Home.js":"64","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\EmpRadar.js":"65","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\CustomizedRadarTick.js":"66","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\shared\\svgIcons.js":"67","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\CustomizedRadarLabel.js":"68","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\CustomizedDot.js":"69","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\DeptEmpRadar.js":"70","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\TitleEmpRadar.js":"71"},{"size":1809,"mtime":1617334654184,"results":"72","hashOfConfig":"73"},{"size":362,"mtime":1606118173109,"results":"74","hashOfConfig":"73"},{"size":1099,"mtime":1617366224262,"results":"75","hashOfConfig":"73"},{"size":431,"mtime":1612945160906,"results":"76","hashOfConfig":"73"},{"size":2211,"mtime":1617352338799,"results":"77","hashOfConfig":"73"},{"size":13107,"mtime":1616896826728,"results":"78","hashOfConfig":"73"},{"size":356,"mtime":1614511545228,"results":"79","hashOfConfig":"73"},{"size":2482,"mtime":1616742710189,"results":"80","hashOfConfig":"73"},{"size":2088,"mtime":1616143688081,"results":"81","hashOfConfig":"73"},{"size":1380,"mtime":1616742351527,"results":"82","hashOfConfig":"73"},{"size":538,"mtime":1616896995609,"results":"83","hashOfConfig":"73"},{"size":2472,"mtime":1616742657067,"results":"84","hashOfConfig":"73"},{"size":4353,"mtime":1615461034947,"results":"85","hashOfConfig":"73"},{"size":1454,"mtime":1615810792555,"results":"86","hashOfConfig":"73"},{"size":1681,"mtime":1616147683787,"results":"87","hashOfConfig":"73"},{"size":4327,"mtime":1614845739861,"results":"88","hashOfConfig":"73"},{"size":4224,"mtime":1616143306525,"results":"89","hashOfConfig":"73"},{"size":7217,"mtime":1615872221301,"results":"90","hashOfConfig":"73"},{"size":2533,"mtime":1614677244366,"results":"91","hashOfConfig":"73"},{"size":247,"mtime":1614326171375,"results":"92","hashOfConfig":"73"},{"size":553,"mtime":1614845931857,"results":"93","hashOfConfig":"73"},{"size":1822,"mtime":1614694161569,"results":"94","hashOfConfig":"73"},{"size":1027,"mtime":1616140828261,"results":"95","hashOfConfig":"73"},{"size":1459,"mtime":1616733754653,"results":"96","hashOfConfig":"73"},{"size":11698,"mtime":1616390216998,"results":"97","hashOfConfig":"73"},{"size":4508,"mtime":1616137096353,"results":"98","hashOfConfig":"73"},{"size":3855,"mtime":1616135679868,"results":"99","hashOfConfig":"73"},{"size":729,"mtime":1615870900184,"results":"100","hashOfConfig":"73"},{"size":2035,"mtime":1616745746405,"results":"101","hashOfConfig":"73"},{"size":1681,"mtime":1617336710495,"results":"102","hashOfConfig":"73"},{"size":8830,"mtime":1617785141918,"results":"103","hashOfConfig":"73"},{"size":1352,"mtime":1615871221564,"results":"104","hashOfConfig":"73"},{"size":2243,"mtime":1617785692920,"results":"105","hashOfConfig":"73"},{"size":1197,"mtime":1616133976558,"results":"106","hashOfConfig":"73"},{"size":764,"mtime":1616395982005,"results":"107","hashOfConfig":"73"},{"size":505,"mtime":1616395668729,"results":"108","hashOfConfig":"73"},{"size":950,"mtime":1616481291083,"results":"109","hashOfConfig":"73"},{"size":5249,"mtime":1616496496418,"results":"110","hashOfConfig":"73"},{"size":1552,"mtime":1616390108404,"results":"111","hashOfConfig":"73"},{"size":7413,"mtime":1617783357082,"results":"112","hashOfConfig":"73"},{"size":944,"mtime":1616396500208,"results":"113","hashOfConfig":"73"},{"size":1318,"mtime":1616657406469,"results":"114","hashOfConfig":"73"},{"size":1207,"mtime":1617089502838,"results":"115","hashOfConfig":"73"},{"size":1240,"mtime":1616396691438,"results":"116","hashOfConfig":"73"},{"size":2627,"mtime":1616655491227,"results":"117","hashOfConfig":"73"},{"size":125,"mtime":1616142003834,"results":"118","hashOfConfig":"73"},{"size":6667,"mtime":1616142069064,"results":"119","hashOfConfig":"73"},{"size":2536,"mtime":1616737806101,"results":"120","hashOfConfig":"73"},{"size":2770,"mtime":1617182224947,"results":"121","hashOfConfig":"73"},{"size":934,"mtime":1616818826125,"results":"122","hashOfConfig":"73"},{"size":2035,"mtime":1616745746405,"results":"123","hashOfConfig":"73"},{"size":1186,"mtime":1616745756669,"results":"124","hashOfConfig":"73"},{"size":1186,"mtime":1616745756669,"results":"125","hashOfConfig":"73"},{"size":0,"mtime":1616814411648,"results":"126","hashOfConfig":"73"},{"size":3305,"mtime":1616821483385,"results":"127","hashOfConfig":"73"},{"size":3666,"mtime":1617261958297,"results":"128","hashOfConfig":"73"},{"size":3703,"mtime":1617014773936,"results":"129","hashOfConfig":"73"},{"size":5974,"mtime":1617289546677,"results":"130","hashOfConfig":"73"},{"size":1534,"mtime":1617286507911,"results":"131","hashOfConfig":"73"},{"size":762,"mtime":1617348000696,"results":"132","hashOfConfig":"73"},{"size":1985,"mtime":1617349796586,"results":"133","hashOfConfig":"73"},{"size":340,"mtime":1617345140784,"results":"134","hashOfConfig":"73"},{"size":82,"mtime":1617350008931,"results":"135","hashOfConfig":"73"},{"size":2316,"mtime":1617779572032,"results":"136","hashOfConfig":"73"},{"size":1518,"mtime":1617807842795,"results":"137","hashOfConfig":"73"},{"size":2248,"mtime":1617794945935,"results":"138","hashOfConfig":"73"},{"size":71248,"mtime":1617777653421,"results":"139","hashOfConfig":"73"},{"size":939,"mtime":1617692265702,"results":"140","hashOfConfig":"73"},{"size":485,"mtime":1617691672190,"results":"141","hashOfConfig":"73"},{"size":1588,"mtime":1617791679043,"results":"142","hashOfConfig":"73"},{"size":1622,"mtime":1617791688410,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"14xcp5j",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"146"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"146"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"146"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"162"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"146"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"146"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"146"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"146"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"146"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"146"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"146"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"146"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"146"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"146"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js",[],["312","313"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js",["314"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Board from \"./components/Board/Board\";\nimport Home from \"./components/Home/Home\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport { setCategory } from \"./store/actions/searchBar\";\nimport { getEmp } from \"./store/actions/home\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const categoryLoaded = useSelector(\n    (state) => state.searchBar.category,\n    shallowEqual\n  );\n  const empLoaded = useSelector((state) => state.home.total, shallowEqual);\n  useEffect(() => {\n    if (categoryLoaded && empLoaded) return;\n    !categoryLoaded && dispatch(setCategory());\n    !empLoaded && dispatch(getEmp());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact render={() => <Home />} />\n        <Route path=\"/board\" render={() => <Board />} />\n        <Route path=\"/statistics\" render={() => <Statistics />} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js",["315"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n  status: { danger: \"orange\" },\r\n});\r\n\r\nexport default theme;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js",["316","317"],"import React, { useState, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport SearchMenu from \"./components/SearchMenu\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { initKeywords, addKeywords } from \"../../store/actions/keywords\";\r\nimport { getEmpData } from \"../../store/actions/searchEmp\";\r\nimport { isValid } from \"../../shared/utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: \"15px\",\r\n  },\r\n\r\n  home: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    border: \"none\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n    },\r\n  },\r\n  home_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  statistics: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    border: \"none\",\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  statistics_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    fontSize: 20,\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  link_mobile: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  searchContainer: {\r\n    position: \"relative\",\r\n    width: \"130%\",\r\n    transform: \"translateX(5%)\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"150%\",\r\n      transform: \"translateX(-5%)\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"110%\",\r\n      transform: \"translateX(-5%)\",\r\n    },\r\n  },\r\n  searchOption: {\r\n    position: \"relative\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      transform: \"translateX(20%)\",\r\n    },\r\n  },\r\n  searchButton: {\r\n    position: \"relative\",\r\n    transform: \"translateX(-140%)\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      transform: \"translateX(5%)\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      transform: \"translateX(40%)\",\r\n    },\r\n  },\r\n  submit: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    color: \"white\",\r\n  },\r\n  search_input: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    marginLeft: theme.spacing(3),\r\n    width: \"50%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  search_select: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginLeft: theme.spacing(3),\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(4.5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"&:hover\": {\r\n      width: \"100%\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    paddingLeft: 70,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n\r\n  navContainer: {},\r\n  sectionMobile: {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    right: 0,\r\n    transform: \"translate(-50%,-50%)\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      transform: \"translate(-25%,-50%)\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchBar = memo(() => {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [hover, setHover] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const keywords = useSelector((state) => state.keywords.keywords);\r\n  const page = useSelector((state) => state.searchEmp.page);\r\n  const option = useSelector((state) => state.searchBar.option);\r\n  const inputVal = useSelector((state) => state.searchBar.inputVal);\r\n  const optionVal = useSelector((state) => state.searchBar.optionVal);\r\n\r\n  useEffect(() => {\r\n    if (keywords.length === 0) dispatch(initKeywords());\r\n  }, []);\r\n\r\n  const submitData = (e) => {\r\n    e.preventDefault();\r\n    if (option === \"이름검색\") {\r\n      isValid(inputVal);\r\n      dispatch(getEmpData(inputVal, page, \"noPage\"));\r\n      dispatch(addKeywords(\"name\", inputVal));\r\n    } else {\r\n      isValid(optionVal.value);\r\n      dispatch(getEmpData(optionVal, page, \"noPage\"));\r\n      dispatch(addKeywords(optionVal.category, optionVal.value));\r\n    }\r\n  };\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const setIndicator = (target) => {\r\n    setHover(target);\r\n  };\r\n\r\n  const changeBarType = (mode) => {\r\n    switch (mode) {\r\n      case \"desktop\":\r\n        return (\r\n          <>\r\n            {\" \"}\r\n            <AssessmentIcon\r\n              className={\r\n                hover === \"statistics\"\r\n                  ? `${classes.statistics_hover} icon_statistics`\r\n                  : `${classes.statistics} icon_statistics`\r\n              }\r\n            />\r\n            <Typography component=\"span\" noWrap>\r\n              <Link to=\"/statistics\" className={classes.link}>\r\n                통계 검색\r\n              </Link>\r\n            </Typography>\r\n          </>\r\n        );\r\n      case \"mobile\":\r\n        return (\r\n          <>\r\n            <AssessmentIcon />\r\n            통계 검색\r\n          </>\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const mobileMenuId = \"search-employee-menu-mobile\";\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link to=\"/\" className={classes.link_mobile}>\r\n        <MenuItem>\r\n          <HomeIcon />\r\n          홈으로\r\n        </MenuItem>\r\n      </Link>\r\n      <Link to=\"/statistics\" className={classes.link_mobile}>\r\n        <MenuItem>{changeBarType(\"mobile\")}</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  {\r\n    /********************구현 부분***************************/\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" className={classes.toolbarContainer}>\r\n            <Grid\r\n              item\r\n              xs={false}\r\n              sm={false}\r\n              md={2}\r\n              className={classes.titleContainer}\r\n            >\r\n              <Typography className={classes.title}>Employee Mark</Typography>\r\n            </Grid>\r\n            <Grid item xs={10} sm={8} md={7} className={classes.formContainer}>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  submitData(e);\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  className={classes.searchContainer}\r\n                >\r\n                  <Grid item xs={2} className={classes.searchOption}>\r\n                    <SearchMenu />\r\n                  </Grid>\r\n                  <Grid item xs={8} className={classes.searchInputContainer}>\r\n                    <SearchInput classes={classes} />\r\n                  </Grid>\r\n                  <Grid item xs={2} className={classes.searchButton}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => {\r\n                        submitData(e);\r\n                      }}\r\n                    >\r\n                      검색\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={3} className={classes.navContainer}>\r\n              <div className={classes.grow} />\r\n              <div className={classes.sectionDesktop}>\r\n                <div className={classes.menu}>\r\n                  <div\r\n                    className={\r\n                      hover === \"home\" ? classes.home_hover : classes.home\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"home\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    <HomeIcon\r\n                      className={\r\n                        hover === \"home\"\r\n                          ? `${classes.home_hover} icon_home`\r\n                          : `${classes.home} icon_home`\r\n                      }\r\n                    />\r\n                    <Typography component=\"span\" noWrap>\r\n                      <Link to=\"/\" className={classes.link}>\r\n                        홈으로\r\n                      </Link>\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      hover === \"statistics\"\r\n                        ? classes.statistics_hover\r\n                        : classes.statistics\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"statistics\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    {changeBarType(\"desktop\")}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js",[],["318","319"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js",["320"],"import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { initError } from \"../../store/actions/searchEmp\";\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    width: 300,\r\n  },\r\n  employeeInfo: {\r\n    position: \"relative\",\r\n    textAlign: \"center\",\r\n    padding: 4,\r\n    paddingLeft: 35,\r\n    fontSize: 20,\r\n    \"& .icon\": {\r\n      position: \"absolute\",\r\n      left: \"-5%\",\r\n      top: \"10%\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Modal = memo((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { message, open, handleClose } = props;\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"contact\" open={open}>\r\n      <DialogTitle id=\"contact\" className={classes.wrapper}>\r\n        <Typography className={classes.employeeInfo}>\r\n          <ErrorIcon className={`${classes.employeeInfo} icon`} />\r\n          <span>{message}</span>\r\n        </Typography>\r\n      </DialogTitle>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js",["321"],"import React, { memo, useState } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Loader from \"../../../../UI/Loader\";\r\nimport SalaryHistory from \"../../../../Graph/SalaryHistory/SalaryHistory\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  unClicked: {\r\n    flex: \"1fr\",\r\n    padding: 1,\r\n    color: \"#039BE5\",\r\n    border: \"1px solid #039BE5\",\r\n    backgroundColor: \"transparent\",\r\n    zIndex: 500,\r\n    cursor: \"pointer\",\r\n    boxSizing: \"content-box\",\r\n    alignItems: \"flex-start\",\r\n    margin: 4,\r\n    \"&:focus\": {\r\n      backgroundColor: \"#0288D1\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n\r\n  clicked: {\r\n    flex: \"1fr\",\r\n    padding: 1,\r\n    cursor: \"pointer\",\r\n    boxSizing: \"content-box\",\r\n    alignItems: \"flex-start\",\r\n    margin: 4,\r\n    backgroundColor: \"#0288D1\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    \"&:focus\": {\r\n      backgroundColor: \"#0288D1\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst History = memo((props) => {\r\n  const [historyType, setHistoryType] = useState();\r\n\r\n  const btnClasses = useStyles(); //버튼\r\n  const { data, isLoading, expanded, onChangeAccordion, classes } = props;\r\n\r\n  const changeTypeHandler = (type) => {\r\n    setHistoryType(type);\r\n  };\r\n\r\n  const trackType = historyType ? historyType : \"salary\";\r\n\r\n  const historyContent =\r\n    isLoading || !data ? (\r\n      <Loader size=\"small\" />\r\n    ) : (\r\n      <SalaryHistory data={data.salary[0]} />\r\n    );\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={onChangeAccordion(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel12bh-content\"\r\n          id=\"panel12bh-header\"\r\n        >\r\n          <Typography className={classes.AccordionSummary_header}>\r\n            부서이동 및 연봉변동 기록\r\n          </Typography>\r\n        </AccordionSummary>\r\n        {expanded !== \"panel1\" ? null : (\r\n          <AccordionDetails className={classes.AccordionDetails}>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"column\"\r\n              spacing={4}\r\n              className={classes.trackWrapper}\r\n            >\r\n              <Grid item>\r\n                <div className={btnClasses.wrapper}>\r\n                  <Button\r\n                    className={\r\n                      historyType === null || historyType === \"dept\"\r\n                        ? btnClasses.clicked\r\n                        : btnClasses.unClicked\r\n                    }\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    disableRipple\r\n                    onFocus={() => changeTypeHandler(\"dept\")}\r\n                  >\r\n                    부서 변동\r\n                  </Button>\r\n                  <Button\r\n                    className={\r\n                      historyType === \"salary\"\r\n                        ? btnClasses.clicked\r\n                        : btnClasses.unClicked\r\n                    }\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    disableRipple\r\n                    onFocus={() => {\r\n                      changeTypeHandler(\"salary\");\r\n                    }}\r\n                  >\r\n                    연봉 변동\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Grid item className={classes.track}>\r\n                {historyContent}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        )}\r\n      </Accordion>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default History;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js",["322","323"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { setOptVal } from \"../../../store/actions/searchBar\";\r\nimport { deleteKeyword } from \"../../../store/actions/keywords\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport theme from \"../../../theme\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title_container: {\r\n    position: \"relative\",\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"35ch\",\r\n    },\r\n    height: \"35px\",\r\n  },\r\n  title_listItemIcon: {\r\n    position: \"absolute\",\r\n    left: \"0%\",\r\n    color: \"white\",\r\n    height: \"100%\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title_listItemText: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  clearBtn: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"30ch\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"40ch\",\r\n    },\r\n    height: \"30px\",\r\n    \"&:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    \"&.menu_disabled\": {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst SearchDetail = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [clearBtn, setClearBtn] = useState(false);\r\n  const [optTitle, setOptTitle] = useState(null);\r\n  const [category, setCategory] = useState(null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const categoryObj = useSelector((state) => state.searchBar.category);\r\n  const option = useSelector((state) => state.searchBar.option);\r\n  const optionVal = useSelector((state) => state.searchBar.optionVal);\r\n  const keywords = useSelector((state) => state.keywords.keywords);\r\n\r\n  useEffect(() => {\r\n    switch (option) {\r\n      case \"직급검색\":\r\n        setCategory(categoryObj.title);\r\n        return;\r\n      case \"부서검색\":\r\n        setCategory(categoryObj.dept);\r\n        return;\r\n      case \"최근검색\":\r\n        setCategory(keywords);\r\n        return;\r\n    }\r\n  }, [option, keywords]);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onClickDel = (e, identifier) => {\r\n    e.preventDefault();\r\n    dispatch(deleteKeyword(identifier));\r\n  };\r\n\r\n  const handleOptionValue = (value) => {\r\n    handleClose();\r\n    dispatch(setOptVal(value));\r\n  };\r\n\r\n  const createDetailList = (arr, arrType) => {\r\n    let resultList;\r\n    if (arrType === \"recent keyword\") {\r\n      const sortedArr = arr.sort((a, b) => {\r\n        return b.index - a.index;\r\n      });\r\n\r\n      const valueArr = sortedArr.map((el, idx) => {\r\n        return el.value;\r\n      });\r\n\r\n      const reducedArr = valueArr.reduce((accumulator, current) => {\r\n        const length = accumulator.length;\r\n        if (length === 0 || accumulator.indexOf(current) <= -1) {\r\n          current && accumulator.push(current);\r\n        }\r\n        return accumulator;\r\n      }, []);\r\n\r\n      resultList = reducedArr.slice(0, 5).map((el, idx) => {\r\n        const index = valueArr.indexOf(el);\r\n        return {\r\n          category: arr[index].category,\r\n          value: el,\r\n          index: arr[index].index,\r\n        };\r\n      });\r\n    } else {\r\n      resultList = arr;\r\n    }\r\n\r\n    const searchDetail = resultList.map((item, idx) => {\r\n      return (\r\n        <StyledMenuItem\r\n          key={`category_${item.index}`}\r\n          disabled={category.length <= 1 ? true : false}\r\n          className={\r\n            category.length <= 1 ? `${StyledMenuItem.root} menu_disabled` : null\r\n          }\r\n        >\r\n          <ListItemText\r\n            primary={item.value}\r\n            onClick={() => {\r\n              handleOptionValue({ category: item.category, value: item.value });\r\n            }}\r\n          />\r\n          {clearBtn && category.length > 1 ? (\r\n            <DeleteForeverIcon\r\n              size=\"small\"\r\n              onClick={(e) => onClickDel(e, item.index)}\r\n              className={classes.clearBtn}\r\n            />\r\n          ) : null}\r\n        </StyledMenuItem>\r\n      );\r\n    });\r\n\r\n    return searchDetail;\r\n  };\r\n\r\n  const createSearchDetail = (category) => {\r\n    if (category) {\r\n      const newTitle = category[0];\r\n      let detailList;\r\n      if (optTitle === null || optTitle !== newTitle) {\r\n        setOptTitle(newTitle);\r\n        // q. 첫 렌더시에만 전환이 느린 이유?\r\n      }\r\n\r\n      if (newTitle === \"recent keyword\") {\r\n        detailList =\r\n          category.length > 1\r\n            ? category.slice(1)\r\n            : [{ index: 0, value: \"최근 검색내역이 없습니다\" }];\r\n        clearBtn === false && setClearBtn(true);\r\n        return createDetailList(detailList, newTitle);\r\n      } else {\r\n        detailList = category\r\n          .map((el, idx) => ({ category: category[0], index: idx, value: el }))\r\n          .slice(1);\r\n        clearBtn === true && setClearBtn(false);\r\n      }\r\n\r\n      return createDetailList(detailList, newTitle);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n        className={classes.title_container}\r\n      >\r\n        <ListItemIcon className={classes.title_listItemIcon}>\r\n          <ArrowDropDownIcon fontSize=\"large\" />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary={optionVal ? optionVal.value : optTitle}\r\n          className={classes.title_listItemText}\r\n        />\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {createSearchDetail(category)}\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchDetail;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js",["324"],"import React, { useReducer, createContext, useMemo } from \"react\";\r\n\r\nconst initState = [\"recent keyword\"];\r\n\r\nconst keywordsReducer = (state = initState, action) => {\r\n  const storage = JSON.parse(localStorage.getItem(\"RECENT\"));\r\n\r\n  switch (action.type) {\r\n    case \"init\":\r\n      let initializedState;\r\n      if (storage === null) {\r\n        return;\r\n      } else if (state.length === 1 && storage !== null) {\r\n        initializedState = state.concat(storage);\r\n        return initializedState;\r\n      } else {\r\n        return;\r\n      }\r\n\r\n    case \"add\":\r\n      const newKeyword = {\r\n        category: action.category,\r\n        index: Date.now(),\r\n        value: action.keyword,\r\n      };\r\n      const addedState = state.concat(newKeyword);\r\n      if (storage === null) {\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedState.slice()));\r\n      } else {\r\n        const addedStorage = storage.slice();\r\n        addedStorage.push(newKeyword);\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedStorage));\r\n      }\r\n\r\n      return addedState;\r\n    case \"delete\":\r\n      console.log(\"DELETE\", action.identifier);\r\n      const deletedState = state.filter((el, idx) => {\r\n        return el.index !== action.identifier;\r\n      });\r\n      console.log(\"deletedState\", deletedState);\r\n      const deletedStorage = storage.filter((el, idx) => {\r\n        return el.index !== action.identifier;\r\n      });\r\n      localStorage.setItem(\"RECENT\", JSON.stringify(deletedStorage));\r\n      return deletedState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/*이제, state 와 dispatch 를 Context 통하여 다른 컴포넌트에서 바로 사용 할 수 있게 해줄건데요, 우리는 하나의 Context 를 만들어서 state 와 dispatch 를 함께 넣어주는 대신에, 두개의 Context 를 만들어서 따로 따로 넣어줄 것입니다. 이렇게 하면 dispatch 만 필요한 컴포넌트에서 불필요한 렌더링을 방지 할 수 있습니다. 추가적으로, 사용하게 되는 과정에서 더욱 편리하기도 합니다.\r\n\r\n */\r\nexport const KeywordsStateContext = createContext();\r\nexport const KeywordsDispatchContext = createContext();\r\n\r\nexport const KeywordsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(keywordsReducer, initState);\r\n\r\n  return (\r\n    <KeywordsStateContext.Provider value={state}>\r\n      <KeywordsDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </KeywordsDispatchContext.Provider>\r\n    </KeywordsStateContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Loader.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\ScrollToTop.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\RankCard\\RankCard.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\SalaryHistory\\SalaryHistory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Statistics.js",["325","326"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { initError } from \"../../store/actions/statPage\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Loader from \"../UI/Loader\";\r\nimport StatisticsBar from \"./StatisticsBar/StatisticsBar\";\r\nimport SalaryStack from \"./StatisticsPage/SalaryStack\";\r\nimport SalaryDist from \"./StatisticsPage/SalaryDist\";\r\n\r\nconst Statistics = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoading, openErrorMs, errorMs } = useSelector(\r\n    (state) => ({\r\n      isLoading: state.statPage.loading,\r\n      openErrorMs: state.statPage.errorMs !== null,\r\n      errorMs: state.statPage.errorMs,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const optionDetail = useSelector((state) => state.statBar.optionDetail);\r\n  const handleCloseMs = () => {\r\n    dispatch(initError());\r\n  };\r\n\r\n  const chart = optionDetail === \"조직\" ? <SalaryStack /> : <SalaryDist />;\r\n\r\n  const statistics = isLoading ? (\r\n    <Loader size=\"large\" />\r\n  ) : (\r\n    <Grid container direction=\"column\" spacing={6}>\r\n      <Modal open={openErrorMs} message={errorMs} handleClose={handleCloseMs} />\r\n      <Grid item></Grid>\r\n      <Grid item></Grid>\r\n      {chart}\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StatisticsBar />\r\n      {statistics}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\StatisticsBar.js",["327","328","329"],"import React, { useState, memo, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SearchOption from \"./components/SearchOption\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport { getStatAPI } from \"../../../store/actions/statPage\";\r\nimport { initArea } from \"../../../store/actions/statBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  home: {\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n\r\n    \"& .icon_home\": {\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  home_hover: {\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .icon_home\": {\r\n      width: 30,\r\n      height: 30,\r\n    },\r\n  },\r\n  statistics: {\r\n    cursor: \"pointer\",\r\n    width: 100,\r\n    height: 30,\r\n    \"& .icon_statistics\": {\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  statistics_hover: {\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .icon_statistics\": {\r\n      width: 30,\r\n      height: 30,\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    fontSize: 23,\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  link_mobile: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  searchContainer: {\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"150%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"110%\",\r\n    },\r\n  },\r\n\r\n  submit: {\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    width: 65,\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      minWidth: 40,\r\n      transform: \"translateX(-100%)\",\r\n    },\r\n  },\r\n  search_track: {\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  search_select: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  trackRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  trackInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    right: 0,\r\n    transform: \"translate(-50%,-50%)\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      transform: \"translate(-25%,-50%)\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\n// searchOption = \"연봉통계\"\r\n// category = \"조직별 통계\", \"급여별 통계\"\r\n// searchDetail = (카테고리:조직별)\"전체\"(/api/stat/distribution/emp/salary), \"부서\"(/api/stat/distribution/dept/salary) // (카테고리:급여별) - track컴포넌트\r\n\r\nconst StatisticsBar = memo(() => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [hover, setHover] = useState();\r\n\r\n  const optionDetail = useSelector((state) => state.statBar.optionDetail);\r\n  const areaData = useSelector((state) => state.statBar.area);\r\n  const selectedData = useSelector((state) => state.statBar.selected);\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"onSubmit\", optionDetail);\r\n    switch (optionDetail) {\r\n      case \"조직\":\r\n        return selectedData\r\n          ? dispatch(getStatAPI(selectedData))\r\n          : window.alert(\"검색어를 입력하세요\");\r\n      case \"급여\":\r\n        return areaData\r\n          ? dispatch(getStatAPI(areaData))\r\n          : window.alert(\"검색어를 입력하세요\");\r\n      default:\r\n        window.alert(\"검색어를 입력하세요\");\r\n        return;\r\n    }\r\n  };\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const setIndicator = (target) => {\r\n    setHover(target);\r\n  };\r\n\r\n  const changeBarType = (mode) => {\r\n    switch (mode) {\r\n      case \"desktop\":\r\n        return (\r\n          <>\r\n            <Grid item>\r\n              <PeopleAltIcon\r\n                className={\r\n                  hover === \"statistics\"\r\n                    ? `${classes.statistics_hover} icon_statistics`\r\n                    : `${classes.statistics} icon_statistics`\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography component=\"span\" noWrap>\r\n                <Link to=\"/board\" className={classes.link}>\r\n                  직원 검색\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </>\r\n        );\r\n      case \"mobile\":\r\n        return (\r\n          <>\r\n            <PeopleAltIcon />\r\n            직원 검색\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const mobileMenuId = \"search-employee-menu-mobile\";\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link to=\"/\" className={classes.link_mobile}>\r\n        <MenuItem>\r\n          <HomeIcon />\r\n          홈으로\r\n        </MenuItem>\r\n      </Link>\r\n      <Link to=\"/board\" className={classes.link_mobile}>\r\n        <MenuItem>{changeBarType(\"mobile\")}</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  {\r\n    /********************구현 부분***************************/\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            className={classes.toolbarContainer}\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={false}\r\n              sm={false}\r\n              md={2}\r\n              className={classes.titleContainer}\r\n            >\r\n              <Typography className={classes.title}>Employee Mark</Typography>\r\n            </Grid>\r\n            <Grid item xs={10} sm={8} md={7} className={classes.formContainer}>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  onSubmitHandler(e);\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justify=\"flex-end\"\r\n                  className={classes.searchContainer}\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={1}>\r\n                    <SearchOption />\r\n                  </Grid>\r\n                  <Grid item container xs={10} sm={9} justify=\"center\">\r\n                    <Grid item>\r\n                      <SearchInput classes={classes} />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => {\r\n                        onSubmitHandler(e);\r\n                      }}\r\n                    >\r\n                      검색\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item container xs={2} sm={2} md={3}>\r\n              <Grid item container className={classes.sectionDesktop}>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.menu}\r\n                  alignItems=\"center\"\r\n                  justify=\"flex-end\"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={5}\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    className={\r\n                      hover === \"home\" ? classes.home_hover : classes.home\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"home\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    <Grid item>\r\n                      <HomeIcon\r\n                        className={\r\n                          hover === \"home\"\r\n                            ? `${classes.home_hover} icon_home`\r\n                            : `${classes.home} icon_home`\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography component=\"span\" noWrap>\r\n                        <Link to=\"/\" className={classes.link}>\r\n                          홈으로\r\n                        </Link>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    xs={5}\r\n                    className={\r\n                      hover === \"statistics\"\r\n                        ? classes.statistics_hover\r\n                        : classes.statistics\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"statistics\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    {changeBarType(\"desktop\")}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StatisticsBar;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchDetailOption.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchOption.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\keywords.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\searchEMP.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\shared\\utility.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\keywords.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\searchBar.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\searchBar.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\statBar.js",["330"],"import * as actionTypes from \"../actions/actionTypes\";\r\nimport {\r\n  setDetail,\r\n  setArea,\r\n  setSelected,\r\n  initArea,\r\n} from \"../../shared/utility\";\r\n\r\nconst initState = {\r\n  optionDetail: null,\r\n  area: null,\r\n  selected: null,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.STAT_BAR_DETAIL:\r\n      return setDetail(state, action.detail);\r\n    case actionTypes.STAT_BAR_AREA:\r\n      console.log(\"setArea\", action.area);\r\n      return setArea(state, action.area);\r\n    case actionTypes.STAT_BAR_SELECT:\r\n      return setSelected(state, action.selected);\r\n    case actionTypes.STAT_INIT_AREA:\r\n      return { ...state, area: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\statBar.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchInput.js",["331"],"import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SearchDetailOption from \"../components/SearchDetailOption\";\r\nimport SearchTrack from \"../components/SearchTrack\";\r\n\r\nconst SearchInput = memo((props) => {\r\n  const { classes } = props;\r\n  const optionDetail = useSelector((state) => state.statBar.optionDetail);\r\n\r\n  const createSearchInput = () => {\r\n    let searchInput;\r\n    switch (optionDetail) {\r\n      case \"조직\":\r\n        searchInput = <SearchDetailOption className={classes.search_select} />;\r\n        return searchInput;\r\n      case \"급여\":\r\n        searchInput = <SearchTrack className={classes.search_track} />;\r\n        return searchInput;\r\n\r\n      default:\r\n        searchInput = <SearchDetailOption className={classes.search_select} />;\r\n        return searchInput;\r\n    }\r\n  };\r\n\r\n  return createSearchInput();\r\n});\r\n\r\nexport default SearchInput;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\SearchTrack.js",["332"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withStyles, makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RangeSelector from \"./RangeSelector\";\r\nimport { setArea, initArea } from \"../../../../store/actions/statBar\";\r\nimport { initDist } from \"../../../../store/actions/statPage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 320,\r\n    transform: \"translateY(5%)\",\r\n  },\r\n  input: {\r\n    width: 70,\r\n    color: \"white\",\r\n    fontSize: 15,\r\n    paddingLeft: 5,\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n    color: \"#222\",\r\n  },\r\n}));\r\n\r\nconst CustomLabel = ({ label }) => {\r\n  const classes = useStyles();\r\n  return <span className={classes.label}>{label}</span>;\r\n};\r\n\r\nconst BoxShadow =\r\n  \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\";\r\n\r\nconst SalarySlider = withStyles((theme) => ({\r\n  root: {\r\n    color: \"#6868ff\",\r\n    height: 2,\r\n    padding: \"15px 0\",\r\n  },\r\n  thumb: {\r\n    height: 15,\r\n    width: 15,\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: BoxShadow,\r\n    marginTop: -8,\r\n    marginLeft: -8,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow:\r\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\r\n      \"@media (hover: none)\": {\r\n        boxShadow: BoxShadow,\r\n      },\r\n    },\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 2,\r\n  },\r\n\r\n  trackInverted: {\r\n    height: 2,\r\n    \"& $rail\": {\r\n      backgroundColor: \"#6868ff\",\r\n    },\r\n  },\r\n  rail: {\r\n    height: 2,\r\n    opacity: 1,\r\n    backgroundColor: fade(theme.palette.common.white, 0.5),\r\n  },\r\n  mark: {\r\n    backgroundColor: \"#bfbfbf\",\r\n    height: 8,\r\n    width: 1,\r\n    marginTop: -3,\r\n  },\r\n  markActive: {\r\n    opacity: 1,\r\n    // backgroundColor: \"currentColor\",\r\n  },\r\n}))(Slider);\r\n\r\nconst SearchTrack = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [range, setRange] = useState(null);\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (range && value) {\r\n      console.log(\"range\", range, \"value\", value);\r\n      const area = { type: range, salary: value };\r\n      dispatch(setArea(area));\r\n    } else {\r\n      dispatch(initArea());\r\n      dispatch(initDist());\r\n    }\r\n  }, [range, value]);\r\n\r\n  const handleRangeChange = useCallback(\r\n    (range) => {\r\n      setRange(range);\r\n    },\r\n    [setRange]\r\n  );\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    const left = parseInt(event.target.style.left);\r\n    console.log(left);\r\n    setRange(null);\r\n    // dispatch(initArea());\r\n    switch (left) {\r\n      case 0:\r\n        return setValue(40000);\r\n      case 16:\r\n        return setValue(60000);\r\n      case 33:\r\n        return setValue(80000);\r\n      case 50:\r\n        return setValue(100000);\r\n      case 66:\r\n        return setValue(120000);\r\n      case 83:\r\n        return setValue(140000);\r\n      case 100:\r\n        return setValue(160000);\r\n      default:\r\n        return setValue(newValue);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setRange(null);\r\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 40000) {\r\n      setValue(40000);\r\n    } else if (value > 160000) {\r\n      setValue(160000);\r\n    }\r\n  };\r\n\r\n  const marks = [\r\n    {\r\n      value: 40000,\r\n      label: <CustomLabel label=\"4.0\" />,\r\n    },\r\n\r\n    {\r\n      value: 60000,\r\n      label: <CustomLabel label=\"6.0\" />,\r\n    },\r\n\r\n    {\r\n      value: 80000,\r\n      label: <CustomLabel label=\"8.0\" />,\r\n    },\r\n\r\n    {\r\n      value: 100000,\r\n      label: <CustomLabel label=\"10.0\" />,\r\n    },\r\n\r\n    {\r\n      value: 120000,\r\n      label: <CustomLabel label=\"12.0\" />,\r\n    },\r\n\r\n    {\r\n      value: 140000,\r\n      label: <CustomLabel label=\"14.0\" />,\r\n    },\r\n\r\n    {\r\n      value: 160000,\r\n      label: <CustomLabel label=\"16.0\" />,\r\n    },\r\n  ];\r\n\r\n  const trackType = range === \"above\" ? \"inverted\" : true;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={4} alignItems=\"center\" justify=\"flex-start\">\r\n        <Grid item xs={8}>\r\n          <SalarySlider\r\n            track={trackType}\r\n            value={typeof value === \"number\" ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n            min={40000}\r\n            max={160000}\r\n            marks={marks}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={(e) => handleInputChange(e)}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: 40000,\r\n              max: 160000,\r\n              type: \"number\",\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <RangeSelector range={range} handleRangeChange={handleRangeChange} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchTrack;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\statPage.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\DeptChart.js",["333","334","335","336","337"],"import React, { useState, useCallback, memo, useRef, useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination, Thumbs } from \"swiper/core\";\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { setChartColor } from \"../../../../shared/utility\";\r\nimport CustomizedLabel from \"../SalaryDist/CustomizedLabel\";\r\nimport SalaryFilter from \"./SalaryFilter\";\r\nimport theme from \"../../../../theme\";\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  titleContainer: {\r\n    position: \"absolute\",\r\n    width: \"50%\",\r\n    left: \"50%\",\r\n    top: \"15%\",\r\n    transform: \"translateX(-50%)\",\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n      width: \"400px\",\r\n    },\r\n    \"& span:nth-child(1)\": {\r\n      fontSize: \"18px\",\r\n\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& span:nth-child(2)\": {\r\n      fontSize: \"26px\",\r\n\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  root: {\r\n    width: \"65%\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"30%\",\r\n    transform: \"translateX(-50%)\",\r\n  },\r\n  swiperSlide: {\r\n    border: \"1px solid red\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"auto auto auto auto auto auto auto auto auto auto\",\r\n    listStyle: \"none\",\r\n    position: \"relative\",\r\n    height: 430,\r\n  },\r\n  chartContainer: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n  },\r\n  backward: {\r\n    position: \"absolute\",\r\n    top: \"18%\",\r\n    left: \"15%\",\r\n    cursor: \"pointer\",\r\n\r\n    zIndex: 500,\r\n  },\r\n  forward: {\r\n    position: \"absolute\",\r\n    top: \"18%\",\r\n    right: \"15%\",\r\n    cursor: \"pointer\",\r\n\r\n    zIndex: 500,\r\n  },\r\n  moveInner: {\r\n    fontSize: 80,\r\n    color: \"#333\",\r\n  },\r\n  disabled: {\r\n    fontSize: 80,\r\n    color: \"#333\",\r\n    color: \"grey\",\r\n  },\r\n}));\r\n\r\nconst DeptChart = ({ deptData }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(40000);\r\n  const [disabledNav, setDisabledNav] = useState(\"backward\");\r\n\r\n  const navigationPrevRef = useRef(null);\r\n  const navigationNextRef = useRef(null);\r\n  const paginationRef = useRef(null);\r\n  const swiperRef = useRef(null);\r\n  const deptList = [\r\n    \"Customer Service\",\r\n    \"Development\",\r\n    \"Finance\",\r\n    \"Human Resources\",\r\n    \"Marketing\",\r\n    \"Production\",\r\n    \"Quality Management\",\r\n    \"Research\",\r\n    \"Sales\",\r\n  ];\r\n\r\n  let chartSwiper;\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current) {\r\n      chartSwiper = swiperRef.current.swiper;\r\n    }\r\n  });\r\n\r\n  const onClickFilter = useCallback(\r\n    (icon) => {\r\n      const newValue = icon === \"up\" ? value + 10000 : value - 10000;\r\n      if (newValue <= 160000 && newValue >= 40000) setValue(newValue);\r\n    },\r\n    [value]\r\n  );\r\n\r\n  const onClickForward = (chartSwiper) => {\r\n    if (chartSwiper.isEnd) return;\r\n    if (disabledNav === \"backward\") setDisabledNav(null);\r\n    chartSwiper.slideNext();\r\n  };\r\n\r\n  const onClickBackward = (chartSwiper) => {\r\n    if (chartSwiper.isBeginning) return;\r\n    if (disabledNav === \"forward\") setDisabledNav(null);\r\n    chartSwiper.slidePrev();\r\n  };\r\n\r\n  const disableNav = (chartSwiper) => {\r\n    if (!chartSwiper.isEnd && !chartSwiper.isBeginning) return;\r\n    chartSwiper.isEnd && setDisabledNav(\"forward\");\r\n    chartSwiper.isBeginning && setDisabledNav(\"backward\");\r\n  };\r\n  const forwardClass = disabledNav === \"forward\" ? \"disabled\" : \"moveInner\";\r\n  const backwardClass = disabledNav === \"backward\" ? \"disabled\" : \"moveInner\";\r\n\r\n  if (!deptData) return null;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.titleContainer}\r\n      >\r\n        <Grid item>\r\n          <h1 ref={paginationRef} className=\"swiperPagination\"></h1>\r\n        </Grid>\r\n        <SalaryFilter\r\n          onClickFilter={onClickFilter}\r\n          value={value}\r\n          className={classes.title}\r\n        />\r\n      </Grid>\r\n      <Swiper\r\n        ref={swiperRef}\r\n        slidesPerView={1}\r\n        id=\"main\"\r\n        spaceBetween={40}\r\n        pagination={{\r\n          el: \".swiperPagination\",\r\n          type: \"custom\",\r\n          renderCustom: (swiper, current, total) => {\r\n            console.log(\"index\", current);\r\n            const deptName = deptList[current - 1];\r\n            return deptName;\r\n          },\r\n        }}\r\n        navigation={{\r\n          prevEl: navigationPrevRef.current,\r\n          nextEl: navigationNextRef.current,\r\n        }}\r\n        onBeforeInit={(swiper) => {\r\n          swiper.params.navigation.prevEl = navigationPrevRef.current;\r\n          swiper.params.navigation.nextEl = navigationNextRef.current;\r\n          swiper.params.pagination.el = paginationRef.current;\r\n        }}\r\n        onSlideChange={() => {\r\n          disableNav(chartSwiper);\r\n        }}\r\n        scrollbar={{ draggable: true }}\r\n        className={classes.root}\r\n      >\r\n        {Object.keys(deptData).map((dept, idx) => {\r\n          const data = deptData[dept];\r\n          return (\r\n            <SwiperSlide key={`chart-${dept}`} className={classes.swiperSlide}>\r\n              <ResponsiveContainer\r\n                width=\"100%\"\r\n                height={380}\r\n                className={classes.chartContainer}\r\n              >\r\n                <BarChart data={data} margin={{ top: 50 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"sal\" tick={false} />\r\n                  <YAxis\r\n                    dataKey=\"cnt\"\r\n                    type=\"number\"\r\n                    domain={[0, \"dataMax+100\"]}\r\n                  />\r\n\r\n                  <Bar\r\n                    dataKey=\"cnt\"\r\n                    fill=\"#8884d8\"\r\n                    label={<CustomizedLabel currentVal={value} />}\r\n                  >\r\n                    {data.map((entry, index) => {\r\n                      const highlight = entry.sal === value;\r\n                      const color = setChartColor(entry.dept_name, highlight);\r\n                      return (\r\n                        <Cell\r\n                          fill={color}\r\n                          key={`cell-${index}`}\r\n                          stroke=\"false\"\r\n                          strokeDasharray=\"5,5\"\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Bar>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n      </Swiper>\r\n      <div\r\n        ref={navigationPrevRef}\r\n        onClick={() => onClickBackward(chartSwiper)}\r\n        className={classes.backward}\r\n      >\r\n        <ArrowLeftIcon className={classes[backwardClass]} />\r\n      </div>\r\n      <div\r\n        ref={navigationNextRef}\r\n        onClick={() => onClickForward(chartSwiper)}\r\n        className={classes.forward}\r\n      >\r\n        <ArrowRightIcon className={classes[forwardClass]} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptChart;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\statPage.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsPage\\SalaryDist.js",["338","339","340","341"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport DistBar from \"../Graph/SalaryDist/DistBar\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    color: \"#333\",\r\n  },\r\n  distPie: {\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nconst SalaryDist = () => {\r\n  const classes = useStyles();\r\n  const { aboveData, belowData, area } = useSelector(\r\n    (state) => ({\r\n      aboveData: state.statPage.aboveData,\r\n      belowData: state.statPage.belowData,\r\n      area: state.statBar.area,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const makeDistBar = (area) => {\r\n    if (!area) return null;\r\n    let data;\r\n    if (area.type) {\r\n      data = area.type === \"below\" ? belowData : aboveData;\r\n      if (!data) {\r\n        return null;\r\n      } else {\r\n        return (\r\n          <Grid container>\r\n            <Grid item xs={false} sm={1}></Grid>\r\n            <Grid item xs={12} sm={10}>\r\n              <DistBar data={data} type={area.type} salary={area.salary} />\r\n            </Grid>\r\n            <Grid item xs={false} sm={1}></Grid>\r\n          </Grid>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return makeDistBar(area);\r\n};\r\n\r\nexport default SalaryDist;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsPage\\SalaryStack.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\StatisticsBar\\components\\RangeSelector.js",["342"],"import React, { memo } from \"react\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translate(50%,-50%)\",\r\n    minWidth: 55,\r\n    minHeight: 30,\r\n    \"& option\": {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  selectInput: {\r\n    color: \"#222\",\r\n  },\r\n}));\r\n\r\nconst RangeSelector = memo((props) => {\r\n  const classes = useStyles();\r\n  const { range, handleRangeChange } = props;\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    handleRangeChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <NativeSelect\r\n        value={range || \"선택\"}\r\n        onChange={handleChange}\r\n        name=\"range\"\r\n        className={classes.selectInput}\r\n        inputProps={{ \"aria-label\": \"range\" }}\r\n      >\r\n        <option value=\"\">선택</option>\r\n        <option value=\"above\">이상</option>\r\n        <option value=\"below\">이하</option>\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default RangeSelector;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\DistPie.js",["343","344"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\SalaryHistory\\TransferHistory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Graph\\Track.js",["345","346"],"import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  timeline: {\r\n    transform: \"rotate(-90deg)\",\r\n    margin: \"0 auto\",\r\n    width: 30,\r\n    padding: 0,\r\n  },\r\n  timelineContentContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    textAlign: \"left\",\r\n    width: 10,\r\n    zIndex: 500,\r\n  },\r\n  timelineYear: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-start\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineInfo: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-end\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineSeparator: {\r\n    position: \"relative\",\r\n    flex: \"1fr\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  timelineDot: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n  timelineDot_last: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n\r\n  timelineConnector: {\r\n    position: \"absolute\",\r\n    height: \"3.2rem\",\r\n    width: 2,\r\n    backgroundColor: \"secondary\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    bottom: \"-44%\",\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineYearText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"60%\",\r\n    bottom: \"10%\",\r\n    transform: \"translateY(-100%)\",\r\n  },\r\n  timelineInfoText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"55%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineYearText: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    bottom: \"10%\",\r\n    transform: \"translate(-40%,-100%)\",\r\n  },\r\n  timelineInfoText: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,100%)\",\r\n  },\r\n  timelineYearText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    right: \"60%\",\r\n    bottom: 0,\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineInfoText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineIcon: {\r\n    transform: \"rotate(-90deg)\",\r\n  },\r\n});\r\n\r\nconst Track = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = props;\r\n\r\n  console.log(\"Track render\", data);\r\n\r\n  //한번에 다 받음.\r\n\r\n  const createHistoryTrack = (data) => {\r\n    let historyTrack = null;\r\n    if (!data) {\r\n      return;\r\n    }\r\n    const slicedHistory = data.slice(1, data.length - 1);\r\n    console.log(\"slicedHistory\", slicedHistory);\r\n    historyTrack = (\r\n      <Timeline className={classes.timeline}>\r\n        <TimelineItem\r\n          align=\"alternate\"\r\n          className={classes.timelineContentContainer}\r\n        >\r\n          <TimelineOppositeContent className={classes.timelineYear}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              className={classes.timelineYearText_first}\r\n            >\r\n              {data[0].from}\r\n            </Typography>\r\n          </TimelineOppositeContent>\r\n          <TimelineSeparator className={classes.timelineSeparator}>\r\n            <TimelineDot className={classes.timelineDot} />\r\n            <TimelineConnector\r\n              className={classes.timelineConnector}\r\n              variant=\"text\"\r\n            />\r\n          </TimelineSeparator>\r\n          <TimelineContent className={classes.timelineInfo}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              className={classes.timelineInfoText_first}\r\n            >\r\n              {data[0].dept}\r\n            </Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n        {slicedHistory.map((data, idx) => {\r\n          return (\r\n            <TimelineItem\r\n              className={classes.timelineContentContainer}\r\n              key={data.from}\r\n            >\r\n              <TimelineOppositeContent className={classes.timelineYear}>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  className={classes.timelineYearText}\r\n                >\r\n                  {data.from}\r\n                </Typography>\r\n              </TimelineOppositeContent>\r\n              <TimelineSeparator className={classes.timelineSeparator}>\r\n                <TimelineDot className={classes.timelineDot} />\r\n                <TimelineConnector className={classes.timelineConnector} />\r\n              </TimelineSeparator>\r\n              <TimelineContent className={classes.timelineInfo}>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  className={classes.timelineInfoText}\r\n                >\r\n                  {data.dept}\r\n                </Typography>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n          );\r\n        })}\r\n\r\n        <TimelineItem className={classes.timelineContentContainer}>\r\n          <TimelineOppositeContent className={classes.timelineYear}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              className={classes.timelineYearText_last}\r\n            >\r\n              {data[data.length - 1].from}\r\n              ~현재\r\n            </Typography>\r\n          </TimelineOppositeContent>\r\n          <TimelineSeparator className={classes.timelineSeparator}>\r\n            <TimelineDot className={classes.timelineDot_last} color=\"primary\" />\r\n          </TimelineSeparator>\r\n          <TimelineContent className={classes.timelineInfo}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              className={classes.timelineInfoText_last}\r\n            >\r\n              {data[data.length - 1].dept}\r\n            </Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      </Timeline>\r\n    );\r\n\r\n    return historyTrack;\r\n  };\r\n\r\n  return createHistoryTrack(type, data);\r\n};\r\n\r\nexport default Track;\r\n",["347","348"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\DistBar.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\CustomizedLabel.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryDist\\CustomizedTick.js",["349"],"import styled from \"styled-components\";\r\n\r\nconst Tick = styled.span`\r\n  font-size: ${(props) => (props.value.length > 8 ? \"12px\" : \"14px\")};\r\n  margin: 0 20px;\r\n  padding: ${(props) => (props.value.length <= 8 ? \"0 25px\" : \"0 10px\")};\r\n  color: ${(props) => (props.emp === 0 ? \"#999\" : \"#222\")};\r\n  position: absolute;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  left: 5%;\r\n`;\r\n\r\nconst CustomizedTick = (tickProps) => {\r\n  const { x, y, payload, data, width, index } = tickProps;\r\n  const { value } = payload;\r\n\r\n  const emp = data[value];\r\n  const tickVal = typeof value === \"string\" ? value : `${value / 10000}만`;\r\n\r\n  return (\r\n    <foreignObject x={x - 70} y={y} width=\"140\" height=\"50\">\r\n      <Tick\r\n        xmlns=\"http://www.w3.org/1999/xhtml\"\r\n        value={tickVal}\r\n        emp={emp}\r\n        width={width}\r\n      >\r\n        {tickVal}\r\n      </Tick>\r\n    </foreignObject>\r\n  );\r\n};\r\n\r\nexport default CustomizedTick;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\searchEmp.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\searchEMP.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\searchEmp.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\customItem\\label.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\CustomizedFilter.js",["350"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\SalaryFilter.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\CustomSwiper.js",["351","352","353"],"import React, { useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper\";\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from \"swiper/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { setChartColor } from \"../../../../shared/utility\";\r\nimport CustomizedLabel from \"../SalaryDist/CustomizedLabel\";\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  swiperContainer: {\r\n    width: \"65%\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"20%\",\r\n    transform: \"translateX(-50%)\",\r\n  },\r\n  swiperWrapper: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"auto auto auto auto auto auto auto auto auto auto\",\r\n    listStyle: \"none\",\r\n    position: \"relative\",\r\n    height: 430,\r\n  },\r\n  chartContainer: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n  },\r\n\r\n  prevNav: { border: \"1px solid black\" },\r\n  nextNav: { border: \"1px solid black\" },\r\n}));\r\n\r\nconst swiper = new Swiper(\"makeStyles-swiperContainer-46-container\", {\r\n  speed: 400,\r\n  spaceBetween: 100,\r\n  pagination: {\r\n    el: \".swiperPagination\",\r\n    type: \"custom\",\r\n    renderCustom: (swiper, current, total) => {\r\n      console.log(\"swiper\", swiper, \"current\", current, \"total\", total);\r\n      const dept = [\r\n        \"Customer Service\",\r\n        \"Development\",\r\n        \"Finance\",\r\n        \"Human Resources\",\r\n        \"Marketing\",\r\n        \"Production\",\r\n        \"Quality Management\",\r\n        \"Research\",\r\n        \"Sales\",\r\n      ];\r\n      return dept[current - 1];\r\n    },\r\n  },\r\n});\r\n\r\nconst CustomSwiper = (props) => {\r\n  const classes = useStyles();\r\n  const { deptData, value } = props;\r\n\r\n  console.log(\"swiper\", swiper);\r\n\r\n  return (\r\n    <div className=\"swiperContainer\">\r\n      <ul className={classes.swiperWrapper}>\r\n        {Object.keys(deptData).map((dept, idx) => {\r\n          const data = deptData[dept];\r\n          return (\r\n            <li key={`chart-${dept}`} className={classes.swiperSlide}>\r\n              <ResponsiveContainer\r\n                width=\"100%\"\r\n                height={380}\r\n                className={classes.chartContainer}\r\n              >\r\n                <BarChart data={data} margin={{ top: 50 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"sal\" tick={false} />\r\n                  <YAxis dataKey=\"cnt\" />\r\n\r\n                  <Bar\r\n                    dataKey=\"cnt\"\r\n                    fill=\"#8884d8\"\r\n                    label={<CustomizedLabel currentVal={value} />}\r\n                  >\r\n                    {data.map((entry, index) => {\r\n                      const highlight = entry.sal === value;\r\n                      const color = setChartColor(entry.dept_name, highlight);\r\n                      return (\r\n                        <Cell\r\n                          fill={color}\r\n                          key={`cell-${index}`}\r\n                          stroke=\"false\"\r\n                          strokeDasharray=\"5,5\"\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Bar>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className={classes.swiperPagination}></div>\r\n      <span className={classes.prevNav} onClick={() => swiper.slidePrev()}>\r\n        prevNAV\r\n      </span>\r\n      <span className={classes.nextNav} onClick={() => swiper.slideNext()}>\r\n        nextNav\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomSwiper;\r\n",["354","355"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\EmpPie.js",["356","357","358"],"import React, { useCallback, useState, useMemo, memo, useRef } from \"react\";\r\nimport { PieChart, Pie, Sector, ResponsiveContainer, Cell } from \"recharts\";\r\nimport SalaryFilter from \"./SalaryFilter\";\r\nimport styled from \"styled-components\";\r\nimport CustomizedPieLabel from \"./CustomizedPieLabel\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst Filter = styled.div`\r\n  position: absolute;\r\n  height: 50px;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst ChartContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst EmpLabel = styled.span`\r\n  font-size: 23px;\r\n  font-weight: bold;\r\n  width: 120px;\r\n  text-align: center;\r\n  color: #333;\r\n  top: 0;\r\n  padding-left: ${(props) => props.cos < 0 && \"100px\"};\r\n  text-shadow: 1px 2px 0px #d6d6dd;\r\n`;\r\n\r\nconst COLOR = [\r\n  \"#E0CFEE\",\r\n  \"#C8A9E1\",\r\n  \"#B084D3\",\r\n  \"#9860C4\",\r\n  \" #7F42AF\",\r\n  \"#7240B1\",\r\n  \"#643795\",\r\n  \"#5A338A\",\r\n  \"#432871 \",\r\n  \"#4B2A6F \",\r\n  \"#2D1B4B \",\r\n  \"#170E25 \",\r\n  \"#000000\",\r\n];\r\n\r\nconst ActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    matchMd,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (matchMd ? outerRadius - 10 : outerRadius) * cos;\r\n  const sy = cy + (matchMd ? outerRadius - 10 : outerRadius) * sin;\r\n  const mx = cx + (matchMd ? outerRadius + 20 : outerRadius) * cos;\r\n  const my = cy + (matchMd ? outerRadius + 30 : outerRadius) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * (matchMd ? 35 : -2);\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  const empX = matchMd ? ex + (cos > 0 ? 0.8 : -9) * 12 : cx - 30;\r\n  const empY = matchMd ? ey - 25 : cy + 20;\r\n  const percentX = matchMd\r\n    ? ex + (cos > 0 ? 2 : -2) * 12\r\n    : cos > 0\r\n    ? cx - 30\r\n    : cx + 40;\r\n  const percentY = matchMd ? ey : cy + 50;\r\n\r\n  const circle = matchMd ? (\r\n    <circle\r\n      cx={ex}\r\n      cy={ey}\r\n      r={4.5}\r\n      fill={fill}\r\n      stroke=\"#FFF\"\r\n      strokeWidth={2}\r\n      textAnchor={textAnchor}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <g>\r\n      <defs>\r\n        <filter id=\"f1\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\r\n          <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"5\" dy=\"2\" />\r\n          <feColorMatrix\r\n            result=\"matrixOut\"\r\n            in=\"offOut\"\r\n            type=\"matrix\"\r\n            values=\"0.2 0 0 0 0 0 0.2 0 0 0 0 0.4 0.2 0 0 0 0 0 1 0\"\r\n          />\r\n          <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"2\" />\r\n          <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\r\n        </filter>\r\n      </defs>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n        filter=\"url(#f1)\"\r\n      />\r\n\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        strokeWidth={2}\r\n        fill=\"none\"\r\n      />\r\n      {circle}\r\n      <foreignObject\r\n        x={empX}\r\n        y={empY}\r\n        width=\"100\"\r\n        height=\"40\"\r\n        textAnchor={textAnchor}\r\n      >\r\n        <EmpLabel xmlns=\"http://www.w3.org/1999/xhtml\">\r\n          {`${payload.emp}명`}\r\n        </EmpLabel>\r\n      </foreignObject>\r\n      <text\r\n        x={percentX}\r\n        y={percentY}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`( ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst EmpPie = memo(({ empData }) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [value, setValue] = useState(null);\r\n  const matchMd = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  const onClickFilter = useCallback(\r\n    (icon) => {\r\n      const goReverse = (icon) => {\r\n        if (icon === \"up\") {\r\n          setValue(40000);\r\n          setActiveIndex(0);\r\n        } else {\r\n          setValue(160000);\r\n          setActiveIndex(12);\r\n        }\r\n      };\r\n\r\n      const go = (icon) => {\r\n        let nextValue;\r\n        if (icon === \"up\") {\r\n          nextValue = value ? value + 10000 : 50000;\r\n        } else {\r\n          nextValue = value ? value - 10000 : 160000;\r\n        }\r\n        setValue(nextValue);\r\n        setActiveIndex((nextValue - 40000) / 10000);\r\n      };\r\n\r\n      switch (icon) {\r\n        case \"up\":\r\n          return value === 160000 ? goReverse(\"up\") : go(\"up\");\r\n        case \"down\":\r\n          return value === 40000 ? goReverse(\"down\") : go(\"down\");\r\n      }\r\n    },\r\n    [value]\r\n  );\r\n\r\n  if (!empData) return null;\r\n\r\n  const cell = empData.map((data, index) => {\r\n    return <Cell key={`salary-${data.sal}`} fill={COLOR[index]} />;\r\n  });\r\n  return (\r\n    <>\r\n      <ChartContainer>\r\n        <ResponsiveContainer width=\"100%\" height={500}>\r\n          <PieChart margin={{ top: 60, bottom: 60 }}>\r\n            <Pie\r\n              matchMd={matchMd}\r\n              activeIndex={activeIndex}\r\n              activeShape={<ActiveShape matchMd={matchMd} />}\r\n              data={empData}\r\n              dataKey=\"emp\"\r\n              innerRadius=\"65%\"\r\n              outerRadius=\"100%\"\r\n              stroke=\"none\"\r\n              paddingAngle=\"5\"\r\n              label={\r\n                <CustomizedPieLabel\r\n                  activeIndex={activeIndex}\r\n                  matchMd={matchMd}\r\n                  salary={value}\r\n                />\r\n              }\r\n              labelLine={false}\r\n            >\r\n              {cell}\r\n            </Pie>\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n        <Filter>\r\n          <SalaryFilter\r\n            value={value ? value : 40000}\r\n            onClickFilter={onClickFilter}\r\n          />\r\n        </Filter>\r\n      </ChartContainer>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EmpPie;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Graph\\SalaryStackChart\\CustomizedPieLabel.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\reducers\\home.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\store\\actions\\home.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\MainLoader.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\shared\\styleItems.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Home.js",["359"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport EmpRadar from \"./Graph/EmpRadar\";\r\nimport MainLoader from \"../UI/MainLoader\";\r\nimport Svg from \"../../shared/svgIcons\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  height: 90%;\r\n  grid-template-rows: 1fr 5.5fr;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 2vh;\r\n  padding-bottom: 30px;\r\n  justify-items: center;\r\n  align-contents: center;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding-top: 5vh;\r\n  font-size: 5.5vw;\r\n  text-align: center;\r\n`;\r\n\r\nconst NavTab = styled.ul`\r\n  position: absolute;\r\n  top: 20%;\r\n  display: grid;\r\n  grid-gap: 2vh;\r\n  justify-items: center;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  width: 20%;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: 1.8vw;\r\n  border-radius: 5px;\r\n  background-color: #2196f3;\r\n  padding: 2% 20%;\r\n  list-style: none;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n  span {\r\n    position: relative;\r\n    left: 20%;\r\n    line-height: 300%;\r\n  }\r\n  div {\r\n    position: absolute;\r\n    left: 10%;\r\n    top: 20%;\r\n  }\r\n`;\r\n\r\nconst Main = styled.div`\r\n  position: relative;\r\n  border: 1px solid black;\r\n  width: 70%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Home = () => {\r\n  const { emp, total, loading } = useSelector((state) => ({\r\n    emp: state.home.emp,\r\n    total: state.home.total,\r\n    loading: state.home.loading,\r\n  }));\r\n\r\n  const main = emp ? <EmpRadar data={emp} /> : null;\r\n  const home = loading ? (\r\n    <MainLoader />\r\n  ) : (\r\n    <Container>\r\n      <Header>Employee Mark</Header>\r\n      <Main>{main}</Main>\r\n      <NavTab>\r\n        <NavItem>\r\n          <NavLink to=\"/board\" component=\"a\">\r\n            <Svg name=\"EmployeeSearch\" fontSize=\"large\" component=\"div\" />\r\n            <span>직원 검색</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink to=\"/statistics\" component=\"a\">\r\n            <Svg name=\"SalaryStatistics\" fontSize=\"large\" component=\"div\" />\r\n            <span>연봉 통계</span>\r\n          </NavLink>\r\n        </NavItem>\r\n      </NavTab>\r\n    </Container>\r\n  );\r\n\r\n  return home;\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\EmpRadar.js",["360","361","362","363"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\CustomizedRadarTick.js",["364","365","366"],"import styled from \"styled-components\";\r\nimport Svg from \"../../../shared/svgIcons\";\r\nimport { setChartColor } from \"../../../shared/utility\";\r\n\r\nconst Tick = styled.div`\r\n  position: relative;\r\n  width: 170px;\r\n  height: 100px;\r\n  left: 0;\r\n  color: ${(props) =>\r\n    props.activeValue === props.value ? props.fill : \"black\"};\r\n  margin: 0 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  text-align: left;\r\n  font-weight: bold;\r\n  font-size: 19px;\r\n  padding: ${(props) =>\r\n    props.value.length <= 16 ? \"0px 30px 0px\" : \"0px 30px 0px\"};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: 23px;\r\n  height: 23px;\r\n  left: 0%;\r\n  position: absolute;\r\n`;\r\n\r\nconst CustomizedRadarTick = (tickProps) => {\r\n  const { x, y, payload, data, width, radius, index, activeValue } = tickProps;\r\n  const { coordinate, value } = payload;\r\n\r\n  // console.log(\"activeValue\", radius);\r\n\r\n  console.log(\"tick render\");\r\n\r\n  const d =\r\n    radius > 180\r\n      ? (Math.round(radius) / 4.5).toFixed()\r\n      : (Math.round(radius) / 3.5).toFixed(); // 그래프 크기에 따라서 label간격조정\r\n\r\n  const tickVal = typeof value === \"string\" ? value : `${value / 10000}만`;\r\n\r\n  const labelAngle = Math.round(coordinate);\r\n\r\n  let XPoint;\r\n  let YPoint;\r\n\r\n  if (labelAngle < 90 && labelAngle > -70) {\r\n    XPoint = radius > 180 ? x + d + 10 : x - 10;\r\n    YPoint = y - 10;\r\n  }\r\n  if (labelAngle <= -60 && labelAngle >= -120) {\r\n    XPoint = x - 1.5 * d;\r\n    YPoint = y + 15;\r\n  }\r\n\r\n  if (labelAngle <= -150 && labelAngle >= -230) {\r\n    XPoint = radius > 180 ? x - 3.5 * d : x - 2.5 * d;\r\n    YPoint = y - 10;\r\n  }\r\n\r\n  if (labelAngle === 90) {\r\n    XPoint = radius > 180 ? x - 2 * d : x - d;\r\n    YPoint = y - 45;\r\n  }\r\n\r\n  const fill = setChartColor(tickVal) || \"green\";\r\n\r\n  return (\r\n    <foreignObject x={XPoint} y={YPoint} width=\"170\" height=\"80\">\r\n      <Tick\r\n        xmlns=\"http://www.w3.org/1999/xhtml\"\r\n        value={tickVal}\r\n        fill={fill}\r\n        activeValue={activeValue}\r\n      >\r\n        <Icon>\r\n          <Svg name={tickVal} />\r\n        </Icon>\r\n        <Label value={tickVal}>{tickVal}</Label>\r\n      </Tick>\r\n    </foreignObject>\r\n  );\r\n};\r\n\r\nexport default CustomizedRadarTick;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\shared\\svgIcons.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\CustomizedRadarLabel.js",["367","368","369","370"],"import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Label = styled.div`\r\n  width: 100px;\r\n  height: 20px;\r\n  position: relative;\r\n`;\r\n\r\nconst InnerLabel = styled.div`\r\n  font-size: 15px;\r\n\r\n  font-weight: bold;\r\n  position: absolute;\r\n  display: ${(props) => (props.activeValue === props.name ? \"block\" : \"none\")};\r\n  left: 40%;\r\n  padding-right: 15px;\r\n  text-shadow: 2px 2px 1px #cecece;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst CustomizedRadarLabel = (props) => {\r\n  const { x, y, cx, cy, angle, radius, value, name, activeValue } = props;\r\n\r\n  const XPoint = radius <= 90 ? x - radius : x - (180 - radius) / 2;\r\n\r\n  return (\r\n    <foreignObject x={XPoint} y={y} width=\"100\" height=\"20\">\r\n      <Label>\r\n        <InnerLabel activeValue={activeValue} name={name}>\r\n          {value}명\r\n        </InnerLabel>\r\n      </Label>\r\n    </foreignObject>\r\n  );\r\n};\r\n\r\nexport default CustomizedRadarLabel;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\CustomizedDot.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\DeptEmpRadar.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home\\Graph\\TitleEmpRadar.js",[],{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":21,"column":6,"nodeType":"377","endLine":21,"endColumn":8,"suggestions":"378"},{"ruleId":"379","severity":1,"message":"380","line":4,"column":8,"nodeType":"381","messageId":"382","endLine":4,"endColumn":12},{"ruleId":"375","severity":1,"message":"383","line":274,"column":6,"nodeType":"377","endLine":274,"endColumn":8,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":359,"column":3,"nodeType":"387","messageId":"388","endLine":361,"endColumn":4},{"ruleId":"371","replacedBy":"389"},{"ruleId":"373","replacedBy":"390"},{"ruleId":"379","severity":1,"message":"391","line":8,"column":10,"nodeType":"381","messageId":"382","endLine":8,"endColumn":19},{"ruleId":"379","severity":1,"message":"392","line":65,"column":9,"nodeType":"381","messageId":"382","endLine":65,"endColumn":18},{"ruleId":"393","severity":1,"message":"394","line":105,"column":5,"nodeType":"395","messageId":"396","endLine":115,"endColumn":6},{"ruleId":"375","severity":1,"message":"397","line":116,"column":6,"nodeType":"377","endLine":116,"endColumn":24,"suggestions":"398"},{"ruleId":"379","severity":1,"message":"399","line":1,"column":44,"nodeType":"381","messageId":"382","endLine":1,"endColumn":51},{"ruleId":"379","severity":1,"message":"400","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":26},{"ruleId":"379","severity":1,"message":"401","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":20},{"ruleId":"379","severity":1,"message":"400","line":1,"column":33,"nodeType":"381","messageId":"382","endLine":1,"endColumn":42},{"ruleId":"379","severity":1,"message":"402","line":19,"column":10,"nodeType":"381","messageId":"382","endLine":19,"endColumn":18},{"ruleId":"385","severity":1,"message":"386","line":276,"column":3,"nodeType":"387","messageId":"388","endLine":278,"endColumn":4},{"ruleId":"379","severity":1,"message":"402","line":6,"column":3,"nodeType":"381","messageId":"382","endLine":6,"endColumn":11},{"ruleId":"379","severity":1,"message":"403","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":14},{"ruleId":"375","severity":1,"message":"404","line":100,"column":6,"nodeType":"377","endLine":100,"endColumn":20,"suggestions":"405"},{"ruleId":"379","severity":1,"message":"406","line":1,"column":40,"nodeType":"381","messageId":"382","endLine":1,"endColumn":44},{"ruleId":"379","severity":1,"message":"407","line":3,"column":46,"nodeType":"381","messageId":"382","endLine":3,"endColumn":52},{"ruleId":"408","severity":1,"message":"409","line":95,"column":5,"nodeType":"410","messageId":"411","endLine":95,"endColumn":10},{"ruleId":"375","severity":1,"message":"412","line":124,"column":21,"nodeType":"413","endLine":124,"endColumn":45},{"ruleId":"414","severity":1,"message":"415","line":167,"column":11,"nodeType":"416","endLine":167,"endColumn":64},{"ruleId":"379","severity":1,"message":"417","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":25},{"ruleId":"379","severity":1,"message":"400","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"418","line":2,"column":23,"nodeType":"381","messageId":"382","endLine":2,"endColumn":34},{"ruleId":"379","severity":1,"message":"419","line":17,"column":9,"nodeType":"381","messageId":"382","endLine":17,"endColumn":16},{"ruleId":"379","severity":1,"message":"420","line":2,"column":22,"nodeType":"381","messageId":"382","endLine":2,"endColumn":26},{"ruleId":"379","severity":1,"message":"400","line":1,"column":40,"nodeType":"381","messageId":"382","endLine":1,"endColumn":49},{"ruleId":"379","severity":1,"message":"421","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":11},{"ruleId":"408","severity":1,"message":"422","line":70,"column":5,"nodeType":"410","messageId":"411","endLine":70,"endColumn":14},{"ruleId":"423","severity":2,"message":"424","line":229,"column":29,"nodeType":"381","messageId":"425","endLine":229,"endColumn":33},{"ruleId":"371","replacedBy":"426"},{"ruleId":"373","replacedBy":"427"},{"ruleId":"379","severity":1,"message":"428","line":15,"column":39,"nodeType":"381","messageId":"382","endLine":15,"endColumn":44},{"ruleId":"379","severity":1,"message":"429","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":17},{"ruleId":"379","severity":1,"message":"430","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":23},{"ruleId":"379","severity":1,"message":"431","line":2,"column":18,"nodeType":"381","messageId":"382","endLine":2,"endColumn":29},{"ruleId":"379","severity":1,"message":"403","line":5,"column":10,"nodeType":"381","messageId":"382","endLine":5,"endColumn":14},{"ruleId":"371","replacedBy":"432"},{"ruleId":"373","replacedBy":"433"},{"ruleId":"379","severity":1,"message":"399","line":1,"column":40,"nodeType":"381","messageId":"382","endLine":1,"endColumn":47},{"ruleId":"379","severity":1,"message":"430","line":1,"column":55,"nodeType":"381","messageId":"382","endLine":1,"endColumn":61},{"ruleId":"393","severity":1,"message":"394","line":180,"column":7,"nodeType":"395","messageId":"396","endLine":185,"endColumn":8},{"ruleId":"379","severity":1,"message":"434","line":72,"column":16,"nodeType":"381","messageId":"382","endLine":72,"endColumn":21},{"ruleId":"379","severity":1,"message":"400","line":1,"column":25,"nodeType":"381","messageId":"382","endLine":1,"endColumn":34},{"ruleId":"379","severity":1,"message":"417","line":1,"column":36,"nodeType":"381","messageId":"382","endLine":1,"endColumn":44},{"ruleId":"379","severity":1,"message":"435","line":6,"column":10,"nodeType":"381","messageId":"382","endLine":6,"endColumn":18},{"ruleId":"379","severity":1,"message":"436","line":29,"column":9,"nodeType":"381","messageId":"382","endLine":29,"endColumn":21},{"ruleId":"379","severity":1,"message":"437","line":35,"column":26,"nodeType":"381","messageId":"382","endLine":35,"endColumn":30},{"ruleId":"379","severity":1,"message":"438","line":35,"column":32,"nodeType":"381","messageId":"382","endLine":35,"endColumn":37},{"ruleId":"379","severity":1,"message":"428","line":35,"column":47,"nodeType":"381","messageId":"382","endLine":35,"endColumn":52},{"ruleId":"379","severity":1,"message":"406","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":21},{"ruleId":"379","severity":1,"message":"439","line":23,"column":17,"nodeType":"381","messageId":"382","endLine":23,"endColumn":19},{"ruleId":"379","severity":1,"message":"440","line":23,"column":21,"nodeType":"381","messageId":"382","endLine":23,"endColumn":23},{"ruleId":"379","severity":1,"message":"441","line":23,"column":25,"nodeType":"381","messageId":"382","endLine":23,"endColumn":30},"no-native-reassign",["442"],"no-negated-in-lhs",["443"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'categoryLoaded', 'dispatch', and 'empLoaded'. Either include them or remove the dependency array.","ArrayExpression",["444"],"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'keywords.length'. Either include them or remove the dependency array.",["445"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["442"],["443"],"'initError' is defined but never used.","'trackType' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'categoryObj.dept' and 'categoryObj.title'. Either include them or remove the dependency array.",["446"],"'useMemo' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'initArea' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["447"],"'memo' is defined but never used.","'Thumbs' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","Assignments to the 'chartSwiper' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","'useDispatch' is defined but never used.","'classes' is assigned a value but never used.","'fade' is defined but never used.","'_' is defined but never used.","Duplicate key 'transform'.","no-undef","'type' is not defined.","undef",["442"],["443"],"'index' is assigned a value but never used.","'PropTypes' is defined but never used.","'useRef' is defined but never used.","'SwiperSlide' is defined but never used.",["442"],["443"],"'total' is assigned a value but never used.","'debounce' is defined but never used.","'updateSlides' is assigned a value but never used.","'data' is assigned a value but never used.","'width' is assigned a value but never used.","'cx' is assigned a value but never used.","'cy' is assigned a value but never used.","'angle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},"Update the dependencies array to be: [categoryLoaded, dispatch, empLoaded]",{"range":"456","text":"457"},"Update the dependencies array to be: [dispatch, keywords.length]",{"range":"458","text":"459"},"Update the dependencies array to be: [option, keywords, categoryObj.title, categoryObj.dept]",{"range":"460","text":"461"},"Update the dependencies array to be: [dispatch, range, value]",{"range":"462","text":"463"},[804,806],"[categoryLoaded, dispatch, empLoaded]",[7052,7054],"[dispatch, keywords.length]",[3320,3338],"[option, keywords, categoryObj.title, categoryObj.dept]",[2439,2453],"[dispatch, range, value]"]