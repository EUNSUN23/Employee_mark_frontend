[{"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js":"1","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js":"2","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js":"3","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js":"4","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics.js":"5","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js":"6","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js":"7","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\ScrollToTop.js":"8","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Loader.js":"9","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js":"10","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js":"11","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js":"12","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js":"13","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js":"14","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js":"15","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js":"16","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js":"17","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js":"18","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js":"19","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js":"20","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js":"21","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js":"22","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js":"23","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js":"24","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\TypeBtn.js":"25","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Track.js":"26","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\RankCard\\RankCard.js":"27","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useBtn.js":"28","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\DefaultBackground.js":"29","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js":"30","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\RecentKeywords.js":"31"},{"size":742,"mtime":1612770320867,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1606118173109,"results":"34","hashOfConfig":"33"},{"size":977,"mtime":1613387552272,"results":"35","hashOfConfig":"33"},{"size":431,"mtime":1612945160906,"results":"36","hashOfConfig":"33"},{"size":362,"mtime":1612957899116,"results":"37","hashOfConfig":"33"},{"size":350,"mtime":1612771259439,"results":"38","hashOfConfig":"33"},{"size":3739,"mtime":1613739071482,"results":"39","hashOfConfig":"33"},{"size":448,"mtime":1613053976109,"results":"40","hashOfConfig":"33"},{"size":240,"mtime":1613446207890,"results":"41","hashOfConfig":"33"},{"size":13753,"mtime":1613735834161,"results":"42","hashOfConfig":"33"},{"size":266,"mtime":1613130485576,"results":"43","hashOfConfig":"33"},{"size":740,"mtime":1613446207910,"results":"44","hashOfConfig":"33"},{"size":311,"mtime":1613126265968,"results":"45","hashOfConfig":"33"},{"size":2204,"mtime":1613737417653,"results":"46","hashOfConfig":"33"},{"size":1325,"mtime":1613130485564,"results":"47","hashOfConfig":"33"},{"size":314,"mtime":1613130485574,"results":"48","hashOfConfig":"33"},{"size":553,"mtime":1613446207906,"results":"49","hashOfConfig":"33"},{"size":2552,"mtime":1613737450826,"results":"50","hashOfConfig":"33"},{"size":3922,"mtime":1613446207902,"results":"51","hashOfConfig":"33"},{"size":1639,"mtime":1613732660686,"results":"52","hashOfConfig":"33"},{"size":1074,"mtime":1613738938145,"results":"53","hashOfConfig":"33"},{"size":2149,"mtime":1613737778087,"results":"54","hashOfConfig":"33"},{"size":1912,"mtime":1613130485548,"results":"55","hashOfConfig":"33"},{"size":4381,"mtime":1613446207898,"results":"56","hashOfConfig":"33"},{"size":2216,"mtime":1612859430282,"results":"57","hashOfConfig":"33"},{"size":7182,"mtime":1612852395138,"results":"58","hashOfConfig":"33"},{"size":1787,"mtime":1613737810503,"results":"59","hashOfConfig":"33"},{"size":846,"mtime":1612861287342,"results":"60","hashOfConfig":"33"},{"size":412,"mtime":1613633549275,"results":"61","hashOfConfig":"33"},{"size":2331,"mtime":1613724509974,"results":"62","hashOfConfig":"33"},{"size":1955,"mtime":1613730897057,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"14xcp5j",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js",[],["139","140"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js",["141"],"import React, { useState, useCallback } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Board from \"./components/Board/Board\";\nimport Home from \"./components/Home\";\nimport Statistics from \"./components/Statistics\";\n\nconst App = () => {\n  const [render, setRender] = useState(null);\n\n  const history = useHistory();\n  const location = history.location.pathname;\n\n  const initPage = useCallback(() => {\n    if (location === null) {\n      setRender(true);\n    } else {\n      setRender(!render);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact render={() => <Home />} />\n        <Route\n          path=\"/board\"\n          render={() => <Board location={location} initPage={initPage} />}\n        />\n        <Route\n          path=\"/statistics\"\n          render={() => <Statistics location={location} initPage={initPage} />}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js",["142"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n  status: { danger: \"orange\" },\r\n});\r\n\r\nexport default theme;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics.js",["143","144","145"],"import React, { useEffect } from \"react\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\n\r\nconst Statistics = (props) => {\r\n  const { location, initPage, isInitialized } = props;\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <SearchBar />\r\n      <h1>Statistics</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js",["146","147"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\ScrollToTop.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Loader.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js",["148","149","150","151"],"import React, { useState, memo, useContext } from \"react\";\r\nimport {\r\n  KeywordsStateContext,\r\n  KeywordsDispatchContext,\r\n} from \"./context/KeywordsContext\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SearchMenu from \"./components/SearchMenu\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport useCategory from \"../../hooks/useCategory\";\r\nimport axios from \"axios\";\r\nimport RecentKeywords from \"./RecentKeywords\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: \"15px\",\r\n  },\r\n  searchContainer: {\r\n    paddingLeft: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  submit: {\r\n    color: \"white\",\r\n  },\r\n  home: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    border: \"none\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n    },\r\n  },\r\n  home_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  statistics: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    border: \"none\",\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  statistics_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  link_mobile: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchBar = memo((props) => {\r\n  const classes = useStyles();\r\n  const { location, onSubmitHandler } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [hover, setHover] = useState();\r\n  const [searchOption, setSearchOption] = useState(\"이름검색\");\r\n  const [searchDetail, setSearchDetail] = useState(null);\r\n  const [category, setCategory] = useCategory(null);\r\n  const [name, setName] = useInput(\"\");\r\n  const [openKeywords, setOpenKeywords] = useState(false);\r\n  const keywords = useContext(KeywordsStateContext);\r\n  const dispatch = useContext(KeywordsDispatchContext);\r\n\r\n  const getCategory = async (type) => {\r\n    // data = [\"부서\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n    let res;\r\n    let optionList;\r\n\r\n    try {\r\n      const url = `http://localhost:3008/api/${type}`;\r\n      console.log(url);\r\n      res = await axios.get(url);\r\n      console.log(res.data.packet);\r\n      optionList =\r\n        type === \"dept\"\r\n          ? res.data.packet.map((obj) => {\r\n              return obj.dept_name;\r\n            })\r\n          : res.data.packet.map((obj) => {\r\n              return obj.title;\r\n            });\r\n\r\n      optionList.unshift(type);\r\n      console.log(type, optionList);\r\n      setCategory(type, optionList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const submitData = (e) => {\r\n    e.preventDefault();\r\n    let data;\r\n\r\n    switch (searchOption) {\r\n      case \"이름검색\":\r\n        console.log(name);\r\n        dispatch({ type: \"add\", keyword: name });\r\n        data = { category: \"\", value: name };\r\n        onSubmitHandler(data);\r\n        return;\r\n      case \"부서검색\":\r\n        data = { category: \"dept\", value: searchDetail };\r\n        console.log(data);\r\n        onSubmitHandler(data);\r\n        return;\r\n      case \"직급검색\":\r\n        data = { category: \"title\", value: searchDetail };\r\n        console.log(data);\r\n        onSubmitHandler(data);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const setIndicator = (target) => {\r\n    setHover(target);\r\n  };\r\n\r\n  const changeBarType = (mode, location) => {\r\n    console.log(location);\r\n    switch (mode) {\r\n      case \"desktop\":\r\n        return location === \"/board\" ? (\r\n          <>\r\n            {\" \"}\r\n            <AssessmentIcon\r\n              className={\r\n                hover === \"statistics\"\r\n                  ? `${classes.statistics_hover} icon_statistics`\r\n                  : `${classes.statistics} icon_statistics`\r\n              }\r\n            />\r\n            <Typography component=\"span\" noWrap>\r\n              <Link to=\"/statistics\" className={classes.link}>\r\n                통계 검색\r\n              </Link>\r\n            </Typography>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <PeopleAltIcon\r\n              className={\r\n                hover === \"statistics\"\r\n                  ? `${classes.statistics_hover} icon_statistics`\r\n                  : `${classes.statistics} icon_statistics`\r\n              }\r\n            />\r\n            <Typography component=\"span\" noWrap>\r\n              <Link to=\"/board\" className={classes.link}>\r\n                직원 검색\r\n              </Link>\r\n            </Typography>\r\n          </>\r\n        );\r\n      case \"mobile\":\r\n        return location === \"/board\" ? (\r\n          <>\r\n            <AssessmentIcon />\r\n            통계 검색\r\n          </>\r\n        ) : (\r\n          <>\r\n            <PeopleAltIcon />\r\n            직원 검색\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  const mobileMenuId = \"search-employee-menu-mobile\";\r\n\r\n  const handleSearchDetail = (selected) => {\r\n    console.log(\"handle search detail\", selected);\r\n    setSearchDetail(selected);\r\n  };\r\n\r\n  const handleOptionClick = (selected) => {\r\n    handleSearchDetail(null);\r\n    setSearchOption(selected);\r\n\r\n    if (selected === \"부서검색\") {\r\n      getCategory(\"dept\");\r\n    } else {\r\n      getCategory(\"title\");\r\n    }\r\n  };\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link to=\"/\" className={classes.link_mobile}>\r\n        <MenuItem>\r\n          <HomeIcon />\r\n          홈으로\r\n        </MenuItem>\r\n      </Link>\r\n      <Link to=\"/statistics\" className={classes.link_mobile}>\r\n        <MenuItem>{changeBarType(\"mobile\", location)}</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  const createRecentKeywords = () => {\r\n    console.log(\"keywords\", keywords, \"openKeywords\", openKeywords);\r\n    if (keywords && openKeywords) {\r\n      console.log(\"RECENTKEYWORDS\", keywords);\r\n      const copiedKeywords = keywords.slice();\r\n      const recentKeywords =\r\n        keywords.length > 0 ? (\r\n          <RecentKeywords keywords={copiedKeywords} />\r\n        ) : null;\r\n\r\n      return recentKeywords;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleKeywords = (bool) => {\r\n    setOpenKeywords(bool);\r\n  };\r\n  {\r\n    /********************구현 부분***************************/\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography classes={classes.title} variant=\"h6\" noWrap>\r\n            Employee Mark\r\n          </Typography>\r\n          <form\r\n            className={classes.searchContainer}\r\n            onSubmit={(e) => {\r\n              submitData(e);\r\n            }}\r\n          >\r\n            <SearchMenu\r\n              selected={searchOption}\r\n              handleOptionClick={handleOptionClick}\r\n            />\r\n            <div className={classes.search}>\r\n              <SearchInput\r\n                searchOption={searchOption}\r\n                searchDetail={searchDetail}\r\n                handleSearchDetail={handleSearchDetail}\r\n                category={category}\r\n                classes={classes}\r\n                value={name}\r\n                onChange={setName}\r\n                handleKeywords={handleKeywords}\r\n                openKeywords={openKeywords}\r\n              />\r\n              {createRecentKeywords()}\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.submit}\r\n              // onClick={(e) => {\r\n              //   submitData(e);\r\n              // }}\r\n            >\r\n              검색\r\n            </Button>\r\n          </form>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <div className={classes.menu}>\r\n              <div\r\n                className={hover === \"home\" ? classes.home_hover : classes.home}\r\n                onMouseEnter={() => setIndicator(\"home\")}\r\n                onMouseLeave={() => setIndicator(null)}\r\n              >\r\n                <HomeIcon\r\n                  className={\r\n                    hover === \"home\"\r\n                      ? `${classes.home_hover} icon_home`\r\n                      : `${classes.home} icon_home`\r\n                  }\r\n                />\r\n                <Typography component=\"span\" noWrap>\r\n                  <Link to=\"/\" className={classes.link}>\r\n                    홈으로\r\n                  </Link>\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={\r\n                  hover === \"statistics\"\r\n                    ? classes.statistics_hover\r\n                    : classes.statistics\r\n                }\r\n                onMouseEnter={() => setIndicator(\"statistics\")}\r\n                onMouseLeave={() => setIndicator(null)}\r\n              >\r\n                {changeBarType(\"desktop\", location)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js",["152","153"],"import React, { useState, useEffect, memo } from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst CardContainer = memo((props) => {\r\n  const { employeeCards } = props;\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {employeeCards}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CardContainer;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js",["154","155"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js",["156"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js",["157"],"import React, { useEffect, useContext } from \"react\";\r\nimport {\r\n  KeywordsDispatchContext,\r\n  KeywordsStateContext,\r\n} from \"../context/KeywordsContext\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SearchDetail from \"./SearchDetail\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst SearchInput = (props) => {\r\n  const {\r\n    searchOption,\r\n    searchDetail,\r\n    handleSearchDetail,\r\n    category,\r\n    classes,\r\n    value,\r\n    onChange,\r\n    handleKeywords,\r\n  } = props;\r\n\r\n  const dispatch = useContext(KeywordsDispatchContext);\r\n  const keywords = useContext(KeywordsStateContext);\r\n\r\n  console.log(\"SEARCHINPUT_KEYWRODS\", keywords);\r\n\r\n  const initLocalStorage = () => {\r\n    dispatch({ type: \"init\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    initLocalStorage();\r\n  }, []);\r\n\r\n  console.log(\"SEARCHINPUT\", category);\r\n\r\n  return searchOption === \"이름검색\" ? (\r\n    <>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search…\"\r\n        className={classes.searchInput}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        value={value}\r\n        onChange={onChange}\r\n        onFocus={() => handleKeywords(true)}\r\n        onBlur={() => handleKeywords(false)}\r\n      />\r\n    </>\r\n  ) : (\r\n    <SearchDetail\r\n      category={searchOption === \"부서검색\" ? category.dept : category.title}\r\n      selected={searchDetail}\r\n      handleOptionClick={handleSearchDetail}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js",["158"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js",["159"],"import React, { memo } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TypeBtn from \"../../../../TypeBtn\";\r\nimport Track from \"../../../../Statistics/Track\";\r\n\r\nconst History = (props) => {\r\n  const {\r\n    type,\r\n    data,\r\n    expanded,\r\n    onChangeAccordion,\r\n    changeDataType,\r\n    classes,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={onChangeAccordion(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel12bh-content\"\r\n          id=\"panel12bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            부서이동 및 연봉변동 기록\r\n          </Typography>\r\n        </AccordionSummary>\r\n        {expanded !== \"panel1\" ? null : (\r\n          <AccordionDetails className={classes.AccordionDetails}>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"column\"\r\n              spacing={4}\r\n              className={classes.trackWrapper}\r\n            >\r\n              <Grid item>\r\n                <TypeBtn\r\n                  handleClick={changeDataType}\r\n                  expanded={expanded}\r\n                  selected={type ? type : \"default\"}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.track}>\r\n                <Track type={type ? type : \"dept\"} data={data} />\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        )}\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst SearchDetail = (props) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [detailTitle, setDetailTitle] = useState(null);\r\n  const { handleOptionClick, category, selected } = props;\r\n  console.log(\"SEARCH DETAIL\", category);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const createSearchDetail = () => {\r\n    if (category) {\r\n      console.log(category);\r\n      console.log(detailTitle);\r\n      const newTitle = category[0];\r\n      if (detailTitle === null || detailTitle !== newTitle) {\r\n        setDetailTitle(newTitle);\r\n        // q. 첫 렌더시에만 전환이 느린 이유?\r\n      }\r\n\r\n      const detailList = category.slice(1);\r\n      const searchDetail = detailList.map((item, idx) => {\r\n        return (\r\n          <StyledMenuItem\r\n            key={`category/${item}`}\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"120px\",\r\n              height: \"30px\",\r\n            }}\r\n            onClick={() => {\r\n              handleOptionClick(item);\r\n              handleClose();\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={\r\n                <Typography\r\n                  style={{\r\n                    width: \"120px\",\r\n                    height: \"30px\",\r\n                    fontSize: 13,\r\n                    lineHeight: \"30px\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Typography>\r\n              }\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                transform: \"translateX(-50%)\",\r\n              }}\r\n            />\r\n          </StyledMenuItem>\r\n        );\r\n      });\r\n\r\n      return searchDetail;\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"120px\",\r\n          height: \"30px\",\r\n        }}\r\n      >\r\n        <ListItemIcon\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"0%\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <ArrowDropDownIcon fontSize=\"small\" />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary={\r\n            <Typography\r\n              style={{\r\n                position: \"absolute\",\r\n                fontSize: 10,\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translateY(-50%)\",\r\n              }}\r\n            >\r\n              {selected ? selected : detailTitle}\r\n            </Typography>\r\n          }\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"25%\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {createSearchDetail()}\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchDetail;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\TypeBtn.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Track.js",["161"],"import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  timeline: {\r\n    transform: \"rotate(-90deg)\",\r\n    margin: \"0 auto\",\r\n    width: 30,\r\n    padding: 0,\r\n  },\r\n  timelineContentContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    textAlign: \"left\",\r\n    width: 10,\r\n    zIndex: 500,\r\n  },\r\n  timelineYear: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-start\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineInfo: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-end\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineSeparator: {\r\n    position: \"relative\",\r\n    flex: \"1fr\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  timelineDot: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n  timelineDot_last: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n\r\n  timelineConnector: {\r\n    position: \"absolute\",\r\n    height: \"3.2rem\",\r\n    width: 2,\r\n    backgroundColor: \"secondary\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    bottom: \"-44%\",\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineYearText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"60%\",\r\n    bottom: \"10%\",\r\n    transform: \"translateY(-100%)\",\r\n  },\r\n  timelineInfoText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"55%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineYearText: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    bottom: \"10%\",\r\n    transform: \"translate(-40%,-100%)\",\r\n  },\r\n  timelineInfoText: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,100%)\",\r\n  },\r\n  timelineYearText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    right: \"60%\",\r\n    bottom: 0,\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineInfoText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineIcon: {\r\n    transform: \"rotate(-90deg)\",\r\n  },\r\n});\r\n\r\nconst Track = (props) => {\r\n  const classes = useStyles();\r\n  const { type, data } = props;\r\n\r\n  console.log(\"Track render\", type, data);\r\n\r\n  const createHistoryTrack = (type, data) => {\r\n    let historyTrack = null;\r\n    if (type && data) {\r\n      const slicedHistory = data[type].slice(1, data[type].length - 1);\r\n      console.log(\"slicedHistory\", slicedHistory);\r\n      historyTrack = (\r\n        <Timeline className={classes.timeline}>\r\n          <TimelineItem\r\n            align=\"alternate\"\r\n            className={classes.timelineContentContainer}\r\n          >\r\n            <TimelineOppositeContent className={classes.timelineYear}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineYearText_first}\r\n              >\r\n                {data[type][0].from}\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator className={classes.timelineSeparator}>\r\n              <TimelineDot className={classes.timelineDot} />\r\n              <TimelineConnector\r\n                className={classes.timelineConnector}\r\n                variant=\"text\"\r\n              />\r\n            </TimelineSeparator>\r\n            <TimelineContent className={classes.timelineInfo}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineInfoText_first}\r\n              >\r\n                {type === \"dept\" ? data[type][0].dept : data[type][0].salary}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n          {slicedHistory.map((data, idx) => {\r\n            return (\r\n              <TimelineItem\r\n                className={classes.timelineContentContainer}\r\n                key={data.from}\r\n              >\r\n                <TimelineOppositeContent className={classes.timelineYear}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.timelineYearText}\r\n                  >\r\n                    {data.from}\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator className={classes.timelineSeparator}>\r\n                  <TimelineDot className={classes.timelineDot} />\r\n                  <TimelineConnector className={classes.timelineConnector} />\r\n                </TimelineSeparator>\r\n                <TimelineContent className={classes.timelineInfo}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.timelineInfoText}\r\n                  >\r\n                    {type === \"dept\" ? data.dept : data.salary}\r\n                  </Typography>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            );\r\n          })}\r\n\r\n          <TimelineItem className={classes.timelineContentContainer}>\r\n            <TimelineOppositeContent className={classes.timelineYear}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineYearText_last}\r\n              >\r\n                {data[type][data[type].length - 1].from}\r\n                ~현재\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator className={classes.timelineSeparator}>\r\n              <TimelineDot\r\n                className={classes.timelineDot_last}\r\n                color={\r\n                  type === \"dept\" || type === null ? \"primary\" : \"secondary\"\r\n                }\r\n              />\r\n            </TimelineSeparator>\r\n            <TimelineContent className={classes.timelineInfo}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineInfoText_last}\r\n              >\r\n                {type === \"dept\"\r\n                  ? data[type][data[type].length - 1].dept\r\n                  : data[type][data[type].length - 1].salary}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      );\r\n    }\r\n\r\n    return historyTrack;\r\n  };\r\n\r\n  return createHistoryTrack(type, data);\r\n};\r\n\r\nexport default Track;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\RankCard\\RankCard.js",["162","163","164","165"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useBtn.js",["166","167"],"import React, { useState } from \"react\";\r\n\r\nconst useBtn = (initState) => {\r\n  const [button1, setButton1] = useState(initState);\r\n  const [button2, setButton2] = useState(initState);\r\n  const [text1, setText1] = useState();\r\n  const [text2, setText2] = useState();\r\n\r\n  const initBtn = (expanded) => {\r\n    switch (expanded) {\r\n      case \"panel1\":\r\n        setButton1(\"dept\");\r\n        setText1(\"부서 이동\");\r\n        setButton2(\"salary\");\r\n        setText2(\"연봉 변동\");\r\n        return;\r\n      case \"panel2\":\r\n        setButton1(\"steadRank\");\r\n        setText1(\"근속 랭킹\");\r\n        setButton2(\"salaryRank\");\r\n        setText2(\"연봉 랭킹\");\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return [\r\n    { button1: button1, button2: button2, text1: text1, text2: text2 },\r\n    initBtn,\r\n  ];\r\n};\r\n\r\nexport default useBtn;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\DefaultBackground.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js",["168"],"import React, { useReducer, createContext, useMemo } from \"react\";\r\n\r\nconst initState = [];\r\n\r\nconst keywordsReducer = (state = initState, action) => {\r\n  const storage = JSON.parse(localStorage.getItem(\"RECENT\"));\r\n\r\n  switch (action.type) {\r\n    case \"init\":\r\n      console.log(\"INITIAL KEYWORD\", storage);\r\n      let initializedState;\r\n      if (storage === null) {\r\n        return;\r\n      } else {\r\n        initializedState = state.concat(storage);\r\n      }\r\n\r\n      return initializedState;\r\n    case \"add\":\r\n      const newKeyword = { index: Date.now(), value: action.keyword };\r\n      const addedState = state.concat(newKeyword);\r\n      if (storage === null) {\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedState.slice()));\r\n      } else {\r\n        const addedStorage = storage.slice();\r\n        addedStorage.push(newKeyword);\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedStorage));\r\n      }\r\n\r\n      return addedState;\r\n    case \"delete\":\r\n      const deletedState = state.filter((el, idx) => {\r\n        return el.index !== action.keyword.index;\r\n      });\r\n      const deletedStorage = storage.filter((el, idx) => {\r\n        return el.index !== action.keyword.index;\r\n      });\r\n      localStorage.setItem(\"RECENT\", JSON.stringify(deletedStorage));\r\n      return deletedState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/*이제, state 와 dispatch 를 Context 통하여 다른 컴포넌트에서 바로 사용 할 수 있게 해줄건데요, 우리는 하나의 Context 를 만들어서 state 와 dispatch 를 함께 넣어주는 대신에, 두개의 Context 를 만들어서 따로 따로 넣어줄 것입니다. 이렇게 하면 dispatch 만 필요한 컴포넌트에서 불필요한 렌더링을 방지 할 수 있습니다. 추가적으로, 사용하게 되는 과정에서 더욱 편리하기도 합니다.\r\n\r\n */\r\nexport const KeywordsStateContext = createContext();\r\nexport const KeywordsDispatchContext = createContext();\r\n\r\nexport const KeywordsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(keywordsReducer, initState);\r\n\r\n  return (\r\n    <KeywordsStateContext.Provider value={state}>\r\n      <KeywordsDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </KeywordsDispatchContext.Provider>\r\n    </KeywordsStateContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\RecentKeywords.js",["169"],"import React, { useContext } from \"react\";\r\nimport { KeywordsDispatchContext } from \"./context/KeywordsContext\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 37,\r\n    border: \"1px solid  #e7e7e7\",\r\n    width: \"100%\",\r\n    boxSizing: \"border-box\",\r\n    color: \"black\",\r\n    padding: 0,\r\n    backgroundColor: \"white\",\r\n    \"& :hover\": {\r\n      backgroundColor: \"#e7e7e7\",\r\n    },\r\n  },\r\n\r\n  root: {\r\n    // border: \"2px solid green\",\r\n    padding: \"0 12px\",\r\n  },\r\n\r\n  listItemText: {\r\n    marginLeft: \"5%\",\r\n  },\r\n  listItemIcon: {\r\n    cursor: \"pointer\",\r\n    color: \"grey\",\r\n    marginRight: \"4%\",\r\n    \"& :hover\": {\r\n      color: \"red\",\r\n    },\r\n    // border: \"1px solid blue\",\r\n  },\r\n}));\r\n\r\nconst RecentKeywords = (props) => {\r\n  const classes = useStyles();\r\n  const { keywords } = props;\r\n  const dispatch = useContext(KeywordsDispatchContext);\r\n\r\n  const createList = (keywords) => {\r\n    return keywords.map((el, idx) => {\r\n      console.log(\"createKeywords\", el);\r\n      return (\r\n        <ListItem\r\n          key={`keywords_${el.index}`}\r\n          divider={true}\r\n          className={classes.root}\r\n        >\r\n          <ClearIcon\r\n            className={classes.listItemIcon}\r\n            onClick={() => dispatch({ type: \"delete\", index: el.index })}\r\n            fontSize=\"small\"\r\n          />\r\n\r\n          <ListItemText primary={el.value} className={classes.listItemText} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n  return <List className={classes.container}>{createList(keywords)}</List>;\r\n};\r\n\r\nexport default RecentKeywords;\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":19,"column":6,"nodeType":"176","endLine":19,"endColumn":16,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":12},{"ruleId":"178","severity":1,"message":"182","line":5,"column":11,"nodeType":"180","messageId":"181","endLine":5,"endColumn":19},{"ruleId":"178","severity":1,"message":"183","line":5,"column":31,"nodeType":"180","messageId":"181","endLine":5,"endColumn":44},{"ruleId":"174","severity":1,"message":"184","line":9,"column":6,"nodeType":"176","endLine":9,"endColumn":8,"suggestions":"185"},{"ruleId":"174","severity":1,"message":"184","line":72,"column":6,"nodeType":"176","endLine":72,"endColumn":19,"suggestions":"186"},{"ruleId":"174","severity":1,"message":"187","line":83,"column":6,"nodeType":"176","endLine":83,"endColumn":8,"suggestions":"188"},{"ruleId":"178","severity":1,"message":"189","line":209,"column":10,"nodeType":"180","messageId":"181","endLine":209,"endColumn":18},{"ruleId":"178","severity":1,"message":"190","line":275,"column":9,"nodeType":"180","messageId":"181","endLine":275,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":293,"column":5,"nodeType":"193","messageId":"194","endLine":339,"endColumn":6},{"ruleId":"195","severity":1,"message":"196","line":401,"column":3,"nodeType":"197","messageId":"198","endLine":403,"endColumn":4},{"ruleId":"178","severity":1,"message":"199","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"200","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"201","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":17},{"ruleId":"178","severity":1,"message":"202","line":54,"column":5,"nodeType":"180","messageId":"181","endLine":54,"endColumn":14},{"ruleId":"178","severity":1,"message":"203","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"204","line":34,"column":6,"nodeType":"176","endLine":34,"endColumn":8,"suggestions":"205"},{"ruleId":"178","severity":1,"message":"206","line":6,"column":16,"nodeType":"180","messageId":"181","endLine":6,"endColumn":23},{"ruleId":"178","severity":1,"message":"207","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":21},{"ruleId":"178","severity":1,"message":"200","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"209","line":70,"column":5,"nodeType":"210","messageId":"211","endLine":70,"endColumn":14},{"ruleId":"178","severity":1,"message":"212","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":18},{"ruleId":"178","severity":1,"message":"213","line":37,"column":7,"nodeType":"180","messageId":"181","endLine":37,"endColumn":16},{"ruleId":"178","severity":1,"message":"214","line":40,"column":11,"nodeType":"180","messageId":"181","endLine":40,"endColumn":15},{"ruleId":"178","severity":1,"message":"215","line":40,"column":17,"nodeType":"180","messageId":"181","endLine":40,"endColumn":21},{"ruleId":"178","severity":1,"message":"216","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":22,"column":7,"nodeType":"219","messageId":"220","endLine":23,"endColumn":16},{"ruleId":"178","severity":1,"message":"221","line":1,"column":44,"nodeType":"180","messageId":"181","endLine":1,"endColumn":51},{"ruleId":"178","severity":1,"message":"222","line":6,"column":8,"nodeType":"180","messageId":"181","endLine":6,"endColumn":31},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'render'. Either include it or remove the dependency array. You can also do a functional update 'setRender(r => ...)' if you only need 'render' in the 'setRender' call.","ArrayExpression",["225"],"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'isInitialized' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initPage'. Either include it or remove the dependency array.",["226"],["227"],"React Hook useCallback has missing dependencies: 'getEmployeeData' and 'page.initPage'. Either include them or remove the dependency array.",["228"],"'anchorEl' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDialog' is defined but never used.","'hire_date' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'initLocalStorage'. Either include it or remove the dependency array.",["229"],"'setData' is assigned a value but never used.","'memo' is defined but never used.","no-dupe-keys","Duplicate key 'transform'.","ObjectExpression","unexpected","'Typography' is defined but never used.","'rankTitle' is assigned a value but never used.","'data' is assigned a value but never used.","'type' is assigned a value but never used.","'React' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'useMemo' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [location, render]",{"range":"240","text":"241"},"Update the dependencies array to be: [initPage]",{"range":"242","text":"243"},"Update the dependencies array to be: [initPage, scrollToTop]",{"range":"244","text":"245"},"Update the dependencies array to be: [getEmployeeData, page.initPage]",{"range":"246","text":"247"},"Update the dependencies array to be: [initLocalStorage]",{"range":"248","text":"249"},[538,548],"[location, render]",[239,241],"[initPage]",[2366,2379],"[initPage, scrollToTop]",[2618,2620],"[getEmployeeData, page.initPage]",[805,807],"[initLocalStorage]"]