[{"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js":"1","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js":"2","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js":"3","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js":"4","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics.js":"5","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js":"6","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js":"7","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\ScrollToTop.js":"8","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Loader.js":"9","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js":"10","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js":"11","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js":"12","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js":"13","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js":"14","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js":"15","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js":"16","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js":"17","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js":"18","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js":"19","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js":"20","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js":"21","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js":"22","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js":"23","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js":"24","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\TypeBtn.js":"25","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Track.js":"26","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\RankCard\\RankCard.js":"27","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useBtn.js":"28","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\DefaultBackground.js":"29","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js":"30"},{"size":742,"mtime":1612770320867,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1606118173109,"results":"33","hashOfConfig":"32"},{"size":977,"mtime":1613387552272,"results":"34","hashOfConfig":"32"},{"size":431,"mtime":1612945160906,"results":"35","hashOfConfig":"32"},{"size":362,"mtime":1612957899116,"results":"36","hashOfConfig":"32"},{"size":350,"mtime":1612771259439,"results":"37","hashOfConfig":"32"},{"size":3771,"mtime":1613983376940,"results":"38","hashOfConfig":"32"},{"size":448,"mtime":1613053976109,"results":"39","hashOfConfig":"32"},{"size":240,"mtime":1613446207890,"results":"40","hashOfConfig":"32"},{"size":16150,"mtime":1614079069270,"results":"41","hashOfConfig":"32"},{"size":266,"mtime":1613130485576,"results":"42","hashOfConfig":"32"},{"size":740,"mtime":1613446207910,"results":"43","hashOfConfig":"32"},{"size":311,"mtime":1613126265968,"results":"44","hashOfConfig":"32"},{"size":2204,"mtime":1613737417653,"results":"45","hashOfConfig":"32"},{"size":1325,"mtime":1613130485564,"results":"46","hashOfConfig":"32"},{"size":314,"mtime":1613130485574,"results":"47","hashOfConfig":"32"},{"size":553,"mtime":1613446207906,"results":"48","hashOfConfig":"32"},{"size":2552,"mtime":1613737450826,"results":"49","hashOfConfig":"32"},{"size":4153,"mtime":1613991499350,"results":"50","hashOfConfig":"32"},{"size":2399,"mtime":1614074167010,"results":"51","hashOfConfig":"32"},{"size":1074,"mtime":1613738938145,"results":"52","hashOfConfig":"32"},{"size":2149,"mtime":1613737778087,"results":"53","hashOfConfig":"32"},{"size":1912,"mtime":1613130485548,"results":"54","hashOfConfig":"32"},{"size":5738,"mtime":1614140738471,"results":"55","hashOfConfig":"32"},{"size":2216,"mtime":1612859430282,"results":"56","hashOfConfig":"32"},{"size":7182,"mtime":1612852395138,"results":"57","hashOfConfig":"32"},{"size":1787,"mtime":1613737810503,"results":"58","hashOfConfig":"32"},{"size":846,"mtime":1612861287342,"results":"59","hashOfConfig":"32"},{"size":412,"mtime":1613633549275,"results":"60","hashOfConfig":"32"},{"size":2451,"mtime":1614138410397,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"14xcp5j",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js",[],["136","137"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js",["138"],"import React, { useState, useCallback } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Board from \"./components/Board/Board\";\nimport Home from \"./components/Home\";\nimport Statistics from \"./components/Statistics\";\n\nconst App = () => {\n  const [render, setRender] = useState(null);\n\n  const history = useHistory();\n  const location = history.location.pathname;\n\n  const initPage = useCallback(() => {\n    if (location === null) {\n      setRender(true);\n    } else {\n      setRender(!render);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact render={() => <Home />} />\n        <Route\n          path=\"/board\"\n          render={() => <Board location={location} initPage={initPage} />}\n        />\n        <Route\n          path=\"/statistics\"\n          render={() => <Statistics location={location} initPage={initPage} />}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js",["139"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n  status: { danger: \"orange\" },\r\n});\r\n\r\nexport default theme;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics.js",["140","141","142"],"import React, { useEffect } from \"react\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\n\r\nconst Statistics = (props) => {\r\n  const { location, initPage, isInitialized } = props;\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <SearchBar />\r\n      <h1>Statistics</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js",["143","144"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport CardContainer from \"./EmployeeCard/Card/CardContainer\";\r\nimport EmployeeCard from \"./EmployeeCard/EmployeeCard\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport axios from \"axios\";\r\nimport usePage from \"../../hooks/usePage\";\r\nimport useDialog from \"../../hooks/useDialog\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Loader from \"../Loader\";\r\nimport { KeywordsProvider } from \"../SearchBar/context/KeywordsContext\";\r\n\r\nconst Board = (props) => {\r\n  const [employeeCards, setEmployeeCards] = useState(null);\r\n  const [scrollToTop, setScrollToTop] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [dialog, openDialog, closeDialog] = useDialog(false);\r\n  const [page, setPage] = usePage(1);\r\n\r\n  const { location, initPage } = props;\r\n\r\n  //기본 직원정보 : 이름, 부서, 직급, 퇴사여부\r\n\r\n  const getEmployeeData = async (data, page) => {\r\n    let res;\r\n    const createEmployeeList = (employeeData) => {\r\n      const employeeList = employeeData.map((employee, idx) => {\r\n        return (\r\n          <Grid key={\"employee\" + idx} item xs={12}>\r\n            <EmployeeCard {...employee} />\r\n          </Grid>\r\n        );\r\n      });\r\n      return employeeList;\r\n    };\r\n    try {\r\n      const url = `http://localhost:3008/api/emp/${data.category}/${data.value}/${page}`;\r\n      console.log(url);\r\n      res = await axios.get(url);\r\n      if (res.data.packet === null) {\r\n        setIsLoading(false);\r\n        return;\r\n      } else {\r\n        setIsLoading(false);\r\n        console.log(\"RES.DATA.PACKET\", res.data);\r\n        setPage(page + 1);\r\n        setEmployeeCards(createEmployeeList(res.data.packet));\r\n      }\r\n    } catch (err) {\r\n      console.log(\"catch error\", err.response.status);\r\n      openDialog(err.response.status);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    const scrollTop = (\"scroll\", e.srcElement.scrollingElement.scrollTop);\r\n    scrollTop < 200 && scrollTop >= 0\r\n      ? setScrollToTop(false)\r\n      : setScrollToTop(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (scrollToTop === null) {\r\n      initPage();\r\n    }\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [scrollToTop]);\r\n\r\n  const onSearchHandler = useCallback((data) => {\r\n    console.log(data);\r\n\r\n    if (data.value) {\r\n      setIsLoading(true);\r\n      getEmployeeData(data, page.initPage);\r\n    } else {\r\n      console.log(data.value);\r\n      window.alert(\"검색어를 입력하세요\");\r\n    }\r\n  }, []);\r\n\r\n  const handleOnScrollBtn = useCallback(() => {\r\n    console.log(\"scroll to top\");\r\n    setScrollToTop(false);\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <KeywordsProvider>\r\n        <SearchBar location={location} onSubmitHandler={onSearchHandler} />\r\n      </KeywordsProvider>\r\n      {isLoading ? <Loader /> : null}\r\n      <Grid container direction=\"column\" spacing={10}>\r\n        <Modal\r\n          open={dialog.open}\r\n          message={dialog.message}\r\n          handleClose={closeDialog}\r\n        />\r\n\r\n        <Grid item></Grid>\r\n        <Grid item container>\r\n          <Grid item xs={false} sm={2} />\r\n          <Grid item xs={12} sm={8}>\r\n            <CardContainer employeeCards={employeeCards} />\r\n          </Grid>\r\n          <Grid item xs={false} sm={2} />\r\n        </Grid>\r\n        <ScrollToTop\r\n          onScroll={(e) => handleScroll(e)}\r\n          show={scrollToTop}\r\n          handleOnScrollBtn={handleOnScrollBtn}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\ScrollToTop.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Loader.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js",["145","146","147","148","149"],"import React, { useState, memo, useContext, useEffect } from \"react\";\r\nimport {\r\n  KeywordsStateContext,\r\n  KeywordsDispatchContext,\r\n} from \"./context/KeywordsContext\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SearchMenu from \"./components/SearchMenu\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport useCategory from \"../../hooks/useCategory\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: \"15px\",\r\n  },\r\n\r\n  home: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    border: \"none\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n    },\r\n  },\r\n  home_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    width: 80,\r\n    height: 30,\r\n    flex: \"1fr\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      right: 2,\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n    },\r\n    \"& .icon_home\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 29,\r\n      height: 29,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  statistics: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    border: \"none\",\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n    },\r\n  },\r\n  statistics_hover: {\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    flex: \"2fr\",\r\n    width: 100,\r\n    height: 30,\r\n    boxSizing: \"content-box\",\r\n    justifyContent: \"space-between\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      right: 0,\r\n    },\r\n    \"& .icon_statistics\": {\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      position: \"absolute\",\r\n      width: 28,\r\n      height: 28,\r\n      border: \"none\",\r\n    },\r\n    borderBottom: \"2px solid white\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    fontSize: 20,\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  link_mobile: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  searchContainer: {\r\n    position: \"relative\",\r\n    width: \"130%\",\r\n    transform: \"translateX(5%)\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      width: \"150%\",\r\n      transform: \"translateX(-5%)\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: \"110%\",\r\n      transform: \"translateX(-5%)\",\r\n    },\r\n  },\r\n  searchOption: {\r\n    position: \"relative\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      transform: \"translateX(20%)\",\r\n    },\r\n  },\r\n  searchButton: {\r\n    position: \"relative\",\r\n    transform: \"translateX(-140%)\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      transform: \"translateX(5%)\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      transform: \"translateX(40%)\",\r\n    },\r\n  },\r\n  submit: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,-50%)\",\r\n    color: \"white\",\r\n  },\r\n  search_input: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    marginLeft: theme.spacing(3),\r\n    width: \"50%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  search_select: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginLeft: theme.spacing(3),\r\n    width: \"100%\",\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginLeft: theme.spacing(4.5),\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"&:hover\": {\r\n      width: \"100%\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    paddingLeft: 70,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n\r\n  navContainer: {},\r\n  sectionMobile: {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    right: 0,\r\n    transform: \"translate(-50%,-50%)\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      transform: \"translate(-25%,-50%)\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchBar = memo((props) => {\r\n  const classes = useStyles();\r\n  const { location, onSubmitHandler } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [hover, setHover] = useState();\r\n  const [searchOption, setSearchOption] = useState(\"이름검색\");\r\n  const [searchDetail, setSearchDetail] = useState(null);\r\n  const [category, setCategory] = useCategory(null);\r\n  const [name, setName] = useInput(\"\");\r\n  const [openKeywords, setOpenKeywords] = useState(false);\r\n  const keywords = useContext(KeywordsStateContext);\r\n  const dispatch = useContext(KeywordsDispatchContext);\r\n\r\n  console.log(keywords);\r\n\r\n  const initLocalStorage = () => {\r\n    dispatch({ type: \"init\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    keywords.length === 1 && initLocalStorage();\r\n  }, []);\r\n\r\n  const getCategory = async (type) => {\r\n    // data = [\"부서\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n    let res;\r\n    let optionList;\r\n\r\n    try {\r\n      const url = `http://localhost:3008/api/${type}`;\r\n      console.log(url);\r\n      res = await axios.get(url);\r\n      console.log(res.data.packet);\r\n      optionList =\r\n        type === \"dept\"\r\n          ? res.data.packet.map((obj) => {\r\n              return obj.dept_name;\r\n            })\r\n          : res.data.packet.map((obj) => {\r\n              return obj.title;\r\n            });\r\n\r\n      optionList.unshift(type);\r\n      console.log(type, optionList);\r\n      setCategory(type, optionList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const submitData = (e) => {\r\n    e.preventDefault();\r\n    let data;\r\n\r\n    switch (searchOption) {\r\n      case \"이름검색\":\r\n        console.log(name);\r\n        dispatch({ type: \"add\", keyword: name });\r\n        data = { category: \"\", value: name };\r\n        onSubmitHandler(data);\r\n        return;\r\n      case \"부서검색\":\r\n        data = { category: \"dept\", value: searchDetail };\r\n        console.log(data);\r\n        onSubmitHandler(data);\r\n        return;\r\n      case \"직급검색\":\r\n        data = { category: \"title\", value: searchDetail };\r\n        console.log(data);\r\n        onSubmitHandler(data);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const setIndicator = (target) => {\r\n    setHover(target);\r\n  };\r\n\r\n  const changeBarType = (mode, location) => {\r\n    console.log(location);\r\n    switch (mode) {\r\n      case \"desktop\":\r\n        return location === \"/board\" ? (\r\n          <>\r\n            {\" \"}\r\n            <AssessmentIcon\r\n              className={\r\n                hover === \"statistics\"\r\n                  ? `${classes.statistics_hover} icon_statistics`\r\n                  : `${classes.statistics} icon_statistics`\r\n              }\r\n            />\r\n            <Typography component=\"span\" noWrap>\r\n              <Link to=\"/statistics\" className={classes.link}>\r\n                통계 검색\r\n              </Link>\r\n            </Typography>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <PeopleAltIcon\r\n              className={\r\n                hover === \"statistics\"\r\n                  ? `${classes.statistics_hover} icon_statistics`\r\n                  : `${classes.statistics} icon_statistics`\r\n              }\r\n            />\r\n            <Typography component=\"span\" noWrap>\r\n              <Link to=\"/board\" className={classes.link}>\r\n                직원 검색\r\n              </Link>\r\n            </Typography>\r\n          </>\r\n        );\r\n      case \"mobile\":\r\n        return location === \"/board\" ? (\r\n          <>\r\n            <AssessmentIcon />\r\n            통계 검색\r\n          </>\r\n        ) : (\r\n          <>\r\n            <PeopleAltIcon />\r\n            직원 검색\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  const mobileMenuId = \"search-employee-menu-mobile\";\r\n\r\n  const handleSearchDetail = (selected) => {\r\n    console.log(\"handle search detail\", selected);\r\n    setSearchDetail(selected);\r\n  };\r\n\r\n  const handleOptionClick = (selected) => {\r\n    handleSearchDetail(null);\r\n    setSearchOption(selected);\r\n\r\n    if (selected === \"부서검색\") {\r\n      getCategory(\"dept\");\r\n    } else {\r\n      getCategory(\"title\");\r\n    }\r\n  };\r\n\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link to=\"/\" className={classes.link_mobile}>\r\n        <MenuItem>\r\n          <HomeIcon />\r\n          홈으로\r\n        </MenuItem>\r\n      </Link>\r\n      <Link to=\"/statistics\" className={classes.link_mobile}>\r\n        <MenuItem>{changeBarType(\"mobile\", location)}</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  const handleKeywords = (bool) => {\r\n    setOpenKeywords(bool);\r\n  };\r\n  {\r\n    /********************구현 부분***************************/\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" className={classes.toolbarContainer}>\r\n            <Grid\r\n              item\r\n              xs={false}\r\n              sm={false}\r\n              md={2}\r\n              className={classes.titleContainer}\r\n            >\r\n              <Typography className={classes.title}>Employee Mark</Typography>\r\n            </Grid>\r\n            <Grid item xs={10} sm={8} md={7} className={classes.formContainer}>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  submitData(e);\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  className={classes.searchContainer}\r\n                >\r\n                  <Grid item xs={2} className={classes.searchOption}>\r\n                    {\" \"}\r\n                    <SearchMenu\r\n                      selected={searchOption}\r\n                      handleOptionClick={handleOptionClick}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={8} className={classes.searchInputContainer}>\r\n                    {\" \"}\r\n                    <SearchInput\r\n                      searchOption={searchOption}\r\n                      searchDetail={searchDetail}\r\n                      handleSearchDetail={handleSearchDetail}\r\n                      category={category}\r\n                      classes={classes}\r\n                      value={name}\r\n                      onChange={setName}\r\n                      handleKeywords={handleKeywords}\r\n                      openKeywords={openKeywords}\r\n                      keywords={keywords}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2} className={classes.searchButton}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => {\r\n                        submitData(e);\r\n                      }}\r\n                    >\r\n                      검색\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} md={3} className={classes.navContainer}>\r\n              <div className={classes.grow} />\r\n              <div className={classes.sectionDesktop}>\r\n                <div className={classes.menu}>\r\n                  <div\r\n                    className={\r\n                      hover === \"home\" ? classes.home_hover : classes.home\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"home\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    <HomeIcon\r\n                      className={\r\n                        hover === \"home\"\r\n                          ? `${classes.home_hover} icon_home`\r\n                          : `${classes.home} icon_home`\r\n                      }\r\n                    />\r\n                    <Typography component=\"span\" noWrap>\r\n                      <Link to=\"/\" className={classes.link}>\r\n                        홈으로\r\n                      </Link>\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      hover === \"statistics\"\r\n                        ? classes.statistics_hover\r\n                        : classes.statistics\r\n                    }\r\n                    onMouseEnter={() => setIndicator(\"statistics\")}\r\n                    onMouseLeave={() => setIndicator(null)}\r\n                  >\r\n                    {changeBarType(\"desktop\", location)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js",["150","151"],"import React, { useState, useEffect, memo } from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst CardContainer = memo((props) => {\r\n  const { employeeCards } = props;\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {employeeCards}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CardContainer;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js",["152","153"],"import React, { memo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport useDialog from \"../../../hooks/useDialog\";\r\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\r\nimport CardAccordion from \"./Card/CardAccordion\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardHeader: {\r\n    paddingBottom: 5,\r\n  },\r\n  content: {\r\n    margin: 0,\r\n  },\r\n  media: {},\r\n\r\n  info: {\r\n    position: \"relative\",\r\n  },\r\n  left: {\r\n    backgroundColor: \"#e6e6e6\",\r\n    color: \"grey\",\r\n  },\r\n\r\n  stay: {\r\n    backgroundColor: \"skyblue\",\r\n    color: \" #0288D1\",\r\n  },\r\n  name: {\r\n    width: 200,\r\n    position: \"absolute\",\r\n    bottom: -30,\r\n  },\r\n  subHeader: {\r\n    paddingTop: 30,\r\n  },\r\n  more: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst EmployeeCard = memo((props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    birth_date,\r\n    emp_no,\r\n    first_name,\r\n    gender,\r\n    hire_date,\r\n    last_name,\r\n    left,\r\n    more,\r\n    title,\r\n    dept_name,\r\n  } = props;\r\n\r\n  const subHeader = `${gender}, ${birth_date}`;\r\n  const name = `${first_name} ${last_name}`;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Avatar className={left ? classes.left : classes.stay}></Avatar>\r\n        }\r\n        title={\r\n          <span className={classes.info}>\r\n            <span className={classes.name}>\r\n              {name}{\" \"}\r\n              {more ? <AnnouncementIcon className={classes.more} /> : null}\r\n            </span>\r\n          </span>\r\n        }\r\n        subheader={<div className={classes.subHeader}>{subHeader}</div>}\r\n      />\r\n      <CardMedia className={classes.media} style={{ height: \"180px\" }}>\r\n        <CardAccordion emp_no={emp_no} dept_name={dept_name} title={title} />\r\n      </CardMedia>\r\n      <CardContent className={classes.content}></CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EmployeeCard;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js",["154"],"import React, { useState, memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport History from \"./History/History\";\r\nimport useEmployeeData from \"../../../../hooks/useEmployeeData\";\r\nimport Rank from \"./Rank/Rank\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: \"bold\",\r\n    flexBasis: \"100%\",\r\n    flexShrink: 0,\r\n  },\r\n  lastUpdate: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"#555\",\r\n    textDecoration: \"underLine\",\r\n    fontSize: 13,\r\n  },\r\n  trackWrapper: {\r\n    transform: \"translateY(-3%)\",\r\n  },\r\n  rankCardWrapper: {\r\n    transform: \"translate(-5%,-21%)\",\r\n    margin: \"0 auto\",\r\n  },\r\n  track: {\r\n    transform: \"translateY(-15%)\",\r\n  },\r\n  whole: {\r\n    transform: \"translateY(-30%)\",\r\n    height: 225,\r\n  },\r\n  rankTypeBtn: {\r\n    // transform: \"translateX(-10%)\",\r\n  },\r\n  rankName: {\r\n    marginLeft: 8,\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst CardAccordion = memo((props) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [data, changeDataType, getData] = useEmployeeData();\r\n\r\n  const { emp_no, dept_name, title } = props;\r\n\r\n  /*패널 클릭시 데이터 받아오기 */\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    console.log(\"PANEL Change\", panel);\r\n    if (isExpanded) {\r\n      setExpanded(panel);\r\n      switch (panel) {\r\n        case \"panel1\":\r\n          getData(\"history\", emp_no, dept_name, title);\r\n          return;\r\n        case \"panel2\":\r\n          getData(\"rank\", emp_no, dept_name, title);\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    } else {\r\n      setExpanded(false);\r\n      changeDataType(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <History\r\n        type={expanded === \"panel1\" ? data.type : null}\r\n        data={expanded === \"panel1\" ? data.data : null}\r\n        expanded={expanded}\r\n        onChangeAccordion={handleChange}\r\n        changeDataType={changeDataType}\r\n        classes={classes}\r\n      />\r\n      <Rank\r\n        type={expanded === \"panel2\" ? data.type : null}\r\n        data={expanded === \"panel2\" ? data.data : null}\r\n        expanded={expanded}\r\n        onChangeAccordion={handleChange}\r\n        changeDataType={changeDataType}\r\n        classes={classes}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardAccordion;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js",["155"],"import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useEmployeeData = () => {\r\n  const [dataType, setDataType] = useState(null);\r\n  const [data, setData] = useState();\r\n\r\n  /*패널 내부 데이터 종류 변경 */\r\n\r\n  const getApiData = async (type, emp_no, dept_name, title) => {\r\n    let res;\r\n    console.log(\"get api\", dept_name, title);\r\n    try {\r\n      const url = `http://localhost:3008/api/emp/${type}`;\r\n      console.log(url);\r\n      res = await axios.post(url, {\r\n        emp_no,\r\n        dept_name,\r\n        title,\r\n      });\r\n      if (res) {\r\n        console.log(\"RESPONSE\", res);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const changeDataType = (type) => {\r\n    setDataType(type);\r\n  };\r\n\r\n  const getData = (type, emp_no, dept_name, title) => {\r\n    //axios로 history data요청.\r\n\r\n    getApiData(type, emp_no, dept_name, title);\r\n    console.log(\"GET panel data\");\r\n    // setData();\r\n  };\r\n\r\n  return [{ type: dataType, data: data }, changeDataType, getData];\r\n};\r\n\r\nexport default useEmployeeData;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js",["156"],"import React, { memo } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TypeBtn from \"../../../../TypeBtn\";\r\nimport Track from \"../../../../Statistics/Track\";\r\n\r\nconst History = (props) => {\r\n  const {\r\n    type,\r\n    data,\r\n    expanded,\r\n    onChangeAccordion,\r\n    changeDataType,\r\n    classes,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={onChangeAccordion(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel12bh-content\"\r\n          id=\"panel12bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            부서이동 및 연봉변동 기록\r\n          </Typography>\r\n        </AccordionSummary>\r\n        {expanded !== \"panel1\" ? null : (\r\n          <AccordionDetails className={classes.AccordionDetails}>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"column\"\r\n              spacing={4}\r\n              className={classes.trackWrapper}\r\n            >\r\n              <Grid item>\r\n                <TypeBtn\r\n                  handleClick={changeDataType}\r\n                  expanded={expanded}\r\n                  selected={type ? type : \"default\"}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.track}>\r\n                <Track type={type ? type : \"dept\"} data={data} />\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        )}\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\TypeBtn.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Track.js",["157"],"import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  timeline: {\r\n    transform: \"rotate(-90deg)\",\r\n    margin: \"0 auto\",\r\n    width: 30,\r\n    padding: 0,\r\n  },\r\n  timelineContentContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    textAlign: \"left\",\r\n    width: 10,\r\n    zIndex: 500,\r\n  },\r\n  timelineYear: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-start\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineInfo: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-end\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineSeparator: {\r\n    position: \"relative\",\r\n    flex: \"1fr\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  timelineDot: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n  timelineDot_last: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n\r\n  timelineConnector: {\r\n    position: \"absolute\",\r\n    height: \"3.2rem\",\r\n    width: 2,\r\n    backgroundColor: \"secondary\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    bottom: \"-44%\",\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineYearText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"60%\",\r\n    bottom: \"10%\",\r\n    transform: \"translateY(-100%)\",\r\n  },\r\n  timelineInfoText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"55%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineYearText: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    bottom: \"10%\",\r\n    transform: \"translate(-40%,-100%)\",\r\n  },\r\n  timelineInfoText: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,100%)\",\r\n  },\r\n  timelineYearText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    right: \"60%\",\r\n    bottom: 0,\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineInfoText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineIcon: {\r\n    transform: \"rotate(-90deg)\",\r\n  },\r\n});\r\n\r\nconst Track = (props) => {\r\n  const classes = useStyles();\r\n  const { type, data } = props;\r\n\r\n  console.log(\"Track render\", type, data);\r\n\r\n  const createHistoryTrack = (type, data) => {\r\n    let historyTrack = null;\r\n    if (type && data) {\r\n      const slicedHistory = data[type].slice(1, data[type].length - 1);\r\n      console.log(\"slicedHistory\", slicedHistory);\r\n      historyTrack = (\r\n        <Timeline className={classes.timeline}>\r\n          <TimelineItem\r\n            align=\"alternate\"\r\n            className={classes.timelineContentContainer}\r\n          >\r\n            <TimelineOppositeContent className={classes.timelineYear}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineYearText_first}\r\n              >\r\n                {data[type][0].from}\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator className={classes.timelineSeparator}>\r\n              <TimelineDot className={classes.timelineDot} />\r\n              <TimelineConnector\r\n                className={classes.timelineConnector}\r\n                variant=\"text\"\r\n              />\r\n            </TimelineSeparator>\r\n            <TimelineContent className={classes.timelineInfo}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineInfoText_first}\r\n              >\r\n                {type === \"dept\" ? data[type][0].dept : data[type][0].salary}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n          {slicedHistory.map((data, idx) => {\r\n            return (\r\n              <TimelineItem\r\n                className={classes.timelineContentContainer}\r\n                key={data.from}\r\n              >\r\n                <TimelineOppositeContent className={classes.timelineYear}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.timelineYearText}\r\n                  >\r\n                    {data.from}\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator className={classes.timelineSeparator}>\r\n                  <TimelineDot className={classes.timelineDot} />\r\n                  <TimelineConnector className={classes.timelineConnector} />\r\n                </TimelineSeparator>\r\n                <TimelineContent className={classes.timelineInfo}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.timelineInfoText}\r\n                  >\r\n                    {type === \"dept\" ? data.dept : data.salary}\r\n                  </Typography>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            );\r\n          })}\r\n\r\n          <TimelineItem className={classes.timelineContentContainer}>\r\n            <TimelineOppositeContent className={classes.timelineYear}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineYearText_last}\r\n              >\r\n                {data[type][data[type].length - 1].from}\r\n                ~현재\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator className={classes.timelineSeparator}>\r\n              <TimelineDot\r\n                className={classes.timelineDot_last}\r\n                color={\r\n                  type === \"dept\" || type === null ? \"primary\" : \"secondary\"\r\n                }\r\n              />\r\n            </TimelineSeparator>\r\n            <TimelineContent className={classes.timelineInfo}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineInfoText_last}\r\n              >\r\n                {type === \"dept\"\r\n                  ? data[type][data[type].length - 1].dept\r\n                  : data[type][data[type].length - 1].salary}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      );\r\n    }\r\n\r\n    return historyTrack;\r\n  };\r\n\r\n  return createHistoryTrack(type, data);\r\n};\r\n\r\nexport default Track;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\RankCard\\RankCard.js",["158","159","160","161"],"import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  rankWrapper: {\r\n    paddingLeft: 80,\r\n  },\r\n  rank: {\r\n    position: \"relative\",\r\n    margin: \"0 auto\",\r\n    flexDirection: \"column\",\r\n    paddingRight: 40,\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      width: 25,\r\n      height: 25,\r\n      backgroundColor: \"#e7e7e7\",\r\n      borderRadius: \"100%\",\r\n      textAlign: \"center\",\r\n      padding: 5,\r\n      marginRight: 5,\r\n      top: \"50%\",\r\n      left: \"57%\",\r\n      transform: \"translate(-50%,-50%)\",\r\n      fontSize: 15,\r\n      fontWeight: \"bold\",\r\n      color: \"#222\",\r\n    },\r\n    \"& .title\": {\r\n      fontSize: 13,\r\n    },\r\n  },\r\n}));\r\n\r\nconst rankTitle = [\"기간 기준\", \"전사 기준\", \"부서 기준\", \"직계 기준\"];\r\nconst RankCard = (props) => {\r\n  const classes = useStyles();\r\n  const { data, type } = props;\r\n\r\n  // const createRanks = (data, type) => {\r\n  //   const rankObj = data[type];\r\n  //   console.log(rankObj);\r\n  //   const rankMarks = Object.keys(rankObj).map((title, idx) => {\r\n  //     return (\r\n  //       <Grid item className={classes.rank} key={type + \"_\" + title}>\r\n  //         <Typography variant=\"h6\" component=\"h2\">\r\n  //           <div className={`${classes.rank} title`}> {rankTitle[idx]}</div>\r\n  //           <span>{rankObj[title]}위</span>\r\n  //         </Typography>\r\n  //       </Grid>\r\n  //     );\r\n  //   });\r\n  //   console.log(rankMarks);\r\n  //   return rankMarks;\r\n  // };\r\n\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.rankWrapper}>\r\n      {/* {createRanks(data, type)}{\" \"} */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RankCard;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useBtn.js",["162","163"],"import React, { useState } from \"react\";\r\n\r\nconst useBtn = (initState) => {\r\n  const [button1, setButton1] = useState(initState);\r\n  const [button2, setButton2] = useState(initState);\r\n  const [text1, setText1] = useState();\r\n  const [text2, setText2] = useState();\r\n\r\n  const initBtn = (expanded) => {\r\n    switch (expanded) {\r\n      case \"panel1\":\r\n        setButton1(\"dept\");\r\n        setText1(\"부서 이동\");\r\n        setButton2(\"salary\");\r\n        setText2(\"연봉 변동\");\r\n        return;\r\n      case \"panel2\":\r\n        setButton1(\"steadRank\");\r\n        setText1(\"근속 랭킹\");\r\n        setButton2(\"salaryRank\");\r\n        setText2(\"연봉 랭킹\");\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return [\r\n    { button1: button1, button2: button2, text1: text1, text2: text2 },\r\n    initBtn,\r\n  ];\r\n};\r\n\r\nexport default useBtn;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\DefaultBackground.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js",["164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":19,"column":6,"nodeType":"171","endLine":19,"endColumn":16,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":12},{"ruleId":"173","severity":1,"message":"177","line":5,"column":11,"nodeType":"175","messageId":"176","endLine":5,"endColumn":19},{"ruleId":"173","severity":1,"message":"178","line":5,"column":31,"nodeType":"175","messageId":"176","endLine":5,"endColumn":44},{"ruleId":"169","severity":1,"message":"179","line":9,"column":6,"nodeType":"171","endLine":9,"endColumn":8,"suggestions":"180"},{"ruleId":"169","severity":1,"message":"179","line":72,"column":6,"nodeType":"171","endLine":72,"endColumn":19,"suggestions":"181"},{"ruleId":"169","severity":1,"message":"182","line":84,"column":6,"nodeType":"171","endLine":84,"endColumn":8,"suggestions":"183"},{"ruleId":"173","severity":1,"message":"184","line":267,"column":10,"nodeType":"175","messageId":"176","endLine":267,"endColumn":18},{"ruleId":"173","severity":1,"message":"185","line":267,"column":20,"nodeType":"175","messageId":"176","endLine":267,"endColumn":31},{"ruleId":"169","severity":1,"message":"186","line":286,"column":6,"nodeType":"171","endLine":286,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":357,"column":5,"nodeType":"190","messageId":"191","endLine":403,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":449,"column":3,"nodeType":"194","messageId":"195","endLine":451,"endColumn":4},{"ruleId":"173","severity":1,"message":"196","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"197","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"198","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":17},{"ruleId":"173","severity":1,"message":"199","line":54,"column":5,"nodeType":"175","messageId":"176","endLine":54,"endColumn":14},{"ruleId":"173","severity":1,"message":"200","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"201","line":6,"column":16,"nodeType":"175","messageId":"176","endLine":6,"endColumn":23},{"ruleId":"173","severity":1,"message":"202","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":70,"column":5,"nodeType":"205","messageId":"206","endLine":70,"endColumn":14},{"ruleId":"173","severity":1,"message":"207","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":18},{"ruleId":"173","severity":1,"message":"208","line":37,"column":7,"nodeType":"175","messageId":"176","endLine":37,"endColumn":16},{"ruleId":"173","severity":1,"message":"209","line":40,"column":11,"nodeType":"175","messageId":"176","endLine":40,"endColumn":15},{"ruleId":"173","severity":1,"message":"210","line":40,"column":17,"nodeType":"175","messageId":"176","endLine":40,"endColumn":21},{"ruleId":"173","severity":1,"message":"211","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":22,"column":7,"nodeType":"214","messageId":"215","endLine":23,"endColumn":16},{"ruleId":"173","severity":1,"message":"216","line":1,"column":44,"nodeType":"175","messageId":"176","endLine":1,"endColumn":51},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'render'. Either include it or remove the dependency array. You can also do a functional update 'setRender(r => ...)' if you only need 'render' in the 'setRender' call.","ArrayExpression",["219"],"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'isInitialized' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initPage'. Either include it or remove the dependency array.",["220"],["221"],"React Hook useCallback has missing dependencies: 'getEmployeeData' and 'page.initPage'. Either include them or remove the dependency array.",["222"],"'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initLocalStorage' and 'keywords.length'. Either include them or remove the dependency array.",["223"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDialog' is defined but never used.","'hire_date' is assigned a value but never used.","'axios' is defined but never used.","'setData' is assigned a value but never used.","'memo' is defined but never used.","no-dupe-keys","Duplicate key 'transform'.","ObjectExpression","unexpected","'Typography' is defined but never used.","'rankTitle' is assigned a value but never used.","'data' is assigned a value but never used.","'type' is assigned a value but never used.","'React' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [location, render]",{"range":"234","text":"235"},"Update the dependencies array to be: [initPage]",{"range":"236","text":"237"},"Update the dependencies array to be: [initPage, scrollToTop]",{"range":"238","text":"239"},"Update the dependencies array to be: [getEmployeeData, page.initPage]",{"range":"240","text":"241"},"Update the dependencies array to be: [initLocalStorage, keywords.length]",{"range":"242","text":"243"},[538,548],"[location, render]",[239,241],"[initPage]",[2366,2379],"[initPage, scrollToTop]",[2650,2652],"[getEmployeeData, page.initPage]",[7318,7320],"[initLocalStorage, keywords.length]"]