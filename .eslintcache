[{"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js":"1","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js":"2","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js":"3","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js":"4","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics.js":"5","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js":"6","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js":"7","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\ScrollToTop.js":"8","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js":"9","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js":"10","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js":"11","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js":"12","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js":"13","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js":"14","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js":"15","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js":"16","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js":"17","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js":"18","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js":"19","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js":"20","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js":"21","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js":"22","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js":"23","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\TypeBtn.js":"24","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Track.js":"25","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\RankCard\\RankCard.js":"26","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useBtn.js":"27","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\DefaultBackground.js":"28","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js":"29","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Loader.js":"30"},{"size":742,"mtime":1612770320867,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1606118173109,"results":"33","hashOfConfig":"32"},{"size":909,"mtime":1614511492201,"results":"34","hashOfConfig":"32"},{"size":431,"mtime":1612945160906,"results":"35","hashOfConfig":"32"},{"size":362,"mtime":1612957899116,"results":"36","hashOfConfig":"32"},{"size":350,"mtime":1612771259439,"results":"37","hashOfConfig":"32"},{"size":5116,"mtime":1614511498005,"results":"38","hashOfConfig":"32"},{"size":448,"mtime":1613053976109,"results":"39","hashOfConfig":"32"},{"size":15815,"mtime":1614499202365,"results":"40","hashOfConfig":"32"},{"size":356,"mtime":1614511545228,"results":"41","hashOfConfig":"32"},{"size":740,"mtime":1613446207910,"results":"42","hashOfConfig":"32"},{"size":2432,"mtime":1614510208058,"results":"43","hashOfConfig":"32"},{"size":2202,"mtime":1614340900664,"results":"44","hashOfConfig":"32"},{"size":1325,"mtime":1613130485564,"results":"45","hashOfConfig":"32"},{"size":314,"mtime":1613130485574,"results":"46","hashOfConfig":"32"},{"size":506,"mtime":1614499150175,"results":"47","hashOfConfig":"32"},{"size":2343,"mtime":1614326781112,"results":"48","hashOfConfig":"32"},{"size":4153,"mtime":1613991499350,"results":"49","hashOfConfig":"32"},{"size":2399,"mtime":1614074167010,"results":"50","hashOfConfig":"32"},{"size":1214,"mtime":1614325896603,"results":"51","hashOfConfig":"32"},{"size":2076,"mtime":1614327660342,"results":"52","hashOfConfig":"32"},{"size":1912,"mtime":1613130485548,"results":"53","hashOfConfig":"32"},{"size":5495,"mtime":1614499325735,"results":"54","hashOfConfig":"32"},{"size":2216,"mtime":1612859430282,"results":"55","hashOfConfig":"32"},{"size":7182,"mtime":1612852395138,"results":"56","hashOfConfig":"32"},{"size":1738,"mtime":1614327419383,"results":"57","hashOfConfig":"32"},{"size":846,"mtime":1612861287342,"results":"58","hashOfConfig":"32"},{"size":412,"mtime":1613633549275,"results":"59","hashOfConfig":"32"},{"size":2513,"mtime":1614143615947,"results":"60","hashOfConfig":"32"},{"size":247,"mtime":1614326171375,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"14xcp5j",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\index.js",[],["134","135"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\reportWebVitals.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\App.js",["136","137"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\theme.js",["138"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n  status: { danger: \"orange\" },\r\n});\r\n\r\nexport default theme;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics.js",["139","140","141"],"import React, { useEffect } from \"react\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\n\r\nconst Statistics = (props) => {\r\n  const { location, initPage, isInitialized } = props;\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <SearchBar />\r\n      <h1>Statistics</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Home.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\Board.js",["142","143","144"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\ScrollToTop.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\SearchBar.js",["145","146","147","148","149"],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\usePage.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useDialog.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardContainer.js",["150"],"import React, { useState, useEffect, memo, useRef } from \"react\";\r\nimport EmployeeCard from \"../EmployeeCard\";\r\nimport { debounce } from \"lodash\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Loader from \"../../../UI/Loader\";\r\n\r\nconst CardContainer = memo((props) => {\r\n  const { employeeData, page, getEmployeeData, isNextLoading } = props;\r\n  const target = useRef(null);\r\n  const nextPage = useRef(page);\r\n\r\n  console.log(\"EMPLOYEE__DATA\", employeeData);\r\n\r\n  const loadItems = debounce(\r\n    (entry, observer) => {\r\n      const currentData = JSON.parse(localStorage.getItem(\"CURRENT_KEY\"));\r\n      console.log(\"Current Key\", currentData);\r\n      getEmployeeData(currentData, page, \"intersected\");\r\n      nextPage.current = page;\r\n      console.log(\"intersecting\");\r\n      observer.unobserve(entry.target);\r\n      observer.observe(target.current);\r\n    },\r\n    [500]\r\n  );\r\n\r\n  const handleIntersection = (entries, observer) => {\r\n    entries.forEach((entry) => {\r\n      if (!entry.isIntersecting) {\r\n        return;\r\n      }\r\n      const location = target.current.offsetTop;\r\n      console.log(\"LOCATION___\", location);\r\n      // window.scrollTo({\r\n      //   top: 6201,\r\n      //   left: 0,\r\n      //   behavior: \"smooth\",\r\n      // });\r\n      loadItems(entry, observer);\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    threshold: 1,\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Card: useEffect\");\r\n    let io;\r\n    if (nextPage.current === page || isNextLoading) {\r\n      return;\r\n    } else {\r\n      io = new IntersectionObserver(handleIntersection, options);\r\n      if (target.current) {\r\n        console.log(\"TARGET current\", target.current);\r\n\r\n        io.observe(target.current);\r\n      }\r\n    }\r\n\r\n    return () => io && io.disconnect();\r\n  });\r\n\r\n  const createEmployeeList = (employeeData) => {\r\n    if (!employeeData) {\r\n      return;\r\n    }\r\n    const employeeList = employeeData.map((el, idx) => {\r\n      const lastEl = idx === employeeData[employeeData.length - 1].id;\r\n\r\n      return (\r\n        <Grid key={\"employee\" + idx} item xs={12} ref={lastEl ? target : null}>\r\n          <EmployeeCard {...el.employee} />\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    return employeeList;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4}>\r\n        {createEmployeeList(employeeData)}\r\n      </Grid>\r\n      {isNextLoading ? <Loader size=\"medium\" /> : null}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CardContainer;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\EmployeeCard.js",["151","152","153","154"],"import React, { memo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport useDialog from \"../../../hooks/useDialog\";\r\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\r\nimport CardAccordion from \"./Card/CardAccordion\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardHeader: {\r\n    paddingBottom: 5,\r\n  },\r\n  content: {\r\n    margin: 0,\r\n  },\r\n  media: {},\r\n\r\n  info: {\r\n    position: \"relative\",\r\n  },\r\n  left: {\r\n    backgroundColor: \"#e6e6e6\",\r\n    color: \"grey\",\r\n  },\r\n\r\n  stay: {\r\n    backgroundColor: \"skyblue\",\r\n    color: \" #0288D1\",\r\n  },\r\n  name: {\r\n    width: 200,\r\n    position: \"absolute\",\r\n    bottom: -30,\r\n  },\r\n  subHeader: {\r\n    paddingTop: 30,\r\n  },\r\n  more: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst EmployeeCard = memo((props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    birth_date,\r\n    emp_no,\r\n    first_name,\r\n    gender,\r\n    hire_date,\r\n    last_name,\r\n    left,\r\n    more,\r\n    title,\r\n    dept_name,\r\n  } = props;\r\n\r\n  const subHeader = `${dept_name}, ${title}`;\r\n  const name = `${first_name} ${last_name}`;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Avatar className={left ? classes.left : classes.stay}></Avatar>\r\n        }\r\n        title={\r\n          <span className={classes.info}>\r\n            <span className={classes.name}>\r\n              {name}{\" \"}\r\n              {more ? <AnnouncementIcon className={classes.more} /> : null}\r\n            </span>\r\n          </span>\r\n        }\r\n        subheader={<div className={classes.subHeader}>{subHeader}</div>}\r\n      />\r\n      <CardMedia className={classes.media} style={{ height: \"180px\" }}>\r\n        <CardAccordion emp_no={emp_no} dept_name={dept_name} title={title} />\r\n      </CardMedia>\r\n      <CardContent className={classes.content}></CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EmployeeCard;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Modal.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useCategory.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\CardAccordion.js",["155"],"import React, { useState, memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport History from \"./History/History\";\r\nimport useEmployeeData from \"../../../../hooks/useEmployeeData\";\r\nimport Rank from \"./Rank/Rank\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: \"bold\",\r\n    flexBasis: \"100%\",\r\n    flexShrink: 0,\r\n  },\r\n  trackWrapper: {\r\n    transform: \"translateY(-3%)\",\r\n  },\r\n  rankCardWrapper: {\r\n    transform: \"translate(-5%,-21%)\",\r\n    margin: \"0 auto\",\r\n  },\r\n  track: {\r\n    transform: \"translateY(-15%)\",\r\n  },\r\n  whole: {\r\n    transform: \"translateY(-30%)\",\r\n    height: 225,\r\n  },\r\n  rankName: {\r\n    marginLeft: 8,\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst CardAccordion = memo((props) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [data, changeDataType, getData] = useEmployeeData();\r\n\r\n  const { emp_no, dept_name, title } = props;\r\n\r\n  /*패널 클릭시 데이터 받아오기 */\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    console.log(\"PANEL Change\", panel);\r\n    if (isExpanded) {\r\n      setExpanded(panel);\r\n      switch (panel) {\r\n        case \"panel1\":\r\n          getData(\"history\", emp_no, dept_name, title);\r\n          return;\r\n        case \"panel2\":\r\n          getData(\"rank\", emp_no, dept_name, title);\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    } else {\r\n      setExpanded(false);\r\n      changeDataType(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <History\r\n        type={expanded === \"panel1\" ? data.type : null}\r\n        data={expanded === \"panel1\" ? data.data : null}\r\n        expanded={expanded}\r\n        onChangeAccordion={handleChange}\r\n        changeDataType={changeDataType}\r\n        classes={classes}\r\n      />\r\n      <Rank\r\n        type={expanded === \"panel2\" ? data.type : null}\r\n        data={expanded === \"panel2\" ? data.data : null}\r\n        isLoading={data.isLoading}\r\n        expanded={expanded}\r\n        onChangeAccordion={handleChange}\r\n        changeDataType={changeDataType}\r\n        classes={classes}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardAccordion;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchMenu.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchInput.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useEmployeeData.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\Rank\\Rank.js",["156"],"import React, { memo, useState } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TypeBtn from \"../../../../TypeBtn\";\r\nimport RankCard from \"../../../../Statistics/RankCard/RankCard\";\r\nimport Loader from \"../../../../UI/Loader\";\r\n\r\nconst Rank = memo((props) => {\r\n  const {\r\n    expanded,\r\n    onChangeAccordion,\r\n    classes,\r\n    type,\r\n    data,\r\n    changeDataType,\r\n    isLoading,\r\n  } = props;\r\n\r\n  const rankCard = isLoading ? (\r\n    <Loader size=\"small\" />\r\n  ) : (\r\n    <RankCard data={data} />\r\n  );\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      expanded={expanded === \"panel2\"}\r\n      onChange={onChangeAccordion(\"panel2\")}\r\n      className={expanded === \"panel2\" ? classes.whole : null}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"pane6bh-content\"\r\n        id=\"panel2bh-header\"\r\n      >\r\n        <Typography className={classes.heading}> 종합 직원 랭킹</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        {expanded !== \"panel2\" ? null : (\r\n          <AccordionDetails className={classes.AccordionDetails}>\r\n            <Grid\r\n              container\r\n              item\r\n              spacing={3}\r\n              direction=\"column\"\r\n              className={classes.rankCardWrapper}\r\n            >\r\n              <Grid item className={classes.rankTypeBtn}>\r\n                <TypeBtn\r\n                  handleClick={changeDataType}\r\n                  expanded={expanded}\r\n                  selected={type ? type : \"default\"}\r\n                />\r\n              </Grid>\r\n              <Grid item>{rankCard}</Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n});\r\n\r\nexport default Rank;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Board\\EmployeeCard\\Card\\History\\History.js",["157"],"import React, { memo } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TypeBtn from \"../../../../TypeBtn\";\r\nimport Track from \"../../../../Statistics/Track\";\r\n\r\nconst History = (props) => {\r\n  const {\r\n    type,\r\n    data,\r\n    expanded,\r\n    onChangeAccordion,\r\n    changeDataType,\r\n    classes,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Accordion\r\n        square\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={onChangeAccordion(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel12bh-content\"\r\n          id=\"panel12bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            부서이동 및 연봉변동 기록\r\n          </Typography>\r\n        </AccordionSummary>\r\n        {expanded !== \"panel1\" ? null : (\r\n          <AccordionDetails className={classes.AccordionDetails}>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"column\"\r\n              spacing={4}\r\n              className={classes.trackWrapper}\r\n            >\r\n              <Grid item>\r\n                <TypeBtn\r\n                  handleClick={changeDataType}\r\n                  expanded={expanded}\r\n                  selected={type ? type : \"default\"}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.track}>\r\n                <Track type={type ? type : \"dept\"} data={data} />\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionDetails>\r\n        )}\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\components\\SearchDetail.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\TypeBtn.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\Track.js",["158"],"import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  timeline: {\r\n    transform: \"rotate(-90deg)\",\r\n    margin: \"0 auto\",\r\n    width: 30,\r\n    padding: 0,\r\n  },\r\n  timelineContentContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    textAlign: \"left\",\r\n    width: 10,\r\n    zIndex: 500,\r\n  },\r\n  timelineYear: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-start\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineInfo: {\r\n    position: \"relative\",\r\n    flex: \"2fr\",\r\n    alignItems: \"flex-end\",\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n  timelineSeparator: {\r\n    position: \"relative\",\r\n    flex: \"1fr\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  timelineDot: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n  timelineDot_last: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    top: 0,\r\n  },\r\n\r\n  timelineConnector: {\r\n    position: \"absolute\",\r\n    height: \"3.2rem\",\r\n    width: 2,\r\n    backgroundColor: \"secondary\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    bottom: \"-44%\",\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineYearText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"60%\",\r\n    bottom: \"10%\",\r\n    transform: \"translateY(-100%)\",\r\n  },\r\n  timelineInfoText_first: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"55%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineYearText: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    bottom: \"10%\",\r\n    transform: \"translate(-40%,-100%)\",\r\n  },\r\n  timelineInfoText: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%,100%)\",\r\n  },\r\n  timelineYearText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 10,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    right: \"60%\",\r\n    bottom: 0,\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  timelineInfoText_last: {\r\n    position: \"absolute\",\r\n    fontSize: 11,\r\n    color: \"black\",\r\n    right: \"40%\",\r\n    top: \"50%\",\r\n    transform: \"translateY(100%)\",\r\n  },\r\n  timelineIcon: {\r\n    transform: \"rotate(-90deg)\",\r\n  },\r\n});\r\n\r\nconst Track = (props) => {\r\n  const classes = useStyles();\r\n  const { type, data } = props;\r\n\r\n  console.log(\"Track render\", type, data);\r\n\r\n  const createHistoryTrack = (type, data) => {\r\n    let historyTrack = null;\r\n    if (type && data) {\r\n      const slicedHistory = data[type].slice(1, data[type].length - 1);\r\n      console.log(\"slicedHistory\", slicedHistory);\r\n      historyTrack = (\r\n        <Timeline className={classes.timeline}>\r\n          <TimelineItem\r\n            align=\"alternate\"\r\n            className={classes.timelineContentContainer}\r\n          >\r\n            <TimelineOppositeContent className={classes.timelineYear}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineYearText_first}\r\n              >\r\n                {data[type][0].from}\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator className={classes.timelineSeparator}>\r\n              <TimelineDot className={classes.timelineDot} />\r\n              <TimelineConnector\r\n                className={classes.timelineConnector}\r\n                variant=\"text\"\r\n              />\r\n            </TimelineSeparator>\r\n            <TimelineContent className={classes.timelineInfo}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineInfoText_first}\r\n              >\r\n                {type === \"dept\" ? data[type][0].dept : data[type][0].salary}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n          {slicedHistory.map((data, idx) => {\r\n            return (\r\n              <TimelineItem\r\n                className={classes.timelineContentContainer}\r\n                key={data.from}\r\n              >\r\n                <TimelineOppositeContent className={classes.timelineYear}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.timelineYearText}\r\n                  >\r\n                    {data.from}\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator className={classes.timelineSeparator}>\r\n                  <TimelineDot className={classes.timelineDot} />\r\n                  <TimelineConnector className={classes.timelineConnector} />\r\n                </TimelineSeparator>\r\n                <TimelineContent className={classes.timelineInfo}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.timelineInfoText}\r\n                  >\r\n                    {type === \"dept\" ? data.dept : data.salary}\r\n                  </Typography>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            );\r\n          })}\r\n\r\n          <TimelineItem className={classes.timelineContentContainer}>\r\n            <TimelineOppositeContent className={classes.timelineYear}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineYearText_last}\r\n              >\r\n                {data[type][data[type].length - 1].from}\r\n                ~현재\r\n              </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator className={classes.timelineSeparator}>\r\n              <TimelineDot\r\n                className={classes.timelineDot_last}\r\n                color={\r\n                  type === \"dept\" || type === null ? \"primary\" : \"secondary\"\r\n                }\r\n              />\r\n            </TimelineSeparator>\r\n            <TimelineContent className={classes.timelineInfo}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.timelineInfoText_last}\r\n              >\r\n                {type === \"dept\"\r\n                  ? data[type][data[type].length - 1].dept\r\n                  : data[type][data[type].length - 1].salary}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      );\r\n    }\r\n\r\n    return historyTrack;\r\n  };\r\n\r\n  return createHistoryTrack(type, data);\r\n};\r\n\r\nexport default Track;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\Statistics\\RankCard\\RankCard.js",["159"],"import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  rankWrapper: {\r\n    paddingLeft: 80,\r\n  },\r\n  loaderWrapper: {\r\n    border: \"1px solid black\",\r\n    margin: \"0 auto\",\r\n  },\r\n  rank: {\r\n    position: \"relative\",\r\n    margin: \"0 auto\",\r\n    flexDirection: \"column\",\r\n    paddingRight: 40,\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      width: 25,\r\n      height: 25,\r\n      backgroundColor: \"#e7e7e7\",\r\n      borderRadius: \"100%\",\r\n      textAlign: \"center\",\r\n      padding: 5,\r\n      marginRight: 5,\r\n      top: \"50%\",\r\n      left: \"57%\",\r\n      transform: \"translate(-50%,-50%)\",\r\n      fontSize: 15,\r\n      fontWeight: \"bold\",\r\n      color: \"#222\",\r\n    },\r\n    \"& .title\": {\r\n      fontSize: 13,\r\n    },\r\n  },\r\n}));\r\n\r\nconst rankTitle = [\"부서 내\", \"전사 내\", \"동일직계 내\"];\r\nconst RankCard = (props) => {\r\n  const classes = useStyles();\r\n  const { data, type } = props;\r\n\r\n  const createRanks = (data, type) => {\r\n    const rankContents = Object.keys(data).map((key, idx) => {\r\n      return (\r\n        <Grid item className={classes.rank} key={type + \"_\" + key}>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            <div className={`${classes.rank} title`}> {rankTitle[idx]}</div>\r\n            <span>{data[key]}위</span>\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    });\r\n    console.log(rankContents);\r\n    return rankContents;\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.rankWrapper}>\r\n      {createRanks(data, type)}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RankCard;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\hooks\\useBtn.js",["160","161"],"import React, { useState } from \"react\";\r\n\r\nconst useBtn = (initState) => {\r\n  const [button1, setButton1] = useState(initState);\r\n  const [button2, setButton2] = useState(initState);\r\n  const [text1, setText1] = useState();\r\n  const [text2, setText2] = useState();\r\n\r\n  const initBtn = (expanded) => {\r\n    switch (expanded) {\r\n      case \"panel1\":\r\n        setButton1(\"dept\");\r\n        setText1(\"부서 이동\");\r\n        setButton2(\"salary\");\r\n        setText2(\"연봉 변동\");\r\n        return;\r\n      case \"panel2\":\r\n        setButton1(\"steadRank\");\r\n        setText1(\"근속 랭킹\");\r\n        setButton2(\"salaryRank\");\r\n        setText2(\"연봉 랭킹\");\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return [\r\n    { button1: button1, button2: button2, text1: text1, text2: text2 },\r\n    initBtn,\r\n  ];\r\n};\r\n\r\nexport default useBtn;\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\DefaultBackground.js",[],"C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\SearchBar\\context\\KeywordsContext.js",["162"],"import React, { useReducer, createContext, useMemo } from \"react\";\r\n\r\nconst initState = [\"recent keyword\"];\r\n\r\nconst keywordsReducer = (state = initState, action) => {\r\n  const storage = JSON.parse(localStorage.getItem(\"RECENT\"));\r\n\r\n  switch (action.type) {\r\n    case \"init\":\r\n      let initializedState;\r\n      if (storage === null) {\r\n        return;\r\n      } else if (state.length === 1) {\r\n        initializedState = state.concat(storage);\r\n        return initializedState;\r\n      } else {\r\n        return;\r\n      }\r\n\r\n    case \"add\":\r\n      const newKeyword = {\r\n        category: action.category,\r\n        index: Date.now(),\r\n        value: action.keyword,\r\n      };\r\n      const addedState = state.concat(newKeyword);\r\n      if (storage === null) {\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedState.slice()));\r\n      } else {\r\n        const addedStorage = storage.slice();\r\n        addedStorage.push(newKeyword);\r\n        localStorage.setItem(\"RECENT\", JSON.stringify(addedStorage));\r\n      }\r\n\r\n      return addedState;\r\n    case \"delete\":\r\n      console.log(\"DELETE\", action.identifier);\r\n      const deletedState = state.filter((el, idx) => {\r\n        return el.index !== action.identifier;\r\n      });\r\n      console.log(\"deletedState\", deletedState);\r\n      const deletedStorage = storage.filter((el, idx) => {\r\n        return el.index !== action.identifier;\r\n      });\r\n      localStorage.setItem(\"RECENT\", JSON.stringify(deletedStorage));\r\n      return deletedState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/*이제, state 와 dispatch 를 Context 통하여 다른 컴포넌트에서 바로 사용 할 수 있게 해줄건데요, 우리는 하나의 Context 를 만들어서 state 와 dispatch 를 함께 넣어주는 대신에, 두개의 Context 를 만들어서 따로 따로 넣어줄 것입니다. 이렇게 하면 dispatch 만 필요한 컴포넌트에서 불필요한 렌더링을 방지 할 수 있습니다. 추가적으로, 사용하게 되는 과정에서 더욱 편리하기도 합니다.\r\n\r\n */\r\nexport const KeywordsStateContext = createContext();\r\nexport const KeywordsDispatchContext = createContext();\r\n\r\nexport const KeywordsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(keywordsReducer, initState);\r\n\r\n  return (\r\n    <KeywordsStateContext.Provider value={state}>\r\n      <KeywordsDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </KeywordsDispatchContext.Provider>\r\n    </KeywordsStateContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\iso98\\Desktop\\프론트엔드스터디\\REACT\\팀프로젝트\\employee_mark_front\\src\\components\\UI\\Loader.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":13,"column":9,"nodeType":"169","messageId":"170","endLine":13,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":19,"column":6,"nodeType":"173","endLine":19,"endColumn":16,"suggestions":"174"},{"ruleId":"167","severity":1,"message":"175","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":12},{"ruleId":"167","severity":1,"message":"176","line":5,"column":11,"nodeType":"169","messageId":"170","endLine":5,"endColumn":19},{"ruleId":"167","severity":1,"message":"177","line":5,"column":31,"nodeType":"169","messageId":"170","endLine":5,"endColumn":44},{"ruleId":"171","severity":1,"message":"178","line":9,"column":6,"nodeType":"173","endLine":9,"endColumn":8,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"168","line":19,"column":25,"nodeType":"169","messageId":"170","endLine":19,"endColumn":33},{"ruleId":"171","severity":1,"message":"181","line":113,"column":6,"nodeType":"173","endLine":113,"endColumn":8,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"183","line":267,"column":10,"nodeType":"169","messageId":"170","endLine":267,"endColumn":18},{"ruleId":"167","severity":1,"message":"184","line":267,"column":20,"nodeType":"169","messageId":"170","endLine":267,"endColumn":31},{"ruleId":"171","severity":1,"message":"185","line":284,"column":6,"nodeType":"173","endLine":284,"endColumn":8,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":346,"column":5,"nodeType":"189","messageId":"190","endLine":392,"endColumn":6},{"ruleId":"191","severity":1,"message":"192","line":437,"column":3,"nodeType":"193","messageId":"194","endLine":439,"endColumn":4},{"ruleId":"167","severity":1,"message":"195","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"196","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":17},{"ruleId":"167","severity":1,"message":"197","line":50,"column":5,"nodeType":"169","messageId":"170","endLine":50,"endColumn":15},{"ruleId":"167","severity":1,"message":"198","line":53,"column":5,"nodeType":"169","messageId":"170","endLine":53,"endColumn":11},{"ruleId":"167","severity":1,"message":"199","line":54,"column":5,"nodeType":"169","messageId":"170","endLine":54,"endColumn":14},{"ruleId":"167","severity":1,"message":"200","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"195","line":1,"column":23,"nodeType":"169","messageId":"170","endLine":1,"endColumn":31},{"ruleId":"167","severity":1,"message":"201","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":70,"column":5,"nodeType":"204","messageId":"205","endLine":70,"endColumn":14},{"ruleId":"167","severity":1,"message":"195","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"206","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":22,"column":7,"nodeType":"209","messageId":"210","endLine":23,"endColumn":16},{"ruleId":"167","severity":1,"message":"211","line":1,"column":44,"nodeType":"169","messageId":"170","endLine":1,"endColumn":51},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'initPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'render'. Either include it or remove the dependency array. You can also do a functional update 'setRender(r => ...)' if you only need 'render' in the 'setRender' call.","ArrayExpression",["214"],"'grey' is defined but never used.","'location' is assigned a value but never used.","'isInitialized' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initPage'. Either include it or remove the dependency array.",["215"],"'useEffect' is defined but never used.","React Hook useCallback has missing dependencies: 'getEmployeeData' and 'page.defaultPage'. Either include them or remove the dependency array.",["216"],"'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initLocalStorage' and 'keywords.length'. Either include them or remove the dependency array.",["217"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'useDialog' is defined but never used.","'birth_date' is assigned a value but never used.","'gender' is assigned a value but never used.","'hire_date' is assigned a value but never used.","'axios' is defined but never used.","'memo' is defined but never used.","no-dupe-keys","Duplicate key 'transform'.","ObjectExpression","unexpected","'React' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [location, render]",{"range":"226","text":"227"},"Update the dependencies array to be: [initPage]",{"range":"228","text":"229"},"Update the dependencies array to be: [getEmployeeData, page.defaultPage]",{"range":"230","text":"231"},"Update the dependencies array to be: [initLocalStorage, keywords.length]",{"range":"232","text":"233"},[538,548],"[location, render]",[239,241],"[initPage]",[3816,3818],"[getEmployeeData, page.defaultPage]",[7290,7292],"[initLocalStorage, keywords.length]"]